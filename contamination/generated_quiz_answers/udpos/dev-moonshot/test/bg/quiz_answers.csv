answer,prompt
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Аз съм , ако желаеш да чуеш , в най-критичния извив на живота си .
tags: PRON AUX PUNCT SCONJ VERB AUX VERB PUNCT ADP ADJ NOUN ADP NOUN PRON PUNCT
tagged_tokens: Аз_PRON съм_AUX ,_PUNCT ако_SCONJ желаеш_VERB да_AUX чуеш_VERB ,_PUNCT в_ADP най-критичния_ADJ извив_NOUN на_ADP живота_NOUN си_PRON ._PUNCT

B) tokens: Аз съм , ако търсиш да разбереш , в най-ключовия момент на живота си .
tags: PRON AUX PUNCT SCONJ VERB AUX VERB PUNCT ADP ADJ NOUN ADP NOUN PRON PUNCT
tagged_tokens: Аз_PRON съм_AUX ,_PUNCT ако_SCONJ търсиш_VERB да_AUX разбереш_VERB ,_PUNCT в_ADP най-ключовия_ADJ момент_NOUN на_ADP живота_NOUN си_PRON ._PUNCT

C) tokens: Аз съм , ако искаш да узнаеш , в най-съществения прелом на живота си .
tags: PRON AUX PUNCT SCONJ VERB AUX VERB PUNCT ADP ADJ NOUN ADP NOUN PRON PUNCT
tagged_tokens: Аз_PRON съм_AUX ,_PUNCT ако_SCONJ искаш_VERB да_AUX узнаеш_VERB ,_PUNCT в_ADP най-съществения_ADJ прелом_NOUN на_ADP живота_NOUN си_PRON ._PUNCTD) tokens: Аз съм , ако искаш да знаеш , в най-решителния завой на живота си .
tags: PRON AUX PUNCT SCONJ VERB AUX VERB PUNCT ADP ADJ NOUN ADP NOUN PRON PUNCT
tagged_tokens: Аз_PRON съм_AUX ,_PUNCT ако_SCONJ искаш_VERB да_AUX знаеш_VERB ,_PUNCT в_ADP най-решителния_ADJ завой_NOUN на_ADP живота_NOUN си_PRON ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Може ли да съм пристигнал късно ?
tags: AUX INTJ VERB AUX VERB ADV PUNCT
tagged_tokens: Може_AUX ли_INTJ да_VERB съм_AUX пристигнал_VERB късно_ADV ?_PUNCT

B) tokens: Няма ли да съм допуснал закъснение ?
tags: AUX INTJ VERB AUX VERB NOUN PUNCT
tagged_tokens: Няма_AUX ли_INTJ да_VERB съм_AUX допуснал_VERB закъснение_NOUN ?_PUNCT

C) tokens: Не е ли възможно да съм отложил ?
tags: INTJ AUX INTJ ADJ VERB AUX VERB PUNCT
tagged_tokens: Не_INTJ е_AUX ли_INTJ възможно_ADJ да_VERB съм_AUX отложил_VERB ?_PUNCTD) tokens: Да не би да съм закъснял ?
tags: AUX INTJ VERB AUX AUX VERB PUNCT
tagged_tokens: Да_AUX не_INTJ би_VERB да_AUX съм_AUX закъснял_VERB ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Ти не си глух ли ?
tags: PRON PART AUX ADJ PART PUNCT
tagged_tokens: Ти_PRON не_PART си_AUX глух_ADJ ли_PART ?_PUNCT

B) tokens: Ти да не е заглушило ?
tags: PRON AUX PART VERB VERB PUNCT
tagged_tokens: Ти_PRON да_AUX не_PART е_VERB заглушило_VERB ?_PUNCT

C) tokens: Ти не слушаш ли ?
tags: PRON PART VERB PART PUNCT
tagged_tokens: Ти_PRON не_PART слушаш_VERB ли_PART ?_PUNCTD) tokens: Ти да не оглуша ?
tags: PRON AUX PART VERB PUNCT
tagged_tokens: Ти_PRON да_AUX не_PART оглуша_VERB ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Дъждът и си иска в стреха да бъде .
tags: VERB PRON PRON ADP NOUN AUX VERB PUNCT
tagged_tokens: Дъждът_VERB и_PRON си_PRON в_ADP стреха_NOUN да_AUX бъде_VERB ._PUNCT

B) tokens: Валежът му личи под керемида да обитава .
tags: VERB PRON VERB ADP NOUN AUX VERB PUNCT
tagged_tokens: Валежът_VERB му_PRON личи_VERB под_ADP керемида_NOUN да_AUX обитава_VERB ._PUNCT

C) tokens: Заповедът му трябва под плета да живее .
tags: VERB PRON VERB ADP NOUN AUX VERB PUNCT
tagged_tokens: Заповедът_VERB му_PRON трябва_VERB под_ADP плета_NOUN да_AUX живее_VERB ._PUNCTD) tokens: Дощя му се под покрив да живее .
tags: VERB PRON PRON ADP NOUN AUX VERB PUNCT
tagged_tokens: Дощя_VERB му_PRON се_PRON под_ADP покрив_NOUN да_AUX живее_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Занесете от кухната чаша вода .
tags: VERB ADP NOUN NOUN NOUN PUNCT
tagged_tokens: Занесете_VERB от_ADP кухната_NOUN чаша_NOUN вода_NOUN ._PUNCT

B) tokens: Принесете от кухнята купа вода .
tags: VERB ADP NOUN NOUN NOUN PUNCT
tagged_tokens: Принесете_VERB от_ADP кухнята_NOUN купа_NOUN вода_NOUN ._PUNCT

C) tokens: Доставете от кухната кана вода .
tags: VERB ADP NOUN NOUN NOUN PUNCT
tagged_tokens: Доставете_VERB от_ADP кухнята_NOUN кана_NOUN вода_NOUN ._PUNCTD) tokens: Донесете от кухнята чаша вода .
tags: VERB ADP NOUN NOUN NOUN PUNCT
tagged_tokens: Донесете_VERB от_ADP кухнята_NOUN чаша_NOUN вода_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Написал е много романи и театрални произведения .
tags: VERB AUX ADV NOUN CCONJ ADJ NOUN PUNCT
tagged_tokens: Написал_VERB е_AUX много_ADV романи_NOUN и_CCONJ театрални_ADJ произведения_NOUN ._PUNCT

B) tokens: Създал е достатъчно разкази и сценични пиеси .
tags: VERB AUX ADJ NOUN CCONJ ADJ NOUN PUNCT
tagged_tokens: Създал_VERB е_AUX достатъчно_ADJ разкази_NOUN и_CCONJ сценични_ADJ пиеси_NOUN ._PUNCT

C) tokens: Измислил е множество истории и драматургични творби .
tags: VERB AUX NOUN NOUN CCONJ ADJ NOUN PUNCT
tagged_tokens: Измислил_VERB е_AUX множество_NOUN истории_NOUN и_CCONJ драматургични_ADJ творби_NOUN ._PUNCTD) tokens: Писал е доста повести и драми .
tags: VERB AUX ADV NOUN CCONJ NOUN PUNCT
tagged_tokens: Писал_VERB е_AUX доста_ADV повести_NOUN и_CCONJ драми_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Тя - скромната жена - се разплака .
tags: PRON PUNCT ADJ NOUN PUNCT REFL VERB PUNCT
tagged_tokens: Тя_PRON -_PUNCT скромната_ADJ жена_NOUN -_PUNCT се_REFL разплака_VERB ._PUNCT

B) tokens: Тя - неволната лейди - проли сълзи .
tags: PRON PUNCT ADJ NOUN PUNCT VERB NOUN PUNCT
tagged_tokens: Тя_PRON -_PUNCT неволната_ADJ лейди_NOUN -_PUNCT проли_VERB сълзи_NOUN ._PUNCT

C) tokens: Тя - нещастната госпожа - избухна в плач .
tags: PRON PUNCT ADJ NOUN PUNCT VERB ADP NOUN PUNCT
tagged_tokens: Тя_PRON -_PUNCT нещастната_ADJ госпожа_NOUN -_PUNCT избухна_VERB в_ADP плач_NOUN ._PUNCTD) tokens: Тя - бедната дама - започна да плаче .
tags: PRON PUNCT ADJ NOUN PUNCT VERB AUX VERB PUNCT
tagged_tokens: Тя_PRON -_PUNCT бедната_ADJ дама_NOUN -_PUNCT започна_VERB да_AUX плаче_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Вчера читах до сутринта .
tags: ADV VERB ADP NOUN PUNCT
tagged_tokens: Вчера_ADV читах_VERB до_ADP сутринта_NOUN ._PUNCT

B) tokens: През нощта четях до зори .
tags: ADP NOUN VERB ADP NOUN PUNCT
tagged_tokens: През_ADP нощта_NOUN четях_VERB до_ADP зори_NOUN ._PUNCT

C) tokens: След залез читах до ранина .
tags: ADP NOUN VERB ADP NOUN PUNCT
tagged_tokens: След_ADP залез_NOUN читах_VERB до_ADP ранина_NOUN ._PUNCTD) tokens: Снощи четох до късно .
tags: ADV VERB ADP ADV PUNCT
tagged_tokens: Снощи_ADV четох_VERB до_ADP късно_ADV ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Той обмисли бързо .
tags: PRON VERB ADV PUNCT
tagged_tokens: Той_PRON обмисли_VERB бързо_ADV ._PUNCT

B) tokens: Той разсъждава скоро .
tags: PRON VERB ADV PUNCT
tagged_tokens: Той_PRON разсъждава_VERB скоро_ADV ._PUNCT

C) tokens: Той премисли светкавично .
tags: PRON VERB ADV PUNCT
tagged_tokens: Той_PRON премисли_VERB светкавично_ADV ._PUNCTD) tokens: Той продума кратко .
tags: PRON VERB ADV PUNCT
tagged_tokens: Той_PRON продума_VERB кратко_ADV ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Около екипа се създава неуязвима зид от селяни .
tags: ADP NOUN PRON VERB ADJ NOUN ADP NOUN PUNCT
tagged_tokens: Около_ADP екипа_NOUN се_PRON създава_VERB неуязвима_ADJ зид_NOUN от_ADP селяни_NOUN ._PUNCT

B) tokens: По бригадата се формира недостъпна ограда от селяни .
tags: ADP NOUN PRON VERB ADJ NOUN ADP NOUN PUNCT
tagged_tokens: По_ADP бригадата_NOUN се_PRON формира_VERB недостъпна_ADJ ограда_NOUN от_ADP селяни_NOUN ._PUNCT

C) tokens: Край отряда се изгражда несъборима бариера от селяни .
tags: ADP NOUN PRON VERB ADJ NOUN ADP NOUN PUNCT
tagged_tokens: Край_ADP отряда_NOUN се_PRON изгражда_VERB несъборима_ADJ бариера_NOUN от_ADP селяни_NOUN ._PUNCTD) tokens: Около дружината се образува непробиваема стена от селяни .
tags: ADP NOUN PRON VERB ADJ NOUN ADP NOUN PUNCT
tagged_tokens: Около_ADP дружината_NOUN се_PRON образува_VERB непробиваема_ADJ стена_NOUN от_ADP селяни_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Проливът моментално спря .
tags: NOUN ADV VERB PUNCT
tagged_tokens: Проливът_NOUN моментално_ADV спря_VERB ._PUNCT

B) tokens: Залпът незабавно прекрати .
tags: NOUN ADV VERB PUNCT
tagged_tokens: Залпът_NOUN незабавно_ADV прекрати_VERB ._PUNCT

C) tokens: Ливада изведнъж замлъкна .
tags: NOUN ADV VERB PUNCT
tagged_tokens: Ливада_NOUN изведнъж_ADV замлъкна_VERB ._PUNCTD) tokens: Дъждът мигновено се пресече .
tags: NOUN ADV PRON VERB PUNCT
tagged_tokens: Дъждът_NOUN мигновено_ADV се_PRON пресече_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Ще навляза плавно , скромно ще седна .
tags: AUX VERB ADV PUNCT ADV AUX VERB PUNCT
tagged_tokens: Ще_AUX навляза_VERB плавно_ADV ,_PUNCT скромно_ADV ще_AUX седна_VERB ._PUNCT

B) tokens: Ще влеза нежно , смирено ще потулна .
tags: AUX VERB ADV PUNCT ADV AUX VERB PUNCT
tagged_tokens: Ще_AUX влеза_VERB нежно_ADV ,_PUNCT смирено_ADV ще_AUX потулна_VERB ._PUNCT

C) tokens: Ще проникна меко , тихичко ще заседна .
tags: AUX VERB ADV PUNCT ADV AUX VERB PUNCT
tagged_tokens: Ще_AUX проникна_VERB меко_ADV ,_PUNCT тихичко_ADV ще_AUX заседна_VERB ._PUNCTD) tokens: Ще вляза тихо , кротко ще приседна .
tags: AUX VERB ADV PUNCT ADV AUX VERB PUNCT
tagged_tokens: Ще_AUX вляза_VERB тихо_ADV ,_PUNCT кротко_ADV ще_AUX приседна_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Нищо вече не спи за сън .
tags: PRON ADV PART VERB ADP NOUN PUNCT
tagged_tokens: Нищо_PRON вече_ADV не_PART спи_VERB за_ADP сън_NOUN ._PUNCT

B) tokens: Все вече си легна за сън .
tags: PRON ADV PRON VERB ADP NOUN PUNCT
tagged_tokens: Все_PRON вече_ADV си_PRON легна_VERB за_ADP сън_NOUN ._PUNCT

C) tokens: Някой вече ли се отдаде на сън .
tags: PRON ADV PART PRON VERB ADP NOUN PUNCT
tagged_tokens: Някой_PRON вече_ADV ли_PART се_PRON отдаде_VERB на_ADP сън_NOUN ._PUNCTD) tokens: Всичко вече се прибра за сън .
tags: PRON ADV PRON VERB ADP NOUN PUNCT
tagged_tokens: Всичко_PRON вече_ADV се_PRON прибра_VERB за_ADP сън_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Върховната задача изисква каквито и да било постъпки .
tags: ADJ NOUN VERB DET CONJ ADV VERB NOUN PUNCT
tagged_tokens: Върховната_ADJ задача_NOUN изисква_VERB каквито_DET и_CONJ да_ADV било_VERB постъпки_NOUN ._PUNCT

B) tokens: Главният замисъл налага всичкакви деяния .
tags: ADJ NOUN VERB DET NOUN PUNCT
tagged_tokens: Главният_ADJ замисъл_NOUN налага_VERB всичкакви_DET деяния_NOUN ._PUNCT

C) tokens: Съществената цел изисква всяко възможно действие .
tags: ADJ NOUN VERB DET ADJ NOUN PUNCT
tagged_tokens: Съществената_ADJ цел_NOUN изисква_VERB всяко_DET възможно_ADJ действие_NOUN ._PUNCTD) tokens: Великата цел заслужава всякакви жертви .
tags: ADJ NOUN VERB DET NOUN PUNCT
tagged_tokens: Великата_ADJ цел_NOUN заслужава_VERB всякакви_DET жертви_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Група светли патки , които почиваха на площадката , изплашени се разпръснаха и крякаха .
tags: NOUN ADJ NOUN PUNCT PRON VERB ADP NOUN PUNCT ADJ PRON VERB CCONJ VERB PUNCT
tagged_tokens: Група_NOUN светли_ADJ патки_NOUN ,_PUNCT които_PRON почиваха_VERB на_ADP площадката_NOUN ,_PUNCT изплашени_ADJ се_PRON разпръснаха_VERB и_CCONJ крякаха_VERB ._PUNCT

B) tokens: Хълм белици , които валяха на двора , страхуващи се разбягваха и пищяха .
tags: NOUN NOUN PUNCT PRON VERB ADP NOUN PUNCT VERB ADJ PRON VERB CCONJ VERB PUNCT
tagged_tokens: Хълм_NOUN белици_NOUN ,_PUNCT които_PRON валяха_VERB на_ADP двора_NOUN ,_PUNCT страхуващи_VERB се_PRON разбягваха_VERB и_CCONJ пищяха_VERB ._PUNCT

C) tokens: Стъпка бели хвойни , които държаха на площа , смутени се разлетяха и цвиленяха .
tags: NOUN ADJ NOUN PUNCT PRON VERB ADP NOUN PUNCT ADJ PRON VERB CCONJ VERB PUNCT
tagged_tokens: Стъпка_NOUN бели_ADJ хвойни_NOUN ,_PUNCT които_PRON държаха_VERB на_ADP площа_NOUN ,_PUNCT смутени_ADJ се_PRON разлетяха_VERB и_CCONJ цвиленяха_VERB ._PUNCTD) tokens: Куп бели гъски , които лежаха на двора , подплашено се разбягаха и съскаха .
tags: NOUN ADJ NOUN PUNCT PRON VERB ADP NOUN PUNCT ADV PRON VERB CCONJ VERB PUNCT
tagged_tokens: Куп_NOUN бели_ADJ гъски_NOUN ,_PUNCT които_PRON лежаха_VERB на_ADP двора_NOUN ,_PUNCT подплашено_ADV се_PRON разбягаха_VERB и_CCONJ съскаха_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Извиваше се пара и студ .
tags: VERB PRON NOUN CCONJ NOUN PUNCT
tagged_tokens: Извиваше_VERB се_PRON пара_NOUN и_CCONJ студ_NOUN ._PUNCT

B) tokens: Подаваше влажност и хлад .
tags: VERB NOUN CCONJ NOUN PUNCT
tagged_tokens: Подаваше_VERB влажност_NOUN и_CCONJ хлад_NOUN ._PUNCT

C) tokens: Издишаше се трепет и зяпа .
tags: VERB PRON NOUN CCONJ NOUN PUNCT
tagged_tokens: Издишаше_VERB се_PRON трепет_NOUN и_CCONJ зяпа_NOUN ._PUNCTD) tokens: Лъхаше влага и хладина .
tags: VERB NOUN CCONJ NOUN PUNCT
tagged_tokens: Лъхаше_VERB влага_NOUN и_CCONJ хладина_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Нощна буремна мълния обзе хълмовете .
tags: ADJ ADJ NOUN VERB NOUN PUNCT
tagged_tokens: Нощна_ADJ буремна_ADJ мълния_NOUN обзе_VERB хълмовете_NOUN ._PUNCT

B) tokens: Нощна грозна светкавица обърка скалите .
tags: ADJ ADJ NOUN VERB NOUN PUNCT
tagged_tokens: Нощна_ADJ грозна_ADJ светкавица_NOUN обърка_VERB скалите_NOUN ._PUNCT

C) tokens: Нощна силна електрическа разряда разклати върховете .
tags: ADJ ADJ ADJ NOUN VERB NOUN PUNCT
tagged_tokens: Нощна_ADJ силна_ADJ електрическа_ADJ разряда_NOUN разклати_VERB върховете_NOUN ._PUNCTD) tokens: Нощна пролетна гръмотевица разтърси планината .
tags: ADJ ADJ NOUN VERB NOUN PUNCT
tagged_tokens: Нощна_ADJ пролетна_ADJ гръмотевица_NOUN разтърси_VERB планината_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Ранната_NOUN в_ADP Добруджа_PROPN -_PUNCT това_DET са_AUX широки_ADJ полета_NOUN с_ADP жълти_ADJ китки_NOUN .
tags: NOUN ADP PROPN PUNCT DET AUX ADJ NOUN ADP ADJ NOUN PUNCT
tagged_tokens: Ранната_NOUN в_ADP Добруджа_PROPN -_PUNCT това_DET са_AUX широки_ADJ полета_NOUN с_ADP жълти_ADJ китки_NOUN ._PUNCT

B) tokens: Настана_NOUN в_ADP Добруджа_PROPN -_PUNCT това_DET се_AUX вижда_ADJ океан_NOUN от_ADP бляскави_ADJ посеви_NOUN .
tags: NOUN ADP PROPN PUNCT DET AUX ADJ NOUN ADP ADJ NOUN PUNCT
tagged_tokens: Настана_NOUN в_ADP Добруджа_PROPN -_PUNCT това_DET се_AUX вижда_ADJ океан_NOUN от_ADP бляскави_ADJ посеви_NOUN ._PUNCT

C) tokens: Пролет_NOUN на_ADP Добруджа_PROPN -_PUNCT това_DET е_AUX красиво_ADJ каре_NOUN от_ADP рушеници_ADJ ечемици_NOUN .
tags: NOUN ADP PROPN PUNCT DET AUX ADJ NOUN ADP ADJ NOUN PUNCT
tagged_tokens: Пролет_NOUN на_ADP Добруджа_PROPN -_PUNCT това_DET е_AUX красиво_ADJ каре_NOUN от_ADP рушеници_ADJ ечемици_NOUN ._PUNCTD) tokens: Пролетта на Добруджа - това е безкрайно море от златни ниви .
tags: NOUN ADP PROPN PUNCT DET AUX ADJ NOUN ADP ADJ NOUN PUNCT
tagged_tokens: Пролетта_NOUN на_ADP Добруджа_PROPN -_PUNCT това_DET е_AUX безкрайно_ADJ море_NOUN от_ADP златни_ADJ ниви_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Тя , сиромашката жена , се разниза .
tags: PRON PUNCT ADJ NOUN PUNCT PRON VERB PUNCT
tagged_tokens: Тя_PRON ,_PUNCT сиромашката_ADJ жена_NOUN ,_PUNCT се_PRON разниза_VERB ._PUNCT

B) tokens: Тя , злополучната дама , избухна в плач .
tags: PRON PUNCT ADJ NOUN PUNCT VERB ADP NOUN PUNCT
tagged_tokens: Тя_PRON ,_PUNCT злополучната_ADJ дама_NOUN ,_PUNCT избухна_VERB в_ADP плач_NOUN ._PUNCT

C) tokens: Тя , нещастната жена , заплака .
tags: PRON PUNCT ADJ NOUN PUNCT VERB PUNCT
tagged_tokens: Тя_PRON ,_PUNCT нещастната_ADJ жена_NOUN ,_PUNCT заплака_VERB ._PUNCTD) tokens: Тя , бедната дама , започна да плаче .
tags: PRON PUNCT ADJ NOUN PUNCT VERB AUX VERB PUNCT
tagged_tokens: Тя_PRON ,_PUNCT бедната_ADJ дама_NOUN ,_PUNCT започна_VERB да_AUX плаче_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Наблизо дойде млада Стояница с съпруга си .
tags: ADV VERB ADJ PROPN ADP NOUN PRON PUNCT
tagged_tokens: Наблизо_ADV дойде_VERB млада_ADJ Стояница_PROPN с_ADP съпруга_NOUN си_PRON ._PUNCT

B) tokens: Скоро пристигна замъжна Стояница с партньора си .
tags: ADV VERB ADJ PROPN ADP NOUN PRON PUNCT
tagged_tokens: Скоро_ADV пристигна_VERB замъжна_ADJ Стояница_PROPN с_ADP партньора_NOUN си_PRON ._PUNCT

C) tokens: Наскоро се завърна невеста Стояница с мъжа си .
tags: ADV PRON VERB NOUN PROPN ADP NOUN PRON PUNCT
tagged_tokens: Наскоро_ADV се_PRON завърна_VERB невеста_NOUN Стояница_PROPN с_ADP мъжа_NOUN си_PRON ._PUNCTD) tokens: Скоро се върна булка Стояница с мъжа си .
tags: ADV PRON VERB NOUN PROPN ADP NOUN PRON PUNCT
tagged_tokens: Скоро_ADV се_PRON върна_VERB булка_NOUN Стояница_PROPN с_ADP мъжа_NOUN си_PRON ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""A""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Калио , свърши колата .
tags: PROPN PUNCT VERB NOUN PUNCT
tagged_tokens: Калио_PROPN ,_PUNCT свърши_VERB колата_NOUN ._PUNCT

B) tokens: Калин , извърши колата .
tags: PROPN PUNCT VERB NOUN PUNCT
tagged_tokens: Калин_PROPN ,_PUNCT извърши_VERB колата_NOUN ._PUNCT

C) tokens: Калинец , приключи колата .
tags: PROPN PUNCT VERB NOUN PUNCT
tagged_tokens: Калинец_PROPN ,_PUNCT приключи_VERB колата_NOUN ._PUNCTD) tokens: Калине , докарай колата .
tags: PROPN PUNCT VERB NOUN PUNCT
tagged_tokens: Калине_PROPN ,_PUNCT докарай_VERB колата_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Искал бих да береш .
tags: VERB AUX AUX VERB PUNCT
tagged_tokens: Искал_VERB бих_AUX да_AUX береш_VERB ._PUNCT

B) tokens: Поел бих да косиш .
tags: VERB AUX AUX VERB PUNCT
tagged_tokens: Поел_VERB бих_AUX да_AUX косиш_VERB ._PUNCT

C) tokens: Решил бих да вкопаваш .
tags: VERB AUX AUX VERB PUNCT
tagged_tokens: Решил_VERB бих_AUX да_AUX вкопаваш_VERB ._PUNCTD) tokens: Щял бил да жъне .
tags: VERB AUX AUX VERB PUNCT
tagged_tokens: Щял_VERB бил_AUX да_AUX жъне_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Огнянов сгъна , хвана малчугана и продължи напред .
tags: PROPN PRON VERB PUNCT VERB NOUN CCONJ VERB ADV PUNCT
tagged_tokens: Огнянов_PROPN сгъна_PRON ,_PUNCT хвана_VERB малчугана_NOUN и_CCONJ продължи_VERB напред_ADV ._PUNCT

B) tokens: Огнянов склони , сграбчи детенцето и тръгна напред .
tags: PROPN PRON VERB PUNCT VERB NOUN CCONJ VERB ADV PUNCT
tagged_tokens: Огнянов_PROPN склони_PRON ,_PUNCT сграбчи_VERB детенцето_NOUN и_CCONJ тръгна_VERB напред_ADV ._PUNCT

C) tokens: Огнянов почна , улови дечицата и се запъти напред .
tags: PROPN PRON VERB PUNCT VERB NOUN CCONJ PRON VERB ADV PUNCT
tagged_tokens: Огнянов_PROPN почна_PRON ,_PUNCT улови_VERB дечицата_NOUN и_CCONJ се_PRON запъти_VERB напред_ADV ._PUNCTD) tokens: Огнянов се наведе , взе детето и мина напред .
tags: PROPN PRON VERB PUNCT VERB NOUN CCONJ VERB ADV PUNCT
tagged_tokens: Огнянов_PROPN се_PRON наведе_VERB ,_PUNCT взе_VERB детето_NOUN и_CCONJ мина_VERB напред_ADV ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Назначихте ме за главатар и до този момент не сте ме попитали кой съм аз .
tags: VERB PRON ADP NOUN CCONJ ADP DET NOUN PART AUX PRON VERB PRON AUX PRON PUNCT
tagged_tokens: Назначихте_VERB ме_PRON за_ADP главатар_NOUN и_CCONJ до_ADP този_DET момент_NOUN не_PART сте_AUX ме_PRON попитали_VERB кой_PRON съм_AUX аз_PRON ._PUNCT

B) tokens: Избрали сте ме за хайдутин и дотук не сте ме питали кой съм аз .
tags: VERB AUX PRON ADP NOUN CCONJ ADJ PART AUX PRON VERB PRON AUX PRON PUNCT
tagged_tokens: Избрали_VERB сте_AUX ме_PRON за_ADP хайдутин_NOUN и_CCONJ дотук_ADJ не_PART сте_AUX ме_PRON питали_VERB кой_PRON съм_AUX аз_PRON ._PUNCT

C) tokens: Излъчихте ме за водач и досега не ме сте запитали кой съм аз .
tags: VERB PRON ADP NOUN CCONJ ADV PART PRON AUX VERB PRON AUX PRON PUNCT
tagged_tokens: Излъчихте_VERB ме_PRON за_ADP водач_NOUN и_CCONJ досега_ADV не_PART ме_PRON сте_AUX запитали_VERB кой_PRON съм_AUX аз_PRON ._PUNCTD) tokens: Избрахте ме за войвода и досега не сте ме попитали кой съм аз .
tags: VERB PRON ADP NOUN CCONJ ADV PART AUX PRON VERB PRON AUX PRON PUNCT
tagged_tokens: Избрахте_VERB ме_PRON за_ADP войвода_NOUN и_CCONJ досега_ADV не_PART сте_AUX ме_PRON попитали_VERB кой_PRON съм_AUX аз_PRON ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Земята се раздаваше , а плодовете от дървото си оставаха за всички .
tags: NOUN PRON VERB PUNCT CCONJ NOUN ADP NOUN PRON VERB ADP DET PUNCT
tagged_tokens: Земята_NOUN се_PRON раздаваше_VERB ,_PUNCT а_CCONJ плодовете_NOUN от_ADP дървото_NOUN си_PRON оставаха_VERB за_ADP всички_DET ._PUNCT

B) tokens: Земята се разпределяше , а плодите на дървото не се делиха .
tags: NOUN PRON VERB PUNCT CCONJ NOUN ADP NOUN PART PRON VERB PUNCT
tagged_tokens: Земята_NOUN се_PRON разпределяше_VERB ,_PUNCT а_CCONJ плодите_NOUN на_ADP дървото_NOUN не_PART се_PRON делиха_VERB ._PUNCT

C) tokens: Земята се разпореждаше , а плодът от дървото беше общински .
tags: NOUN PRON VERB PUNCT CCONJ NOUN ADP NOUN VERB ADJ PUNCT
tagged_tokens: Земята_NOUN се_PRON разпореждаше_VERB ,_PUNCT а_CCONJ плодът_NOUN от_ADP дървото_NOUN беше_VERB общински_ADJ ._PUNCTD) tokens: Земята се делеше , а плодът на дървото оставаше общ .
tags: NOUN PRON VERB PUNCT CCONJ NOUN ADP NOUN VERB ADJ PUNCT
tagged_tokens: Земята_NOUN се_PRON делеше_VERB ,_PUNCT а_CCONJ плодът_NOUN на_ADP дървото_NOUN оставаше_VERB общ_ADJ ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Зора ли е това , или е мрак ?
tags: NOUN PART AUX PRON PUNCT CCONJ AUX NOUN PUNCT
tagged_tokens: Зора_NOUN ли_PART е_AUX това_PRON ,_PUNCT или_CCONJ е_AUX мрак_NOUN ?_PUNCT

B) tokens: Светлина ли е това , или е тъмнина ?
tags: NOUN PART AUX PRON PUNCT CCONJ AUX NOUN PUNCT
tagged_tokens: Светлина_NOUN ли_PART е_AUX това_PRON ,_PUNCT или_CCONJ е_AUX тъмнина_NOUN ?_PUNCT

C) tokens: Утрин ли е това , или е вечер ?
tags: NOUN PART AUX PRON PUNCT CCONJ AUX NOUN PUNCT
tagged_tokens: Утрин_NOUN ли_PART е_AUX това_PRON ,_PUNCT или_CCONJ е_AUX вечер_NOUN ?_PUNCTD) tokens: Изгрев ли е това , или е заник ?
tags: NOUN PART AUX PRON PUNCT CCONJ AUX NOUN PUNCT
tagged_tokens: Изгрев_NOUN ли_PART е_AUX това_PRON ,_PUNCT или_CCONJ е_AUX заник_NOUN ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Аз не знам да има война .
tags: PRON PART VERB AUX VERB NOUN PUNCT
tagged_tokens: Аз_PRON не_PART знам_VERB да_AUX има_VERB война_NOUN ._PUNCT

B) tokens: Аз не съм чувал за война .
tags: PRON PART AUX VERB ADP NOUN PUNCT
tagged_tokens: Аз_PRON не_PART съм_AUX чувал_VERB за_ADP война_NOUN ._PUNCT

C) tokens: Аз не съм слушал да има война .
tags: PRON PART AUX VERB AUX VERB NOUN PUNCT
tagged_tokens: Аз_PRON не_PART съм_AUX слушал_VERB да_AUX има_VERB война_NOUN ._PUNCTD) tokens: Аз не съм чул да има война .
tags: PRON PART AUX VERB AUX VERB NOUN PUNCT
tagged_tokens: Аз_PRON не_PART съм_AUX чул_VERB да_AUX има_VERB война_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Обмислях не кога , а по какъв начин да се измъкна .
tags: VERB INTJ ADV PUNCT CCONJ SCONJ NOUN PUNCT PART AUX VERB PUNCT
tagged_tokens: Обмислях_VERB не_INTJ кога_ADV ,_PUNCT а_CCONJ по_SCONJ какъв_NOUN начин_NOUN да_PART се_PRON измъкна_VERB ._PUNCT

B) tokens: Разсъждавах не де , а по какъв принцип да се отърва .
tags: VERB INTJ ADV PUNCT CCONJ SCONJ NOUN PUNCT PART AUX PRON VERB PUNCT
tagged_tokens: Разсъждавах_VERB не_INTJ де_ADV ,_PUNCT а_CCONJ по_SCONJ какъв_NOUN принцип_NOUN да_PART се_PRON отърва_VERB ._PUNCT

C) tokens: Размишлях не къде , а по какъв метод да се освободя .
tags: VERB INTJ ADV PUNCT CCONJ SCONJ NOUN PUNCT PART AUX PRON VERB PUNCT
tagged_tokens: Размишлях_VERB не_INTJ къде_ADV ,_PUNCT а_CCONJ по_SCONJ какъв_NOUN метод_NOUN да_PART се_PRON освободя_VERB ._PUNCTD) tokens: Мислех не къде , а как да избягам .
tags: VERB INTJ ADV PUNCT CCONJ ADV AUX VERB PUNCT
tagged_tokens: Мислех_VERB не_INTJ къде_ADV ,_PUNCT а_CCONJ как_ADV да_AUX избягам_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Нищо не те интересува къде ходя и какво правя .
tags: PRON PART PRON VERB ADV VERB CCONJ DET VERB PUNCT
tagged_tokens: Нищо_PRON не_PART те_PRON интересува_VERB къде_ADV ходя_VERB и_CCONJ какво_DET правя_VERB ._PUNCT

B) tokens: Никакъв не те попита къде отиваш и какво вършиш .
tags: PRON PART PRON VERB ADV VERB CCONJ DET VERB PUNCT
tagged_tokens: Никакъв_PRON не_PART те_PRON попита_VERB къде_ADV отиваш_VERB и_CCONJ какво_DET вършиш_VERB ._PUNCT

C) tokens: Нищой не те запитва къде се движиш и какво правиш .
tags: PRON PART PRON VERB ADV VERB CCONJ DET VERB PUNCT
tagged_tokens: Нищой_PRON не_PART те_PRON запитва_VERB къде_ADV се_PRON движиш_VERB и_CCONJ какво_DET правиш_VERB ._PUNCTD) tokens: Никой не те пита къде ходиш и какво правиш .
tags: PRON PART PRON VERB ADV VERB CCONJ DET VERB PUNCT
tagged_tokens: Никой_PRON не_PART те_PRON пита_VERB къде_ADV ходиш_VERB и_CCONJ какво_DET правиш_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Любя когото се налага да любя .
tags: VERB PRON PRON AUX VERB PUNCT
tagged_tokens: Любя_VERB когото_PRON се_PRON налага_VERB да_AUX любя_VERB ._PUNCT

B) tokens: Намирам човека който трябва да намирам .
tags: VERB NOUN PRON VERB AUX VERB PUNCT
tagged_tokens: Намирам_VERB човека_NOUN който_PRON трябва_VERB да_AUX намирам_VERB ._PUNCT

C) tokens: Избирам го който дължа да избирам .
tags: VERB PRON PRON VERB AUX VERB PUNCT
tagged_tokens: Избирам_VERB го_PRON който_PRON дължа_VERB да_AUX избирам_VERB ._PUNCTD) tokens: Обичам когото трябва да обичам .
tags: VERB PRON VERB AUX VERB PUNCT
tagged_tokens: Обичам_VERB когото_PRON трябва_VERB да_AUX обичам_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Приятелче , аз бих искал да се опознаем .
tags: NOUN PUNCT PRON AUX VERB AUX PRON VERB PUNCT
tagged_tokens: Приятелче_NOUN ,_PUNCT аз_PRON бих_AUX искал_VERB да_AUX се_PRON опознаем_VERB ._PUNCT

B) tokens: Побратиме , аз бих харесал да се спознаем .
tags: NOUN PUNCT PRON AUX VERB AUX PRON VERB PUNCT
tagged_tokens: Побратиме_NOUN ,_PUNCT аз_PRON бих_AUX харесал_VERB да_AUX се_PRON спознаем_VERB ._PUNCT

C) tokens: Създателю , аз бих предпочел да се срещнем .
tags: NOUN PUNCT PRON AUX VERB AUX PRON VERB PUNCT
tagged_tokens: Създателю_NOUN ,_PUNCT аз_PRON бих_AUX предпочел_VERB да_AUX се_PRON срещнем_VERB ._PUNCTD) tokens: Приятелю , аз бих желал да се запознаем .
tags: NOUN PUNCT PRON AUX VERB AUX PRON VERB PUNCT
tagged_tokens: Приятелю_NOUN ,_PUNCT аз_PRON бих_AUX желал_VERB да_AUX се_PRON запознаем_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Наместо да пасиш без дело , дай ми ръка !
tags: ADP AUX VERB ADP NOUN PUNCT VERB PRON NOUN PUNCT
tagged_tokens: Наместо_ADP да_AUX пасиш_VERB без_ADP дело_NOUN ,_PUNCT дай_VERB ми_PRON ръка_NOUN !_PUNCT

B) tokens: Заместо да седиш без нищо , посъдействай ми !
tags: ADP AUX VERB ADP PRON PUNCT VERB PRON PUNCT
tagged_tokens: Заместо_ADP да_AUX седиш_VERB без_ADP нищо_PRON ,_PUNCT посъдействай_VERB ми_PRON !_PUNCT

C) tokens: Взаместо да чакаш без заетост , подкрепи ме !
tags: ADP AUX VERB ADP NOUN PUNCT VERB PRON PUNCT
tagged_tokens: Взаместо_ADP да_AUX чакаш_VERB без_ADP заетост_NOUN ,_PUNCT подкрепи_VERB ме_PRON !_PUNCTD) tokens: Вместо да стоиш без работа , помогни ми !
tags: ADP AUX VERB ADP NOUN PUNCT VERB PRON PUNCT
tagged_tokens: Вместо_ADP да_AUX стоиш_VERB без_ADP работа_NOUN ,_PUNCT помогни_VERB ми_PRON !_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Всеки я следеше , без да мръдне .
tags: PRON PRON VERB PUNCT ADP AUX VERB PUNCT
tagged_tokens: Всеки_PRON я_PRON следеше_VERB ,_PUNCT без_ADP да_AUX мръдне_VERB ._PUNCT

B) tokens: Всички я внимаваха , без да се дръпнат .
tags: PRON PRON VERB PUNCT ADP AUX PRON VERB PUNCT
tagged_tokens: Всички_PRON я_PRON внимаваха_VERB ,_PUNCT без_ADP да_AUX се_PRON дръпнат_VERB ._PUNCT

C) tokens: Всеки я прислушваше , без да се подвижи .
tags: PRON PRON VERB PUNCT ADP AUX PRON VERB PUNCT
tagged_tokens: Всеки_PRON я_PRON прислушваше_VERB ,_PUNCT без_ADP да_AUX се_PRON подвижи_VERB ._PUNCTD) tokens: Всички я слушаха , без да помръднат .
tags: PRON PRON VERB PUNCT ADP AUX VERB PUNCT
tagged_tokens: Всички_PRON я_PRON слушаха_VERB ,_PUNCT без_ADP да_AUX помръднат_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Аз така ще я настроя , че нищо и да не почуе .
tags: PRON ADV AUX PRON VERB PUNCT SCONJ NOUN CCONJ AUX PART VERB PUNCT
tagged_tokens: Аз_PRON така_ADV ще_AUX я_PRON настроя_VERB ,_PUNCT че_SCONJ нищо_NOUN и_CCONJ да_AUX не_PART почуе_VERB ._PUNCT

B) tokens: Аз такова ще я уредя , че никак и да не осети .
tags: PRON ADV AUX PRON VERB PUNCT SCONJ ADV CCONJ AUX PART VERB PUNCT
tagged_tokens: Аз_PRON такова_ADV ще_AUX я_PRON уредя_VERB ,_PUNCT че_SCONJ никак_ADV и_CCONJ да_AUX не_PART осети_VERB ._PUNCT

C) tokens: Аз ей ще я науча , че нито и да не почувства .
tags: PRON ADV AUX PRON VERB PUNCT SCONJ PART CCONJ AUX PART VERB PUNCT
tagged_tokens: Аз_PRON ей_ADV ще_AUX я_PRON науча_VERB ,_PUNCT че_SCONJ нито_PART и_CCONJ да_AUX не_PART почувства_VERB ._PUNCTD) tokens: Аз тъй ще я наглася , че няма и да усети .
tags: PRON ADV AUX PRON VERB PUNCT SCONJ VERB CCONJ AUX VERB PUNCT
tagged_tokens: Аз_PRON тъй_ADV ще_AUX я_PRON наглася_VERB ,_PUNCT че_SCONJ няма_VERB и_CCONJ да_AUX усети_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Докато е дарил зайче , то е било благо .
tags: SCONJ AUX VERB NOUN PUNCT PRON AUX VERB ADJ PUNCT
tagged_tokens: Докато_SCONJ е_AUX дарил_VERB зайче_NOUN ,_PUNCT то_PRON е_AUX било_VERB благо_ADJ ._PUNCT

B) tokens: Когато е паднал заекът , него е ставал мирен .
tags: SCONJ AUX VERB NOUN PUNCT PRON AUX VERB ADJ PUNCT
tagged_tokens: Когато_SCONJ е_AUX паднал_VERB заекът_NOUN ,_PUNCT него_PRON е_AUX ставал_VERB мирен_ADJ ._PUNCT

C) tokens: Докога е бил уловил заиче , то е имало добро .
tags: SCONJ AUX VERB VERB NOUN PUNCT PRON AUX VERB ADJ PUNCT
tagged_tokens: Докога_SCONJ е_AUX бил_VERB уловил_VERB заиче_NOUN ,_PUNCT то_PRON е_AUX имало_VERB добро_ADJ ._PUNCTD) tokens: Ако е убил заек , той е бил питомен .
tags: SCONJ AUX VERB NOUN PUNCT PRON AUX AUX ADJ PUNCT
tagged_tokens: Ако_SCONJ е_AUX убил_VERB заек_NOUN ,_PUNCT той_PRON е_AUX бил_AUX питомен_ADJ ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Ами така ще си умреш , ако не си готов да кръжиш .
tags: PART ADV AUX PRON VERB PUNCT SCONJ PART AUX PRON ADJ AUX VERB PUNCT
tagged_tokens: Ами_PART така_ADV ще_AUX си_PRON умреш_VERB ,_PUNCT ако_SCONJ не_PART си_AUX готов_ADJ да_AUX кръжиш_VERB ._PUNCT

B) tokens: Ето така ще си сгинеш , ако не си приготвил да планираш .
tags: PART ADV AUX PRON VERB PUNCT SCONJ PART AUX PRON VERB AUX VERB PUNCT
tagged_tokens: Ето_PART така_ADV ще_AUX си_PRON сгинеш_VERB ,_PUNCT ако_SCONJ не_PART си_AUX приготвил_VERB да_AUX планираш_VERB ._PUNCT

C) tokens: Така ще си скончаш , ако не си изкарал да летваш .
tags: ADV AUX PRON VERB PUNCT SCONJ PART AUX PRON VERB AUX VERB PUNCT
tagged_tokens: Така_ADV ще_AUX си_PRON скончаш_VERB ,_PUNCT ако_SCONJ не_PART си_AUX изкарал_VERB да_AUX летваш_VERB ._PUNCTD) tokens: Ей тъй ще си загинеш , ако не си се подготвил да летиш .
tags: PART ADV AUX PRON VERB PUNCT SCONJ PART AUX PRON VERB AUX VERB PUNCT
tagged_tokens: Ей_PART тъй_ADV ще_AUX си_PRON загинеш_VERB ,_PUNCT ако_SCONJ не_PART си_AUX се_PRON подготвил_VERB да_AUX летиш_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Аз не бих ли трудил тогава , разполагах със средства .
tags: PRON PART PART VERB ADV PUNCT VERB ADP NOUN PUNCT
tagged_tokens: Аз_PRON не_PART бих_PART трудил_VERB тогава_ADV ,_PUNCT разполагах_VERB със_ADP средства_NOUN ._PUNCT

B) tokens: Аз май работех тогава , държах парички .
tags: PRON PART VERB ADV PUNCT VERB NOUN PUNCT
tagged_tokens: Аз_PRON май_PART работех_VERB тогава_ADV ,_PUNCT държах_VERB парички_NOUN ._PUNCT

C) tokens: Аз ли не бях тогава на работа , имах лева .
tags: PRON PART PART VERB ADV ADP NOUN PUNCT VERB NOUN PUNCT
tagged_tokens: Аз_PRON ли_PART не_PART бях_VERB тогава_ADV на_ADP работа_NOUN ,_PUNCT имах_VERB лева_NOUN ._PUNCTD) tokens: Аз нали работех тогава , имах пари .
tags: PRON PART VERB ADV PUNCT VERB NOUN PUNCT
tagged_tokens: Аз_PRON нали_PART работех_VERB тогава_ADV ,_PUNCT имах_VERB пари_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Биляна само тебе ми споменава , докато е при мен .
tags: PROPN ADV PRON PRON VERB PUNCT SCONJ AUX ADP PRON PUNCT
tagged_tokens: Биляна_PROPN само_ADV тебе_PRON ми_PRON споменава_VERB ,_PUNCT докато_SCONJ е_AUX при_ADP мен_PRON ._PUNCT

B) tokens: Биляна постоянно теб ми цитира , когато е до мене .
tags: PROPN ADV PRON PRON VERB PUNCT ADV AUX ADP PRON PUNCT
tagged_tokens: Биляна_PROPN постоянно_ADV теб_PRON ми_PRON цитира_VERB ,_PUNCT когато_ADV е_AUX до_ADP мене_PRON ._PUNCT

C) tokens: Биляна непрекъснато теб ми повтаря , покато е със мен .
tags: PROPN ADV PRON PRON VERB PUNCT SCONJ AUX ADP PRON PUNCT
tagged_tokens: Биляна_PROPN непрекъснато_ADV теб_PRON ми_PRON повтаря_VERB ,_PUNCT покато_SCONJ е_AUX със_ADP мен_PRON ._PUNCTD) tokens: Биляна все за теб ми говори , откакто е с мене .
tags: PROPN ADV ADP PRON PRON VERB PUNCT ADV AUX ADP PRON PUNCT
tagged_tokens: Биляна_PROPN все_ADV за_ADP теб_PRON ми_PRON говори_VERB ,_PUNCT откакто_ADV е_AUX с_ADP мене_PRON ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: За каква бес понеже сме се занимавали отвъд Древна планина , като липсват сили .
tags: ADP DET NOUN SCONJ VERB PRON VERB ADP ADJ NOUN , SCONJ VERB NOUN .
tagged_tokens: За_ADP каква_DET бес_NOUN понеже_SCONJ сме_VERB се_PRON занимавали_VERB отвъд_ADP Древна_ADJ планина_NOUN ,_PUNCT като_SCONJ липсват_VERB сили_NOUN ._PUNCT

B) tokens: За какво зло искаме да се борим зад Синя планина , като не стигат сили .
tags: ADP DET NOUN VERB AUX PRON VERB ADP ADJ NOUN , SCONJ PART VERB NOUN .
tagged_tokens: За_ADP какво_DET зло_NOUN искаме_VERB да_AUX се_PRON борим_VERB зад_ADP Синя_ADJ планина_NOUN ,_PUNCT като_SCONJ не_PART стигат_VERB сили_NOUN ._PUNCT

C) tokens: За каква причина желаем да се нацапем извън Дряна планина , като недостигат сили .
tags: ADP DET NOUN VERB AUX PRON VERB ADP ADJ NOUN , SCONJ VERB NOUN .
tagged_tokens: За_ADP каква_DET причина_NOUN желаем_VERB да_AUX се_PRON нацапем_VERB извън_ADP Дряна_ADJ планина_NOUN ,_PUNCT като_SCONJ недостигат_VERB сили_NOUN ._PUNCTD) tokens: За какъв дявол ни трябваше да се мъкнем зад Стара планина , като нямаме сили .
tags: ADP DET NOUN PRON VERB AUX PRON VERB ADP ADJ NOUN PUNCT SCONJ VERB NOUN PUNCT
tagged_tokens: За_ADP какъв_DET дявол_NOUN ни_PRON трябваше_VERB да_AUX се_PRON мъкнем_VERB зад_ADP Стара_ADJ планина_NOUN ,_PUNCT като_SCONJ нямаме_VERB сили_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Кое Диме каза ръководителят , след като му представи направеното ?
tags: DET PRON VERB NOUN PUNCT SCONJ PRON VERB ADJ PUNCT
tagged_tokens: Кое_DET Диме_PRON каза_VERB ръководителят_NOUN ,_PUNCT след_SCONJ му_PRON представи_VERB направеното_ADJ ?_PUNCT

B) tokens: Какво ти обяви началницата , пък като му подаде написаното ?
tags: DET PRON VERB NOUN PUNCT CONJ SCONJ PRON VERB ADJ PUNCT
tagged_tokens: Какво_DET ти_PRON обяви_VERB началницата_NOUN ,_PUNCT пък_CONJ като_SCONJ му_PRON подаде_VERB написаното_ADJ ?_PUNCT

C) tokens: Кое ти каза шефът , щом му даде документираното ?
tags: DET PRON VERB NOUN PUNCT ADV SCONJ PRON VERB ADJ PUNCT
tagged_tokens: Кое_DET ти_PRON каза_VERB шефът_NOUN ,_PUNCT щом_ADV му_PRON даде_VERB документираното_ADJ ?_PUNCTD) tokens: Какво ти рече началникът , като му даде написаното ?
tags: DET PRON VERB NOUN PUNCT SCONJ PRON VERB ADJ PUNCT
tagged_tokens: Какво_DET ти_PRON рече_VERB началникът_NOUN ,_PUNCT като_SCONJ му_PRON даде_VERB написаното_ADJ ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""A""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Като се приближавахме , ние едва ли разговаряхме от умора и възбуда .
tags: SCONJ PART VERB PUNCT PRON ADV PART VERB ADP NOUN CCONJ NOUN PUNCT
tagged_tokens: Като_SCONJ се_PART приближавахме_VERB ,_PUNCT ние_PRON едва_ADV ли_PART разговаряхме_VERB от_ADP умора_NOUN и_CCONJ възбуда_NOUN ._PUNCT

B) tokens: Кога се доближавахме , ние почти не баворехме от изтощение и тръпка .
tags: ADV PART VERB PUNCT PRON ADV PART VERB ADP NOUN CCONJ NOUN PUNCT
tagged_tokens: Кога_ADV се_PART доближавахме_VERB ,_PUNCT ние_PRON почти_ADV не_PART баворехме_VERB от_ADP изтощение_NOUN и_CCONJ тръпка_NOUN ._PUNCT

C) tokens: Докато се приблизявахме , ние май не думаехме от изнемощение и очакване .
tags: SCONJ PART VERB PUNCT PRON ADV PART VERB ADP NOUN CCONJ NOUN PUNCT
tagged_tokens: Докато_SCONJ се_PART приблизявахме_VERB ,_PUNCT ние_PRON май_ADV не_PART думаехме_VERB от_ADP изнемощение_NOUN и_CCONJ очакване_NOUN ._PUNCTD) tokens: Когато наближихме , ние почти не говорехме от умора и вълнение .
tags: ADV VERB PUNCT PRON ADV PART VERB ADP NOUN CCONJ NOUN PUNCT
tagged_tokens: Когато_ADV наближихме_VERB ,_PUNCT ние_PRON почти_ADV не_PART говорехме_VERB от_ADP умора_NOUN и_CCONJ вълнение_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Предварително не считай за свое руно от мечка .
tags: ADP PART VERB ADP ADJ NOUN ADP NOUN PUNCT
tagged_tokens: Предварително_ADP не_PART считай_VERB за_ADP свое_ADJ руно_NOUN от_ADP мечка_NOUN ._PUNCT

B) tokens: Без да убиеш гривест звяр , недей разпродава кожа .
tags: ADP AUX VERB ADJ NOUN PUNCT ADV VERB NOUN PUNCT
tagged_tokens: Без_ADP да_AUX убиеш_VERB гривест_ADJ звяр_NOUN ,_PUNCT недей_ADV разпродава_VERB кожа_NOUN ._PUNCT

C) tokens: Преди да победиш арктично животно , не изпускай кожух .
tags: ADP AUX VERB ADJ NOUN PUNCT PART VERB NOUN PUNCT
tagged_tokens: Преди_ADP да_AUX победиш_VERB арктично_ADJ животно_NOUN ,_PUNCT не_PART изпускай_VERB кожух_NOUN ._PUNCTD) tokens: Преди да убиеш мечката , не продавай кожата .
tags: ADP AUX VERB NOUN PUNCT PART VERB NOUN PUNCT
tagged_tokens: Преди_ADP да_AUX убиеш_VERB мечката_NOUN ,_PUNCT не_PART продавай_VERB кожата_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Сблъсъкът на антагонизми , които му разтревожваха разума , пропадаше .
tags: NOUN ADP NOUN PUNCT PRON PRON VERB NOUN PUNCT VERB PUNCT
tagged_tokens: Сблъсъкът_NOUN на_ADP антагонизми_NOUN ,_PUNCT които_PRON му_PRON разтревожваха_VERB разума_NOUN ,_PUNCT пропадаше_VERB ._PUNCT

B) tokens: Конфронтацията на дилеми , които му смущаваха разума , избърсваше се .
tags: NOUN ADP NOUN PUNCT PRON PRON VERB NOUN PUNCT VERB PRON PUNCT
tagged_tokens: Конфронтацията_NOUN на_ADP дилеми_NOUN ,_PUNCT които_PRON му_PRON смущаваха_VERB разума_NOUN ,_PUNCT избърсваше_VERB се_PRON ._PUNCT

C) tokens: Спорът на конфликти , които му замъгляваха интелекта , се губеше .
tags: NOUN ADP NOUN PUNCT PRON PRON VERB NOUN PUNCT PRON VERB PUNCT
tagged_tokens: Спорът_NOUN на_ADP конфликти_NOUN ,_PUNCT които_PRON му_PRON замъгляваха_VERB интелекта_NOUN ,_PUNCT се_PRON губеше_VERB ._PUNCTD) tokens: Борбата на противоречия , що мътеха ума му , изчезваше .
tags: NOUN ADP NOUN PUNCT PRON VERB NOUN PRON PUNCT VERB PUNCT
tagged_tokens: Борбата_NOUN на_ADP противоречия_NOUN ,_PUNCT що_PRON мътеха_VERB ума_NOUN му_PRON ,_PUNCT изчезваше_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Желанието , че съдбата на Иван е да се излекува , сякаш го избави от ужасния сън за злодеянието .
tags: NOUN PUNCT SCONJ NOUN ADP PROPN AUX PART VERB PUNCT ADV PRON VERB ADP ADJ NOUN ADP NOUN PUNCT
tagged_tokens: Желанието_NOUN ,_PUNCT че_SCONJ съдбата_NOUN на_ADP Иван_PROPN е_AUX да_PART се_VERB излекува_VERB ,_PUNCT сякаш_ADV го_PRON избави_VERB от_ADP ужасния_ADJ сън_NOUN за_ADP злодеянието_NOUN ._PUNCT

B) tokens: Очакването , че брат му Иван ще се възстанови , го направи свободен от зловещия поглед на престъплението .
tags: NOUN PUNCT SCONJ NOUN PRON PROPN AUX VERB VERB PUNCT PRON VERB ADJ ADP ADJ NOUN ADP NOUN PUNCT
tagged_tokens: Очакването_NOUN ,_PUNCT че_SCONJ брат_NOUN му_PRON Иван_PROPN ще_AUX се_VERB възстанови_VERB ,_PUNCT го_PRON направи_VERB свободен_ADJ от_ADP зловещия_ADJ поглед_NOUN на_ADP престъплението_NOUN ._PUNCT

C) tokens: Вярата , че брат му Иван може да поправи здравето си , като че ли го превърна в невинен от страховития сон на престъплението .
tags: NOUN PUNCT SCONJ NOUN PRON PROPN VERB AUX VERB NOUN ADP PRON PUNCT SCONJ SCONJ PART PRON VERB ADP ADJ ADP ADJ NOUN ADP NOUN PUNCT
tagged_tokens: Вярата_NOUN ,_PUNCT че_SCONJ брат_NOUN му_PRON Иван_PROPN може_VERB да_AUX поправи_VERB здравето_NOUN си_PRON ,_PUNCT като_SCONJ че_SCONJ ли_PART го_PRON превърна_VERB в_ADP невинен_ADJ от_ADP страховития_ADJ сон_NOUN на_ADP престъплението_NOUN ._PUNCTD) tokens: Надеждата , че брат му Иван може да оздравее , като че ли го освободи от страшния кошмар на престъплението .
tags: NOUN PUNCT SCONJ NOUN PRON PROPN VERB AUX VERB PUNCT SCONJ SCONJ PART PRON VERB ADP ADJ NOUN ADP NOUN PUNCT
tagged_tokens: Надеждата_NOUN ,_PUNCT че_SCONJ брат_NOUN му_PRON Иван_PROPN може_VERB да_AUX оздравее_VERB ,_PUNCT като_SCONJ че_SCONJ ли_PART го_PRON освободи_VERB от_ADP страшния_ADJ кошмар_NOUN на_ADP престъплението_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Които се завърнаха , и прах от камините си не откриха .
tags: PRON PRON VERB PUNCT CCONJ NOUN ADP NOUN PRON PART VERB PUNCT
tagged_tokens: Които_PRON се_PRON завърнаха_VERB ,_PUNCT и_CCONJ прах_NOUN от_ADP камините_NOUN си_PRON не_PART откриха_VERB ._PUNCT

B) tokens: Които се връщаха , и пепелища на огньовете си не срещнаха .
tags: PRON PRON VERB PUNCT CCONJ NOUN ADP NOUN PRON PART VERB PUNCT
tagged_tokens: Които_PRON се_PRON връщаха_VERB ,_PUNCT и_CCONJ пепелища_NOUN на_ADP огньовете_NOUN си_PRON не_PART срещнаха_VERB ._PUNCT

C) tokens: Които се прибираха , и зола на курлуците си не видяха .
tags: PRON PRON VERB PUNCT CCONJ NOUN ADP NOUN PRON PART VERB PUNCT
tagged_tokens: Които_PRON се_PRON прибираха_VERB ,_PUNCT и_CCONJ зола_NOUN на_ADP курлуците_NOUN си_PRON не_PART видяха_VERB ._PUNCTD) tokens: Които се върнаха , и пепел на огнищата си не намериха .
tags: PRON PRON VERB PUNCT CCONJ NOUN ADP NOUN PRON PART VERB PUNCT
tagged_tokens: Които_PRON се_PRON върнаха_VERB ,_PUNCT и_CCONJ пепел_NOUN на_ADP огнищата_NOUN си_PRON не_PART намериха_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Нашата преимущество е , че ще започнем от самото начало .
tags: DET NOUN AUX PUNCT SCONJ AUX VERB ADP DET NOUN PUNCT
tagged_tokens: Нашата_DET преимущество_NOUN е_AUX ,_PUNCT че_SCONJ ще_AUX започнем_VERB от_ADP самото_DET начало_NOUN ._PUNCT

B) tokens: Нашата сила ще бъде , че ще излезем от нулата .
tags: DET NOUN AUX AUX PUNCT SCONJ AUX VERB ADP NOUN PUNCT
tagged_tokens: Нашата_DET сила_NOUN ще_AUX бъде_AUX ,_PUNCT че_SCONJ ще_AUX излезем_VERB от_ADP нулата_NOUN ._PUNCT

C) tokens: Нашата позиция ще е , че ще стартираме от началото .
tags: DET NOUN AUX AUX PUNCT SCONJ AUX VERB ADP NOUN PUNCT
tagged_tokens: Нашата_DET позиция_NOUN ще_AUX е_AUX ,_PUNCT че_SCONJ ще_AUX стартираме_VERB от_ADP началото_NOUN ._PUNCTD) tokens: Наше предимство ще е , че ще почнем отначало .
tags: DET NOUN AUX AUX PUNCT SCONJ AUX VERB ADV PUNCT
tagged_tokens: Наше_DET предимство_NOUN ще_AUX е_AUX ,_PUNCT че_SCONJ ще_AUX почнем_VERB отначало_ADV ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Недостатъкът на кибернетичните машини е , че те са просто имитация на човешкия мозък .
tags: NOUN ADP ADJ NOUN VERB PUNCT SCONJ PRON AUX ADV NOUN ADP ADJ NOUN PUNCT
tagged_tokens: Недостатъкът_NOUN на_ADP кибернетичните_ADJ машини_NOUN е_VERB ,_PUNCT че_SCONJ те_PRON са_AUX просто_ADV имитация_NOUN на_ADP човешкия_ADJ мозък_NOUN ._PUNCT

B) tokens: Скромността на кибернетичните машини е , че те са едва подражание на човешкия мозък .
tags: NOUN ADP ADJ NOUN VERB PUNCT SCONJ PRON AUX PART NOUN ADP ADJ NOUN PUNCT
tagged_tokens: Скромността_NOUN на_ADP кибернетичните_ADJ машини_NOUN е_VERB ,_PUNCT че_SCONJ те_PRON са_AUX едва_PART подражание_NOUN на_ADP човешкия_ADJ мозък_NOUN ._PUNCT

C) tokens: Слабата страна на кибернетичните машини е , че те са само отражение на човешкия мозък .
tags: ADJ NOUN ADP ADJ NOUN VERB PUNCT SCONJ PRON AUX ADV NOUN ADP ADJ NOUN PUNCT
tagged_tokens: Слабата_ADJ страна_NOUN на_ADP кибернетичните_ADJ машини_NOUN е_VERB ,_PUNCT че_SCONJ те_PRON са_AUX само_ADV отражение_NOUN на_ADP човешкия_ADJ мозък_NOUN ._PUNCTD) tokens: Слабостта на кибернетичните машини е , че те са само аналог на човешкия мозък .
tags: NOUN ADP ADJ NOUN VERB PUNCT SCONJ PRON AUX ADV NOUN ADP ADJ NOUN PUNCT
tagged_tokens: Слабостта_NOUN на_ADP кибернетичните_ADJ машини_NOUN е_VERB ,_PUNCT че_SCONJ те_PRON са_AUX само_ADV аналог_NOUN на_ADP човешкия_ADJ мозък_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Влажна есенна буря подуваше яростно отвън .
tags: ADJ ADJ NOUN VERB ADV ADV PUNCT
tagged_tokens: Влажна_ADJ есенна_ADJ буря_NOUN подуваше_VERB яростно_ADV отвън_ADV ._PUNCT

B) tokens: Мокър есенски вихър духаше безумно вън .
tags: ADJ ADJ NOUN VERB ADV ADV PUNCT
tagged_tokens: Мокър_ADJ есенски_ADJ вихър_NOUN духаше_VERB безумно_ADV вън_ADV ._PUNCT

C) tokens: Силен есенен порив вихреше разярено навън .
tags: ADJ ADJ NOUN VERB ADV ADV PUNCT
tagged_tokens: Силен_ADJ есенен_ADJ порив_NOUN вихреше_VERB разярено_ADV навън_ADV ._PUNCTD) tokens: Влажен есенен вятър вееше лудо навън .
tags: ADJ ADJ NOUN VERB ADV ADV PUNCT
tagged_tokens: Влажен_ADJ есенен_ADJ вятър_NOUN вееше_VERB лудо_ADV навън_ADV ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Слънцето бе залезнало зад ясните отдалечени възвишения на запад .
tags: NOUN AUX VERB ADP ADJ ADJ NOUN ADP NOUN PUNCT
tagged_tokens: Слънцето_NOUN бе_AUX залезнало_VERB зад_ADP ясните_ADJ отдалечени_ADJ възвишения_NOUN на_ADP запад_NOUN ._PUNCT

B) tokens: Слънцето бе скрило зад синкавите далечни хълмове на запад .
tags: NOUN AUX VERB ADP ADJ ADJ NOUN ADP NOUN PUNCT
tagged_tokens: Слънцето_NOUN бе_AUX скрило_VERB зад_ADP синкавите_ADJ далечни_ADJ хълмове_NOUN на_ADP запад_NOUN ._PUNCT

C) tokens: Слънцето бе потънало зад небесните отдалечени връхчета на запад .
tags: NOUN AUX VERB ADP ADJ ADJ NOUN ADP NOUN PUNCT
tagged_tokens: Слънцето_NOUN бе_AUX потънало_VERB зад_ADP небесните_ADJ отдалечени_ADJ връхчета_NOUN на_ADP запад_NOUN ._PUNCTD) tokens: Слънцето бе заседнало зад сините далечни планини на запад .
tags: NOUN AUX VERB ADP ADJ ADJ NOUN ADP NOUN PUNCT
tagged_tokens: Слънцето_NOUN бе_AUX заседнало_VERB зад_ADP сините_ADJ далечни_ADJ планини_NOUN на_ADP запад_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Безсънието грабна да закрива през клепачите .
tags: NOUN VERB AUX VERB ADP NOUN PUNCT
tagged_tokens: Безсънието_NOUN грабна_VERB да_AUX закрива_VERB през_ADP клепачите_NOUN ._PUNCT

B) tokens: Дремката стегна да покрива зад веждите .
tags: NOUN VERB AUX VERB ADP NOUN PUNCT
tagged_tokens: Дремката_NOUN стегна_VERB да_AUX покрива_VERB зад_ADP веждите_NOUN ._PUNCT

C) tokens: Умората нахлу да погълва от ресниците .
tags: NOUN VERB AUX VERB ADP NOUN PUNCT
tagged_tokens: Умората_NOUN нахлу_VERB да_AUX погълва_VERB от_ADP ресниците_NOUN ._PUNCTD) tokens: Дрямката хвана да надвива на очите .
tags: NOUN VERB AUX VERB ADP NOUN PUNCT
tagged_tokens: Дрямката_NOUN хвана_VERB да_AUX надвива_VERB на_ADP очите_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Излезте заявете да запрягнат конете .
tags: VERB VERB AUX VERB NOUN PUNCT
tagged_tokens: Излезте_VERB заявете_VERB да_AUX запрягнат_VERB конете_NOUN ._PUNCT

B) tokens: Излизай кажи да напрягат конете .
tags: VERB VERB AUX VERB NOUN PUNCT
tagged_tokens: Излизай_VERB кажи_VERB да_AUX напрягат_VERB конете_NOUN ._PUNCT

C) tokens: Излез нареди да вързат конете .
tags: VERB VERB AUX VERB NOUN PUNCT
tagged_tokens: Излез_VERB нареди_VERB да_AUX вързат_VERB конете_NOUN ._PUNCTD) tokens: Излез кажи да впрягат конете .
tags: VERB VERB AUX VERB NOUN PUNCT
tagged_tokens: Излез_VERB кажи_VERB да_AUX впрягат_VERB конете_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Вече в първите два дни след като дойде той започна да съдейства на стария си баща .
tags: ADV ADP ADJ NUM NOUN ADP SCONJ VERB PRON PRON VERB AUX VERB ADP ADJ PRON NOUN PUNCT
tagged_tokens: Вече_ADV в_ADP първите_ADJ два_NUM дни_NOUN след_ADP като_SCONJ дойде_VERB той_PRON започна_VERB да_AUX съдейства_VERB на_ADP стария_ADJ си_PRON баща_NOUN ._PUNCT

B) tokens: Още в първите два дни след дохождането си той се пристапи да подпомага на стария си баща .
tags: ADV ADP ADJ NUM NOUN ADP NOUN PRON PRON PRON VERB AUX VERB ADP ADJ PRON NOUN PUNCT
tagged_tokens: Още_ADV в_ADP първите_ADJ два_NUM дни_NOUN след_ADP дохождането_NOUN си_PRON той_PRON се_PRON пристапи_VERB да_AUX подпомага_VERB на_ADP стария_ADJ си_PRON баща_NOUN ._PUNCT

C) tokens: Вече в първите два дни след пристигането си той се ангажира да помощничи на стария си баща .
tags: ADV ADP ADJ NUM NOUN ADP NOUN PRON PRON PRON VERB AUX VERB ADP ADJ PRON NOUN PUNCT
tagged_tokens: Вече_ADV в_ADP първите_ADJ два_NUM дни_NOUN след_ADP пристигането_NOUN си_PRON той_PRON се_PRON ангажира_VERB да_AUX помощничи_VERB на_ADP стария_ADJ си_PRON баща_NOUN ._PUNCTD) tokens: Още в първите два дни след пристигането си той се зае да помага на стария си баща .
tags: ADV ADP ADJ NUM NOUN ADP NOUN PRON PRON PRON VERB AUX VERB ADP ADJ PRON NOUN PUNCT
tagged_tokens: Още_ADV в_ADP първите_ADJ два_NUM дни_NOUN след_ADP пристигането_NOUN си_PRON той_PRON се_PRON зае_VERB да_AUX помага_VERB на_ADP стария_ADJ си_PRON баща_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Разумното дете започнало да чита от тази толста книга .
tags: ADJ NOUN VERB AUX VERB ADP DET ADJ NOUN PUNCT
tagged_tokens: Разумното_ADJ дете_NOUN започнало_VERB да_AUX чита_VERB от_ADP тази_DET толста_ADJ книга_NOUN ._PUNCT

B) tokens: Просветеното малчуган залегнало да поглежда в тоя голям том .
tags: ADJ NOUN VERB AUX VERB ADP DET ADJ NOUN PUNCT
tagged_tokens: Просветеното_ADJ малчуган_NOUN залегнало_VERB да_AUX поглежда_VERB в_ADP тоя_DET голям_ADJ том_NOUN ._PUNCT

C) tokens: Интелектуалното младеж начело да разглежда по това тежко издание .
tags: ADJ NOUN VERB AUX VERB ADP DET ADJ NOUN PUNCT
tagged_tokens: Интелектуалното_ADJ младеж_NOUN начело_VERB да_AUX разглежда_VERB по_ADP това_DET тежко_ADJ издание_NOUN ._PUNCTD) tokens: Умното момче захванало да чете из тая дебела книга .
tags: ADJ NOUN VERB AUX VERB ADP DET ADJ NOUN PUNCT
tagged_tokens: Умното_ADJ момче_NOUN захванало_VERB да_AUX чете_VERB из_ADP тая_DET дебела_ADJ книга_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Еньо си се почувства отчужден и ужасен .
tags: PROPN PRON PRON VERB ADJ CCONJ ADJ PUNCT
tagged_tokens: Еньо_PROPN си_PRON се_PRON почувства_VERB отчужден_ADJ и_CCONJ ужасен_ADJ ._PUNCT

B) tokens: Еньо му се стори непознат и страшлив .
tags: PROPN PRON PRON VERB ADJ CCONJ ADJ PUNCT
tagged_tokens: Еньо_PROPN му_PRON се_PRON стори_VERB непознат_ADJ и_CCONJ страшлив_ADJ ._PUNCT

C) tokens: Еньо си се разбра чуждски и страшен .
tags: PROPN PRON PRON VERB ADJ CCONJ ADJ PUNCT
tagged_tokens: Еньо_PROPN си_PRON се_PRON разбра_VERB чуждски_ADJ и_CCONJ страшен_ADJ ._PUNCTD) tokens: Еньо й се видя чужд и страшен .
tags: PROPN PRON PRON VERB ADJ CCONJ ADJ PUNCT
tagged_tokens: Еньо_PROPN й_PRON се_PRON видя_VERB чужд_ADJ и_CCONJ страшен_ADJ ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Нашето успех ще е мирен .
tags: DET NOUN AUX VERB ADJ PUNCT
tagged_tokens: Нашето_DET успех_NOUN ще_AUX е_VERB мирен_ADJ ._PUNCT

B) tokens: Нашата триумф ще бъде некръвопролитен .
tags: DET NOUN AUX VERB ADJ PUNCT
tagged_tokens: Нашата_DET триумф_NOUN ще_AUX бъде_VERB некръвопролитен_ADJ ._PUNCT

C) tokens: Нашето победоносство ще е безсмъртно .
tags: DET NOUN AUX VERB ADJ PUNCT
tagged_tokens: Нашето_DET победоносство_NOUN ще_AUX е_VERB безсмъртно_ADJ ._PUNCTD) tokens: Нашата победа ще бъде безкръвна .
tags: DET NOUN AUX VERB ADJ PUNCT
tagged_tokens: Нашата_DET победа_NOUN ще_AUX бъде_VERB безкръвна_ADJ ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Тази нощ Витоша е така тайнствена и мека .
tags: DET NOUN PROPN AUX ADV ADJ CCONJ ADJ PUNCT
tagged_tokens: Тази_DET нощ_NOUN Витоша_PROPN е_AUX така_ADV тайнствена_ADJ и_CCONJ мека_ADJ ._PUNCT

B) tokens: Тази вечер Витоша е толкова мистична и кротка .
tags: DET NOUN PROPN AUX ADV ADJ CCONJ ADJ PUNCT
tagged_tokens: Тази_DET вечер_NOUN Витоша_PROPN е_AUX толкова_ADV мистична_ADJ и_CCONJ кротка_ADJ ._PUNCT

C) tokens: Тази вечер Витоша е така загадочна и ласкава .
tags: DET NOUN PROPN AUX ADV ADJ CCONJ ADJ PUNCT
tagged_tokens: Тази_DET вечер_NOUN Витоша_PROPN е_AUX така_ADV загадочна_ADJ и_CCONJ ласкава_ADJ ._PUNCTD) tokens: Тази вечер Витоша е тъй загадъчна и нежна .
tags: DET NOUN PROPN AUX ADV ADJ CCONJ ADJ PUNCT
tagged_tokens: Тази_DET вечер_NOUN Витоша_PROPN е_AUX тъй_ADV загадъчна_ADJ и_CCONJ нежна_ADJ ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Ето_PRON как_PRON се_PRON казва_VERB днес_ADV :_PUNCT Хайдутско_ADJ изворче_NOUN ._PUNCT
tags: PRON PRON PRON VERB ADV PUNCT ADJ NOUN PUNCT
tagged_tokens: Ето_PRON как_PRON се_PRON казва_VERB днес_ADV :_PUNCT Хайдутско_ADJ изворче_NOUN ._PUNCT

B) tokens: Така_PRON се_PRON нарича_VERB сега_ADV :_PUNCT Рекуйдунско_ADJ канче_NOUN ._PUNCT
tags: PRON PRON VERB ADV PUNCT ADJ NOUN PUNCT
tagged_tokens: Така_PRON се_PRON нарича_VERB сега_ADV :_PUNCT Рекуйдунско_ADJ канче_NOUN ._PUNCT

C) tokens: Това_PRON се_PRON наименува_VERB и_CCONJ днес_ADV :_PUNCT Четническо_ADJ чешмиче_NOUN ._PUNCT
tags: PRON PRON VERB CCONJ ADV PUNCT ADJ NOUN PUNCT
tagged_tokens: Това_PRON се_PRON наименува_VERB и_CCONJ днес_ADV :_PUNCT Четническо_ADJ чешмиче_NOUN ._PUNCTD) tokens: То се вика и сега : Хайдушко кладенче .
tags: PRON PRON VERB CCONJ ADV PUNCT ADJ NOUN PUNCT
tagged_tokens: То_PRON се_PRON вика_VERB и_CCONJ сега_ADV :_PUNCT Хайдушко_ADJ кладенче_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Тя [ авторската чест ] му се откриваше сега най-достижима .
tags: PRON PUNCT ADJ NOUN PUNCT PRON PRON VERB ADV ADJ PUNCT
tagged_tokens: Тя_PRON [_PUNCT авторската_ADJ чест_NOUN ]_PUNCT му_PRON се_PRON откриваше_VERB сега_ADV най-достижима_ADJ ._PUNCT

B) tokens: Тя [ литературната почит ] му се разкриваше сега най-осъществима .
tags: PRON PUNCT ADJ NOUN PUNCT PRON PRON VERB ADV ADJ PUNCT
tagged_tokens: Тя_PRON [_PUNCT литературната_ADJ почит_NOUN ]_PUNCT му_PRON се_PRON разкриваше_VERB сега_ADV най-осъществима_ADJ ._PUNCT

C) tokens: Тя [ писмената слава ] му се виждаше сега най-достижима .
tags: PRON PUNCT ADJ NOUN PUNCT PRON PRON VERB ADV ADJ PUNCT
tagged_tokens: Тя_PRON [_PUNCT писмената_ADJ слава_NOUN ]_PUNCT му_PRON се_PRON виждаше_VERB сега_ADV най-достижима_ADJ ._PUNCTD) tokens: Тя [ писателската слава ] му се виждаше сега най-достъпна .
tags: PRON PUNCT ADJ NOUN PUNCT PRON PRON VERB ADV ADJ PUNCT
tagged_tokens: Тя_PRON [_PUNCT писателската_ADJ слава_NOUN ]_PUNCT му_PRON се_PRON виждаше_VERB сега_ADV най-достъпна_ADJ ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""A""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Вече на следващия ден , заедно със ярката светлина , всички тези планове се разтворяха .
tags: ADV ADP ADJ NOUN PUNCT ADV ADP ADJ NOUN PUNCT DET DET NOUN PRON VERB PUNCT
tagged_tokens: Вече_ADV на_ADP следващия_ADJ ден_NOUN ,_PUNCT заедно_ADV със_ADP ярката_ADJ светлина_NOUN ,_PUNCT всички_DET тези_DET планове_NOUN се_PRON разтворяха_VERB ._PUNCT

B) tokens: Още на другия ден , съчетани със солнечната светлина , всички тия планове се разпиляваха .
tags: ADV ADP ADJ NOUN PUNCT VERB ADP ADJ NOUN PUNCT DET DET NOUN PRON VERB PUNCT
tagged_tokens: Още_ADV на_ADP другия_ADJ ден_NOUN ,_PUNCT съчетани_VERB със_ADP солнечната_ADJ светлина_NOUN ,_PUNCT всички_DET тия_DET планове_NOUN се_PRON разпиляваха_VERB ._PUNCT

C) tokens: Веднага на другия ден , едновременно със слънчевата светлина , всички тия планове се разтичаха .
tags: ADV ADP ADJ NOUN PUNCT ADV ADP ADJ NOUN PUNCT DET DET NOUN PRON VERB PUNCT
tagged_tokens: Веднага_ADV на_ADP другия_ADJ ден_NOUN ,_PUNCT едновременно_ADV със_ADP слънчевата_ADJ светлина_NOUN ,_PUNCT всички_DET тия_DET планове_NOUN се_PRON разтичаха_VERB ._PUNCTD) tokens: Още на другия ден , наедно със слънчевата светлина , всички тия планове се изпаряваха .
tags: ADV ADP ADJ NOUN PUNCT ADV ADP ADJ NOUN PUNCT DET DET NOUN PRON VERB PUNCT
tagged_tokens: Още_ADV на_ADP другия_ADJ ден_NOUN ,_PUNCT наедно_ADV със_ADP слънчевата_ADJ светлина_NOUN ,_PUNCT всички_DET тия_DET планове_NOUN се_PRON изпаряваха_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Кой ви подари парите от комисията ?
tags: PRON PRON VERB NOUN ADP NOUN PUNCT
tagged_tokens: Кой_PRON ви_PRON подари_VERB парите_NOUN от_ADP комисията_NOUN ?_PUNCT

B) tokens: Кой ви връчи парите на комитета ?
tags: PRON PRON VERB NOUN ADP NOUN PUNCT
tagged_tokens: Кой_PRON ви_PRON връчи_VERB парите_NOUN на_ADP комитета_NOUN ?_PUNCT

C) tokens: Кой ви предостави парите за комисионната ?
tags: PRON PRON VERB NOUN ADP ADJ PUNCT
tagged_tokens: Кой_PRON ви_PRON предостави_VERB парите_NOUN за_ADP комисионната_ADJ ?_PUNCTD) tokens: Кой ви даде комитетските пари ?
tags: PRON PRON VERB ADJ NOUN PUNCT
tagged_tokens: Кой_PRON ви_PRON даде_VERB комитетските_ADJ пари_NOUN ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Скоком преминах скудното разстояние .
tags: ADV VERB ADJ NOUN PUNCT
tagged_tokens: Скоком_ADV преминах_VERB скудното_ADJ разстояние_NOUN ._PUNCT

B) tokens: Тичайки проправих малкото разстояние .
tags: VERB VERB ADJ NOUN PUNCT
tagged_tokens: Тичайки_VERB проправих_VERB малкото_ADJ разстояние_NOUN ._PUNCT

C) tokens: Бързо изпробвах недостатъчното разстояние .
tags: ADV VERB ADJ NOUN PUNCT
tagged_tokens: Бързо_ADV изпробвах_VERB недостатъчното_ADJ разстояние_NOUN ._PUNCTD) tokens: Бегом изминах неголямото разстояние .
tags: ADV VERB ADJ NOUN PUNCT
tagged_tokens: Бегом_ADV изминах_VERB неголямото_ADJ разстояние_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Обезкуражих се , показва ми за посвесното место .
tags: VERB PRON PUNCT VERB PRON ADP ADJ NOUN PUNCT
tagged_tokens: Обезкуражих_VERB се_PRON ,_PUNCT показва_VERB ми_PRON за_ADP посвесното_ADJ место_NOUN ._PUNCT

B) tokens: Оскърбих се , съжалява ми за родовото кътче .
tags: VERB PRON PUNCT VERB PRON ADP ADJ NOUN PUNCT
tagged_tokens: Оскърбих_VERB се_PRON ,_PUNCT съжалява_VERB ми_PRON за_ADP родовото_ADJ кътче_NOUN ._PUNCT

C) tokens: Обезсърчих се , почувства ми за бащиното село .
tags: VERB PRON PUNCT VERB PRON ADP ADJ NOUN PUNCT
tagged_tokens: Обезсърчих_VERB се_PRON ,_PUNCT почувства_VERB ми_PRON за_ADP бащиното_ADJ село_NOUN ._PUNCTD) tokens: Затъжих се , домиля ми за родното място .
tags: VERB PRON PUNCT VERB PRON ADP ADJ NOUN PUNCT
tagged_tokens: Затъжих_VERB се_PRON ,_PUNCT домиля_VERB ми_PRON за_ADP родното_ADJ място_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: С кого не бил слух за войвода Чавдар ?
tags: ADP PRON PART AUX VERB ADP NOUN PROPN PUNCT
tagged_tokens: С_ADP кого_PRON не_PART бил_AUX слух_VERB за_ADP войвода_NOUN Чавдар_PROPN ?_PUNCT

B) tokens: Кой да не чул за Чавдар войвода ?
tags: PRON SCONJ PART VERB ADP PROPN NOUN PUNCT
tagged_tokens: Кой_PRON да_SCONJ не_PART чул_VERB за_ADP Чавдар_PROPN войвода_NOUN ?_PUNCT

C) tokens: За кого не разнесъл се слава за войвода Чавдар ?
tags: ADP PRON PART VERB CCONJ PRON NOUN ADP NOUN PROPN PUNCT
tagged_tokens: За_ADP кого_PRON не_PART разнесъл_VERB се_CCONJ се_PRON слава_NOUN за_ADP войвода_NOUN Чавдар_PROPN ?_PUNCTD) tokens: Кой не знай Чавдар войвода ?
tags: PRON PART VERB PROPN NOUN PUNCT
tagged_tokens: Кой_PRON не_PART знай_VERB Чавдар_PROPN войвода_NOUN ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Вечерта тя взела четката и се хванала да чисти двора .
tags: ADV PRON VERB NOUN CCONJ PRON VERB AUX VERB NOUN PUNCT
tagged_tokens: Вечерта_ADV тя_PRON взела_VERB четката_NOUN и_CCONJ се_PRON хванала_VERB да_AUX чисти_VERB двора_NOUN ._PUNCT

B) tokens: Сутринта тя обърна метличката и се отдаде да бърше двора .
tags: ADV PRON VERB NOUN CCONJ PRON VERB AUX VERB NOUN PUNCT
tagged_tokens: Сутринта_ADV тя_PRON обърна_VERB метличката_NOUN и_CCONJ се_PRON отдаде_VERB да_AUX бърше_VERB двора_NOUN ._PUNCT

C) tokens: Здрача тя вдигна съвала и се посвети да фърка двора .
tags: ADV PRON VERB NOUN CCONJ PRON VERB AUX VERB NOUN PUNCT
tagged_tokens: Здрача_ADV тя_PRON вдигна_VERB съвала_NOUN и_CCONJ се_PRON посвети_VERB да_AUX фърка_VERB двора_NOUN ._PUNCTD) tokens: Надвечер тя взе метлата и се залови да мете двора .
tags: ADV PRON VERB NOUN CCONJ PRON VERB AUX VERB NOUN PUNCT
tagged_tokens: Надвечер_ADV тя_PRON взе_VERB метлата_NOUN и_CCONJ се_PRON залови_VERB да_AUX мете_VERB двора_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Житото е зряло .
tags: NOUN AUX ADJ PUNCT
tagged_tokens: Житото_NOUN е_AUX зряло_ADJ ._PUNCT

B) tokens: Пшеницата е презряла .
tags: NOUN AUX ADJ PUNCT
tagged_tokens: Пшеницата_NOUN е_AUX презряла_ADJ ._PUNCT

C) tokens: Овесът е съхнал .
tags: NOUN AUX ADJ PUNCT
tagged_tokens: Овесът_NOUN е_AUX съхнал_ADJ ._PUNCTD) tokens: Ечемикът е готов .
tags: NOUN AUX ADJ PUNCT
tagged_tokens: Ечемикът_NOUN е_AUX готов_ADJ ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: С него мога да съм искрена с себе си .
tags: ADP PRON VERB AUX VERB ADJ ADP PRON PART PUNCT
tagged_tokens: С_ADP него_PRON мога_VERB да_AUX съм_VERB искрена_ADJ с_ADP себе_PRON си_PART ._PUNCT

B) tokens: С него знаех да бъда честна към себе си .
tags: ADP PRON VERB AUX VERB ADJ ADP PRON PART PUNCT
tagged_tokens: С_ADP него_PRON знаех_VERB да_AUX бъда_VERB честна_ADJ към_ADP себе_PRON си_PART ._PUNCT

C) tokens: С него имах да съм верна на себе си .
tags: ADP PRON VERB AUX VERB ADJ ADP PRON PART PUNCT
tagged_tokens: С_ADP него_PRON имах_VERB да_AUX съм_VERB верна_ADJ на_ADP себе_PRON си_PART ._PUNCTD) tokens: С него можех да бъда вярна на себе си .
tags: ADP PRON VERB AUX VERB ADJ ADP PRON PART PUNCT
tagged_tokens: С_ADP него_PRON можех_VERB да_AUX бъда_VERB вярна_ADJ на_ADP себе_PRON си_PART ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""A""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: И съзнавай , че ние сме с теб , каквото и да се случи , с теб е и нашият град .
tags: CCONJ VERB PUNCT SCONJ PRON AUX ADP PRON PUNCT DET CCONJ AUX VERB PUNCT ADP PRON AUX CCONJ DET NOUN PUNCT
tagged_tokens: И_CCONJ съзнавай_VERB ,_PUNCT че_SCONJ ние_PRON сме_AUX с_ADP теб_PRON ,_PUNCT каквото_DET и_CCONJ да_AUX се_VERB случи_VERB ,_PUNCT с_ADP теб_PRON е_AUX и_CCONJ нашият_DET град_NOUN ._PUNCT

B) tokens: И знаят , че ние сме до теб , каквото и да се развие , до теб е и нашият селище .
tags: CCONJ VERB PUNCT SCONJ PRON AUX ADP PRON PUNCT DET CCONJ AUX VERB PUNCT ADP PRON AUX CCONJ DET NOUN PUNCT
tagged_tokens: И_CCONJ знаят_VERB ,_PUNCT че_SCONJ ние_PRON сме_AUX до_ADP теб_PRON ,_PUNCT каквото_DET и_CCONJ да_AUX се_VERB развие_VERB ,_PUNCT до_ADP теб_PRON е_AUX и_CCONJ нашият_DET селище_NOUN ._PUNCT

C) tokens: И разбирай , че ние сме край теб , каквото и да се случва , край теб е и нашият градина .
tags: CCONJ VERB PUNCT SCONJ PRON AUX ADP PRON PUNCT DET CCONJ AUX VERB PUNCT ADP PRON AUX CCONJ DET NOUN PUNCT
tagged_tokens: И_CCONJ разбирай_VERB ,_PUNCT че_SCONJ ние_PRON сме_AUX край_ADP теб_PRON ,_PUNCT каквото_DET и_CCONJ да_AUX се_VERB случва_VERB ,_PUNCT край_ADP теб_PRON е_AUX и_CCONJ нашият_DET градина_NOUN ._PUNCTD) tokens: И знай , че ние сме зад тебе , каквото и да стане , зад тебе е и нашият градец .
tags: CCONJ VERB PUNCT SCONJ PRON AUX ADP PRON PUNCT DET CCONJ AUX VERB PUNCT ADP PRON AUX CCONJ DET NOUN PUNCT
tagged_tokens: И_CCONJ знай_VERB ,_PUNCT че_SCONJ ние_PRON сме_AUX зад_ADP тебе_PRON ,_PUNCT каквото_DET и_CCONJ да_AUX стане_VERB ,_PUNCT зад_ADP тебе_PRON е_AUX и_CCONJ нашият_DET градец_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: По-долу е метрополиса .
tags: ADV AUX NOUN PUNCT
tagged_tokens: По-долу_ADV е_AUX метрополиса_NOUN ._PUNCT

B) tokens: Отдолу е градска среда .
tags: ADV AUX NOUN NOUN PUNCT
tagged_tokens: Отдолу_ADV е_AUX градска_ADJ среда_NOUN ._PUNCT

C) tokens: Долу е полиса .
tags: ADV AUX NOUN PUNCT
tagged_tokens: Долу_ADV е_AUX полиса_NOUN ._PUNCTD) tokens: Надолу е градът .
tags: ADV AUX NOUN PUNCT
tagged_tokens: Надолу_ADV е_AUX градът_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Моят привлича да обитавам на село , понеже има симпатични момичета .
tags: PROPN VERB AUX VERB ADP NOUN PUNCT SCONJ VERB ADJ NOUN PUNCT
tagged_tokens: Моят_PROPN привлича_VERB да_AUX обитавам_VERB на_ADP село_NOUN ,_PUNCT понеже_SCONJ има_VERB симпатични_ADJ момичета_NOUN ._PUNCT

B) tokens: Аз предпочитам да пребивавам на село , тъй като има красиви момичета .
tags: PRON VERB AUX VERB ADP NOUN PUNCT ADV SCONJ VERB ADJ NOUN PUNCT
tagged_tokens: Аз_PRON предпочитам_VERB да_AUX пребивавам_VERB на_ADP село_NOUN ,_PUNCT тъй_ADV като_SCONJ има_VERB красиви_ADJ момичета_NOUN ._PUNCT

C) tokens: Мен ме привлича да живея на село , защото има прекрасни момичета .
tags: PRON PRON VERB AUX VERB ADP NOUN PUNCT SCONJ VERB ADJ NOUN PUNCT
tagged_tokens: Мен_PRON ме_PRON привлича_VERB да_AUX живея_VERB на_ADP село_NOUN ,_PUNCT защото_SCONJ има_VERB прекрасни_ADJ момичета_NOUN ._PUNCTD) tokens: Мене повече ми харесва да живея на село , защото има хубави момичета .
tags: PRON ADV PRON VERB AUX VERB ADP NOUN PUNCT ADV VERB ADJ NOUN PUNCT
tagged_tokens: Мене_PRON повече_ADV ми_PRON харесва_VERB да_AUX живея_VERB на_ADP село_NOUN ,_PUNCT защото_ADV има_VERB хубави_ADJ момичета_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Следвах каприз да влезна .
tags: VERB NOUN AUX VERB PUNCT
tagged_tokens: Следвах_VERB каприз_NOUN да_AUX влезна_VERB ._PUNCT

B) tokens: Предлагаше ми забава да посетя .
tags: VERB PRON NOUN AUX VERB PUNCT
tagged_tokens: Предлагаше_VERB ми_PRON забава_NOUN да_AUX посетя_VERB ._PUNCT

C) tokens: Харесваше ми идея да заникна .
tags: VERB PRON NOUN AUX VERB PUNCT
tagged_tokens: Харесваше_VERB ми_PRON идея_NOUN да_AUX заникна_VERB ._PUNCTD) tokens: Имах намерение от любопитство да вляза .
tags: VERB NOUN ADP NOUN AUX VERB PUNCT
tagged_tokens: Имах_VERB намерение_NOUN от_ADP любопитство_NOUN да_AUX вляза_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: От разкрехнатия земски двор децата сплетоха весело нощно хоро .
tags: ADP ADJ ADJ NOUN NOUN VERB ADJ ADJ NOUN PUNCT
tagged_tokens: От_ADP разкрехнатия_ADJ земски_ADJ двор_NOUN децата_NOUN сплетоха_VERB весело_ADJ нощно_ADJ хоро_NOUN ._PUNCT

B) tokens: На голямия аграрен пазар децата свиха ярко вечерно хоро .
tags: ADP ADJ ADJ NOUN NOUN VERB ADJ ADJ NOUN PUNCT
tagged_tokens: На_ADP голямия_ADJ аграрен_ADJ пазар_NOUN децата_NOUN свиха_VERB ярко_ADJ вечерно_ADJ хоро_NOUN ._PUNCT

C) tokens: От просторния селски ареал децата изплетоха славно нощно хоро .
tags: ADP ADJ ADJ NOUN NOUN VERB ADJ ADJ NOUN PUNCT
tagged_tokens: От_ADP просторния_ADJ селски_ADJ ареал_NOUN децата_NOUN изплетоха_VERB славно_ADJ нощно_ADJ хоро_NOUN ._PUNCTD) tokens: На широкия селски площад децата извиха бодро вечерно хоро .
tags: ADP ADJ ADJ NOUN NOUN VERB ADJ ADJ NOUN PUNCT
tagged_tokens: На_ADP широкия_ADJ селски_ADJ площад_NOUN децата_NOUN извиха_VERB бодро_ADJ вечерно_ADJ хоро_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Как го намери този народ , това същество .
tags: ADV PRON VERB DET NOUN PUNCT DET NOUN PUNCT
tagged_tokens: Как_ADV го_PRON намери_VERB този_DET народ_NOUN ,_PUNCT това_DET същество_NOUN ._PUNCT

B) tokens: Откъде се появи той народ , това чудалище .
tags: ADV PRON VERB PRON NOUN PUNCT DET NOUN PUNCT
tagged_tokens: Откъде_ADV се_PRON появи_VERB той_PRON народ_NOUN ,_PUNCT това_DET чудалище_NOUN ._PUNCT

C) tokens: Де се скри тоя народ , това явление .
tags: ADV PRON VERB DET NOUN PUNCT DET NOUN PUNCT
tagged_tokens: Де_ADV се_PRON скри_VERB тоя_DET народ_NOUN ,_PUNCT това_DET явление_NOUN ._PUNCTD) tokens: Отде се взе тоя народ , това чудо .
tags: ADV PRON VERB DET NOUN PUNCT DET NOUN PUNCT
tagged_tokens: Отде_ADV се_PRON взе_VERB тоя_DET народ_NOUN ,_PUNCT това_DET чудо_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Сивковите му лукави очи се скриваха зад гъстите соколски вежди .
tags: ADJ PRON ADJ NOUN PRON VERB ADP ADJ ADJ NOUN PUNCT
tagged_tokens: Сивковите_ADJ му_PRON лукави_ADJ очи_NOUN се_PRON скриваха_VERB зад_ADP гъстите_ADJ соколски_ADJ вежди_NOUN ._PUNCT

B) tokens: Сивите му измамни очи се затъмняваха под плътните орлови вежди .
tags: ADJ PRON ADJ NOUN PRON VERB ADP ADJ ADJ NOUN PUNCT
tagged_tokens: Сивите_ADJ му_PRON измамни_ADJ очи_NOUN се_PRON затъмняваха_VERB под_ADP плътните_ADJ орлови_ADJ вежди_NOUN ._PUNCT

C) tokens: Сивите му подигравателни очи се прикриваха от сплъстените хищни вежди .
tags: ADJ PRON ADJ NOUN PRON VERB ADP ADJ ADJ NOUN PUNCT
tagged_tokens: Сивите_ADJ му_PRON подигравателни_ADJ очи_NOUN се_PRON прикриваха_VERB от_ADP сплъстените_ADJ хищни_ADJ вежди_NOUN ._PUNCTD) tokens: Сивите му присмехулни очи се засенчваха от дебелите ястребови вежди .
tags: ADJ PRON ADJ NOUN PRON VERB ADP ADJ ADJ NOUN PUNCT
tagged_tokens: Сивите_ADJ му_PRON присмехулни_ADJ очи_NOUN се_PRON засенчваха_VERB от_ADP дебелите_ADJ ястребови_ADJ вежди_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Левски носеше височина средна , зеници светли , почти планински .
tags: PROPN VERB NOUN ADJ PUNCT NOUN ADJ PUNCT ADV ADJ PUNCT
tagged_tokens: Левски_PROPN носеше_VERB височина_NOUN средна_ADJ ,_PUNCT зеници_NOUN светли_ADJ ,_PUNCT почти_ADV планински_ADJ ._PUNCT

B) tokens: Левски държеше рост среден , поглед сив , почти небесен .
tags: PROPN VERB NOUN ADJ PUNCT NOUN ADJ PUNCT ADV ADJ PUNCT
tagged_tokens: Левски_PROPN държеше_VERB рост_NOUN среден_ADJ ,_PUNCT поглед_NOUN сив_ADJ ,_PUNCT почти_ADV небесен_ADJ ._PUNCT

C) tokens: Левски притежаваше статура среда , дразни сиви , почти морски .
tags: PROPN VERB NOUN ADJ PUNCT NOUN ADJ PUNCT ADV ADJ PUNCT
tagged_tokens: Левски_PROPN притежаваше_VERB статура_NOUN среда_ADJ ,_PUNCT дразни_NOUN сиви_ADJ ,_PUNCT почти_ADV морски_ADJ ._PUNCTD) tokens: Левски имаше ръст среден , очи сиви , почти сини .
tags: PROPN VERB NOUN ADJ PUNCT NOUN ADJ PUNCT ADV ADJ PUNCT
tagged_tokens: Левски_PROPN имаше_VERB ръст_NOUN среден_ADJ ,_PUNCT очи_NOUN сиви_ADJ ,_PUNCT почти_ADV сини_ADJ ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""A""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Почерняли хора издигаха високо лъкове , мечове , боздугани , копия .
tags: ADJ NOUN VERB ADV NOUN PUNCT NOUN PUNCT NOUN PUNCT NOUN PUNCT
tagged_tokens: Почерняли_ADJ хора_NOUN издигаха_VERB високо_ADV лъкове_NOUN ,_PUNCT мечове_NOUN ,_PUNCT боздугани_NOUN ,_PUNCT копия_NOUN ._PUNCT

B) tokens: Почернили души повдигаха небесно лъкове , мечове , боздугани , копия .
tags: ADJ NOUN VERB ADV NOUN PUNCT NOUN PUNCT NOUN PUNCT NOUN PUNCT
tagged_tokens: Почернили_ADJ души_NOUN повдигаха_VERB небесно_ADV лъкове_NOUN ,_PUNCT мечове_NOUN ,_PUNCT боздугани_NOUN ,_PUNCT копия_NOUN ._PUNCT

C) tokens: Почернели мъжи подигаха горе лъкове , мечове , боздугани , копия .
tags: ADJ NOUN VERB ADV NOUN PUNCT NOUN PUNCT NOUN PUNCT NOUN PUNCT
tagged_tokens: Почернели_ADJ мъжи_NOUN подигаха_VERB горе_ADV лъкове_NOUN ,_PUNCT мечове_NOUN ,_PUNCT боздугани_NOUN ,_PUNCT копия_NOUN ._PUNCTD) tokens: Почернели мъже вдигаха нагоре лъкове , мечове , боздугани , копия .
tags: ADJ NOUN VERB ADV NOUN PUNCT NOUN PUNCT NOUN PUNCT NOUN PUNCT
tagged_tokens: Почернели_ADJ мъже_NOUN вдигаха_VERB нагоре_ADV лъкове_NOUN ,_PUNCT мечове_NOUN ,_PUNCT боздугани_NOUN ,_PUNCT копия_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Господарят си дойде от плячка и тогава си миеше .
tags: NOUN PRON VERB ADP NOUN CCONJ ADV PRON VERB PUNCT
tagged_tokens: Господарят_NOUN си_PRON дойде_VERB от_ADP плячка_NOUN и_CCONJ тогава_ADV си_PRON миеше_VERB ._PUNCT

B) tokens: Монархът се завърна от гонитба и сега се накисваше .
tags: NOUN PRON VERB ADP NOUN CCONJ ADV PRON VERB PUNCT
tagged_tokens: Монархът_NOUN се_PRON завърна_VERB от_ADP гонитба_NOUN и_CCONJ сега_ADV се_PRON накисваше_VERB ._PUNCT

C) tokens: Царят си пристигна от нападение и тогава си разстилаше .
tags: NOUN PRON VERB ADP NOUN CCONJ ADV PRON VERB PUNCT
tagged_tokens: Царят_NOUN си_PRON пристигна_VERB от_ADP нападение_NOUN и_CCONJ тогава_ADV си_PRON разстилаше_VERB ._PUNCTD) tokens: Князът се върна от лов и сега се къпеше .
tags: NOUN PRON VERB ADP NOUN CCONJ ADV PRON VERB PUNCT
tagged_tokens: Князът_NOUN се_PRON върна_VERB от_ADP лов_NOUN и_CCONJ сега_ADV се_PRON къпеше_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Старостата прекара в заселката , а дълга не изплати .
tags: NOUN VERB ADP NOUN PUNCT CCONJ NOUN PART VERB PUNCT
tagged_tokens: Старостата_NOUN прекара_VERB в_ADP заселката_NOUN ,_PUNCT а_CCONJ дълга_NOUN не_PART изплати_VERB ._PUNCT

B) tokens: Градоначалникът остана в селището , но кредита не регулира .
tags: NOUN VERB ADP NOUN PUNCT CCONJ NOUN PART VERB PUNCT
tagged_tokens: Градоначалникът_NOUN остана_VERB в_ADP селището_NOUN ,_PUNCT но_CCONJ кредита_NOUN не_PART регулира_VERB ._PUNCT

C) tokens: Началникът се задържи в общината , но заема не уреди .
tags: NOUN PRON VERB ADP NOUN PUNCT CCONJ NOUN PART VERB PUNCT
tagged_tokens: Началникът_NOUN се_PRON задържи_VERB в_ADP общината_NOUN ,_PUNCT но_CCONJ заема_NOUN не_PART уреди_VERB ._PUNCTD) tokens: Кметът се задържа в селото , но заема не върна .
tags: NOUN PRON VERB ADP NOUN PUNCT CCONJ NOUN PART VERB PUNCT
tagged_tokens: Кметът_NOUN се_PRON задържа_VERB в_ADP селото_NOUN ,_PUNCT но_CCONJ заема_NOUN не_PART върна_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Освен разцепа дръмът зави под Трапезица , на чиито билози не се забелязваха следи .
tags: ADP NOUN NOUN VERB ADP PROPN PUNCT ADP DET NOUN NEG PART VERB NOUN PUNCT
tagged_tokens: Освен_ADP разцепа_NOUN дръмът_NOUN зави_VERB под_ADP Трапезица_PROPN ,_PUNCT на_ADP чиито_DET билози_NOUN не_NEG се_PART забелязваха_VERB следи_NOUN ._PUNCT

B) tokens: По-нататък от прореза шосето се извиха под Трапезица , от чиито ребра не миришеше живот .
tags: ADV ADP NOUN NOUN PART VERB ADP PROPN PUNCT ADP DET NOUN NEG VERB NOUN PUNCT
tagged_tokens: По-нататък_ADV от_ADP прореза_NOUN шосето_NOUN се_PART извиха_VERB под_ADP Трапезица_PROPN ,_PUNCT от_ADP чиито_DET ребра_NOUN не_NEG миришеше_VERB живот_NOUN ._PUNCT

C) tokens: След спукването пътечката кривна под Трапезица , по чиито стени не събирало души .
tags: ADP NOUN NOUN VERB ADP PROPN PUNCT ADP DET NOUN NEG VERB NOUN PUNCT
tagged_tokens: След_ADP спукването_NOUN пътечката_NOUN кривна_VERB под_ADP Трапезица_PROPN ,_PUNCT по_ADP чиито_DET стени_NOUN не_NEG събирало_VERB души_NOUN ._PUNCTD) tokens: Отвъд пролома пътят изви под Трапезица , чиито склонове изглеждаха съвсем пусти .
tags: ADP NOUN NOUN VERB ADP PROPN PUNCT DET NOUN VERB ADV ADJ PUNCT
tagged_tokens: Отвъд_ADP пролома_NOUN пътят_NOUN изви_VERB под_ADP Трапезица_PROPN ,_PUNCT чиито_DET склонове_NOUN изглеждаха_VERB съвсем_ADV пусти_ADJ ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Заминаваме да се разхождаме , накъде ни сърце копнее .
tags: VERB AUX VERB PUNCT ADV PRON NOUN VERB PUNCT
tagged_tokens: Заминаваме_VERB да_AUX се_VERB разхождаме_VERB ,_PUNCT накъде_ADV ни_PRON сърце_NOUN копнее_VERB ._PUNCT

B) tokens: Отпътуваме да кръстосваме , дето ни дух влече .
tags: VERB AUX VERB PUNCT SCONJ PRON NOUN VERB PUNCT
tagged_tokens: Отпътуваме_VERB да_AUX кръстосваме_VERB ,_PUNCT дето_SCONJ ни_PRON дух_NOUN влече_VERB ._PUNCT

C) tokens: Подаваме се на шлях , къдри ни воля насочва .
tags: VERB PRON ADP NOUN PUNCT ADJ PRON NOUN VERB PUNCT
tagged_tokens: Подаваме_VERB се_PRON на_ADP шлях_NOUN ,_PUNCT къдри_ADJ ни_PRON воля_NOUN насочва_VERB ._PUNCTD) tokens: Тръгваме да пътуваме , където ни душа иска .
tags: VERB AUX VERB PUNCT ADV PRON NOUN VERB PUNCT
tagged_tokens: Тръгваме_VERB да_AUX пътуваме_VERB ,_PUNCT където_ADV ни_PRON душа_NOUN иска_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""A""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: В метропола действието бяха почти същи , въпреки че елите и ромите елеомани бяха впечатляващо по-малко от българите .
tags: ADP NOUN NOUN AUX PRON ADJ PUNCT SCONJ SCONJ NOUN CCONJ NOUN NOUN AUX ADJ ADV ADP NOUN PUNCT
tagged_tokens: В_ADP метропола_NOUN действието_NOUN бяха_AUX почти_PRON същи_ADJ ,_PUNCT въпреки_SCONJ че_SCONJ елите_NOUN и_CCONJ ромите_NOUN елеомани_NOUN бяха_AUX впечатляващо_ADJ по-малко_ADV от_ADP българите_NOUN ._PUNCT

B) tokens: В селището снагите бяха най-малко сходни , макар че хелените и молдованите хеленомани бяха ловко по-малко от българите .
tags: ADP NOUN NOUN AUX INTJ ADJ ADJ PUNCT CONJ SCONJ NOUN CCONJ NOUN NOUN AUX ADV ADV ADP NOUN PUNCT
tagged_tokens: В_ADP селището_NOUN снагите_NOUN бяха_AUX най-малко_INTJ сходни_ADJ ,_PUNCT макар_CONJ че_SCONJ хелените_NOUN и_CCONJ молдованите_NOUN хеленомани_NOUN бяха_AUX ловко_ADV по-малко_ADV от_ADP българите_NOUN ._PUNCT

C) tokens: В населението влиянието бяха скоро еднакви , въпреки че гръците и влашите гръцомани бяха рядко по-малко от българите .
tags: ADP NOUN NOUN AUX ADV ADJ PUNCT SCONJ SCONJ NOUN CCONJ NOUN NOUN AUX ADV ADV ADP NOUN PUNCT
tagged_tokens: В_ADP населението_NOUN влиянието_NOUN бяха_AUX скоро_ADV еднакви_ADJ ,_PUNCT въпреки_SCONJ че_SCONJ гръците_NOUN и_CCONJ влашите_NOUN гръцомани_NOUN бяха_AUX рядко_ADV по-малко_ADV от_ADP българите_NOUN ._PUNCTD) tokens: В града силите бяха едва ли не равни , при все че гърците и власите гъркомани бяха значително по-малко от българите .
tags: ADP NOUN NOUN AUX ADV PART INTJ ADJ PUNCT ADP ADV SCONJ NOUN CCONJ NOUN NOUN AUX ADV ADV ADP NOUN PUNCT
tagged_tokens: В_ADP града_NOUN силите_NOUN бяха_AUX едва_ADV ли_PART не_INTJ равни_ADJ ,_PUNCT при_ADP все_ADV че_SCONJ гърците_NOUN и_CCONJ власите_NOUN гъркомани_NOUN бяха_AUX значително_ADV по-малко_ADV от_ADP българите_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Не ще загубя във вселената каквото и да ми се случва .
tags: PART AUX VERB ADP NOUN DET CCONJ AUX PRON PRON VERB PUNCT
tagged_tokens: Не_PART ще_AUX загубя_VERB във_ADP вселената_NOUN каквото_DET и_CCONJ да_AUX ми_PRON се_PRON случва_VERB ._PUNCT

B) tokens: Няма да потъна в света каквото и да ми се случва .
tags: VERB AUX VERB ADP NOUN DET CCONJ AUX PRON PRON VERB PUNCT
tagged_tokens: Няма_VERB да_AUX потъна_VERB в_ADP света_NOUN каквото_DET и_CCONJ да_AUX ми_PRON се_PRON случва_VERB ._PUNCT

C) tokens: Не ще нападна в средата каквото и да ми се случи .
tags: PART AUX VERB ADP NOUN DET CCONJ AUX PRON PRON VERB PUNCT
tagged_tokens: Не_PART ще_AUX нападна_VERB в_ADP средата_NOUN каквото_DET и_CCONJ да_AUX ми_PRON се_PRON случи_VERB ._PUNCTD) tokens: Няма да пропадна в света каквото и да ми се случи .
tags: VERB AUX VERB ADP NOUN DET CCONJ AUX PRON PRON VERB PUNCT
tagged_tokens: Няма_VERB да_AUX пропадна_VERB в_ADP света_NOUN каквото_DET и_CCONJ да_AUX ми_PRON се_PRON случи_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Ира запита какво се случва .
tags: PROPN VERB DET VERB PUNCT
tagged_tokens: Ира_PROPN запита_VERB какво_DET се_VERB случва_VERB ._PUNCT

B) tokens: Ирина поиска какво има .
tags: PROPN VERB DET VERB PUNCT
tagged_tokens: Ирина_PROPN поиска_VERB какво_DET има_VERB ._PUNCT

C) tokens: Ирина се озова какво е .
tags: PROPN VERB DET VERB PUNCT
tagged_tokens: Ирина_PROPN се_VERB озова_VERB какво_DET е_VERB ._PUNCTD) tokens: Ирина попита какво става .
tags: PROPN VERB DET VERB PUNCT
tagged_tokens: Ирина_PROPN попита_VERB какво_DET става_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: - Аз бях .
tags: PUNCT PRON VERB PUNCT
tagged_tokens: -_PUNCT Аз_PRON бях_VERB ._PUNCT

B) tokens: - Аз ставам .
tags: PUNCT PRON VERB PUNCT
tagged_tokens: -_PUNCT Аз_PRON ставам_VERB ._PUNCT

C) tokens: - Аз се казвам .
tags: PUNCT PRON PRON VERB PUNCT
tagged_tokens: -_PUNCT Аз_PRON се_PRON казвам_VERB ._PUNCTD) tokens: - Аз съм .
tags: PUNCT PRON VERB PUNCT
tagged_tokens: -_PUNCT Аз_PRON съм_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Твърдят , че ги подкрепят .
tags: VERB PUNCT SCONJ PRON VERB PUNCT
tagged_tokens: Твърдят_VERB ,_PUNCT че_SCONJ ги_PRON подкрепят_VERB ._PUNCT

B) tokens: Изявяват , че им съдействат .
tags: VERB PUNCT SCONJ PRON VERB PUNCT
tagged_tokens: Изявяват_VERB ,_PUNCT че_SCONJ им_PRON съдействат_VERB ._PUNCT

C) tokens: Заявяват , че им асистират .
tags: VERB PUNCT SCONJ PRON VERB PUNCT
tagged_tokens: Заявяват_VERB ,_PUNCT че_SCONJ им_PRON асистират_VERB ._PUNCTD) tokens: Казват , че им се помага .
tags: VERB PUNCT SCONJ PRON PRON VERB PUNCT
tagged_tokens: Казват_VERB ,_PUNCT че_SCONJ им_PRON се_PRON помага_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Пожелавам да бъда тръгнал .
tags: VERB AUX AUX VERB PUNCT
tagged_tokens: Пожелавам_VERB да_AUX бъда_AUX тръгнал_VERB ._PUNCT

B) tokens: Желая да имам заминаване .
tags: VERB AUX VERB NOUN PUNCT
tagged_tokens: Желая_VERB да_AUX имам_VERB заминаване_NOUN ._PUNCT

C) tokens: Стремя се да съм потеглил .
tags: VERB PRON AUX VERB PUNCT
tagged_tokens: Стремя_VERB се_PRON да_AUX съм_AUX потеглил_VERB ._PUNCTD) tokens: Искам да съм заминал .
tags: VERB AUX AUX VERB PUNCT
tagged_tokens: Искам_VERB да_AUX съм_AUX заминал_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Очаквах , че би да изрече .
tags: VERB PRON PUNCT SCONJ VERB AUX VERB PUNCT
tagged_tokens: Очаквах_VERB ,_PUNCT че_SCONJ би_VERB да_AUX изрече_VERB ._PUNCT

B) tokens: Исках , че щя да кажа .
tags: VERB PRON PUNCT SCONJ VERB AUX VERB PUNCT
tagged_tokens: Исках_VERB ,_PUNCT че_SCONJ щя_VERB да_AUX кажа_VERB ._PUNCT

C) tokens: Мечтаех , че ще да изкаже .
tags: VERB PRON PUNCT SCONJ VERB AUX VERB PUNCT
tagged_tokens: Мечтаех_VERB ,_PUNCT че_SCONJ ще_VERB да_AUX изкаже_VERB ._PUNCTD) tokens: Надявах се , че щеше да каже .
tags: VERB PRON PUNCT SCONJ VERB AUX VERB PUNCT
tagged_tokens: Надявах_VERB се_PRON ,_PUNCT че_SCONJ щеше_VERB да_AUX каже_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Побери писмо на масичката .
tags: VERB NOUN ADP NOUN PUNCT
tagged_tokens: Побери_VERB писмо_NOUN на_ADP масичката_NOUN ._PUNCT

B) tokens: Взете писмо на бюрото .
tags: VERB NOUN ADP NOUN PUNCT
tagged_tokens: Взете_VERB писмо_NOUN на_ADP бюрото_NOUN ._PUNCT

C) tokens: Взема писма на трапезата .
tags: VERB NOUN ADP NOUN PUNCT
tagged_tokens: Взема_VERB писма_NOUN на_ADP трапезата_NOUN ._PUNCTD) tokens: Вземи писмото на масата .
tags: VERB NOUN ADP NOUN PUNCT
tagged_tokens: Вземи_VERB писмото_NOUN на_ADP масата_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Той е вероятен да тръгне .
tags: PRON AUX ADJ AUX VERB PUNCT
tagged_tokens: Той_PRON е_AUX вероятен_ADJ да_AUX тръгне_VERB ._PUNCT

B) tokens: Той е по-скоро да си отиде .
tags: PRON AUX ADV AUX PRON VERB PUNCT
tagged_tokens: Той_PRON е_AUX по-скоро_ADV да_AUX си_PRON отиде_VERB ._PUNCT

C) tokens: Той е верогоден да напусне .
tags: PRON AUX ADJ AUX VERB PUNCT
tagged_tokens: Той_PRON е_AUX верогоден_ADJ да_AUX напусне_VERB ._PUNCTD) tokens: Той е вероятно да замине .
tags: PRON AUX ADV AUX VERB PUNCT
tagged_tokens: Той_PRON е_AUX вероятно_ADV да_AUX замине_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Думаш , че поеш .
tags: VERB PUNCT SCONJ VERB PUNCT
tagged_tokens: Думаш_VERB ,_PUNCT че_SCONJ поеш_VERB ._PUNCT

B) tokens: Смяташ , че изпяваш .
tags: VERB PUNCT SCONJ VERB PUNCT
tagged_tokens: Смяташ_VERB ,_PUNCT че_SCONJ изпяваш_VERB ._PUNCT

C) tokens: Вярваш , че изпълняваш .
tags: VERB PUNCT SCONJ VERB PUNCT
tagged_tokens: Вярваш_VERB ,_PUNCT че_SCONJ изпълняваш_VERB ._PUNCTD) tokens: Мислиш , че пееш .
tags: VERB PUNCT SCONJ VERB PUNCT
tagged_tokens: Мислиш_VERB ,_PUNCT че_SCONJ пееш_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Той желае насока как да действа .
tags: PRON VERB NOUN ADV AUX VERB PUNCT
tagged_tokens: Той_PRON желае_VERB насока_NOUN как_ADV да_AUX действа_VERB ._PUNCT

B) tokens: Той търси указание дали да постъпи .
tags: PRON VERB NOUN PART AUX VERB PUNCT
tagged_tokens: Той_PRON търси_VERB указание_NOUN дали_PART да_AUX постъпи_VERB ._PUNCT

C) tokens: Той очаква пътеводител как да продължи .
tags: PRON VERB NOUN ADV AUX VERB PUNCT
tagged_tokens: Той_PRON очаква_VERB пътеводител_NOUN как_ADV да_AUX продължи_VERB ._PUNCTD) tokens: Той иска съвет дали да чака .
tags: PRON VERB NOUN PART AUX VERB PUNCT
tagged_tokens: Той_PRON иска_VERB съвет_NOUN дали_PART да_AUX чака_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Историите му за себе си им се допадат .
tags: NOUN PRON ADP PRON PART PRON VERB PUNCT
tagged_tokens: Историите_NOUN му_PRON за_ADP себе_PRON си_PART им_PRON се_PRON допадат_VERB ._PUNCT

B) tokens: Приказките си за себе си ги очароват .
tags: NOUN PART ADP PRON PART PRON VERB PUNCT
tagged_tokens: Приказките_NOUN си_PART за_ADP себе_PRON си_PART ги_PRON очароват_VERB ._PUNCT

C) tokens: Разказванията си за себе си ги привличат .
tags: NOUN PART ADP PRON PART PRON VERB PUNCT
tagged_tokens: Разказванията_NOUN си_PART за_ADP себе_PRON си_PART ги_PRON привличат_VERB ._PUNCTD) tokens: Неговите разкази за себе си се харесват .
tags: DET NOUN ADP PRON PART PRON VERB PUNCT
tagged_tokens: Неговите_DET разкази_NOUN за_ADP себе_PRON си_PART се_PRON харесват_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Съдействаха му на ученика .
tags: VERB PRON ADP NOUN PUNCT
tagged_tokens: Съдействаха_VERB му_PRON на_ADP ученика_NOUN ._PUNCT

B) tokens: Осигуриха му на научния .
tags: VERB PRON ADP ADJ PUNCT
tagged_tokens: Осигуриха_VERB му_PRON на_ADP научния_ADJ ._PUNCT

C) tokens: Придружиха му на образования .
tags: VERB PRON ADP ADJ PUNCT
tagged_tokens: Придружиха_VERB му_PRON на_ADP образования_ADJ ._PUNCTD) tokens: Помогнаха му на студента .
tags: VERB PRON ADP NOUN PUNCT
tagged_tokens: Помогнаха_VERB му_PRON на_ADP студента_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Подарил ли си му я ?
tags: VERB PART AUX PRON PRON PUNCT
tagged_tokens: Подарил_VERB ли_PART си_AUX му_PRON я_PRON ?_PUNCT

B) tokens: Дал ли са му я ?
tags: VERB PART AUX PRON PRON PUNCT
tagged_tokens: Дал_VERB ли_PART са_AUX му_PRON я_PRON ?_PUNCT

C) tokens: Присъдил ли си му я ?
tags: VERB PART AUX PRON PRON PUNCT
tagged_tokens: Присъдил_VERB ли_PART си_AUX му_PRON я_PRON ?_PUNCTD) tokens: Дал ли си му я ?
tags: VERB PART AUX PRON PRON PUNCT
tagged_tokens: Дал_VERB ли_PART си_AUX му_PRON я_PRON ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Била разгледана книгата , преди да се закупи .
tags: AUX VERB NOUN PUNCT ADP AUX PRON VERB PUNCT
tagged_tokens: Била_AUX разгледана_VERB книгата_NOUN ,_PUNCT преди_ADP да_AUX се_PRON закупи_VERB ._PUNCT

B) tokens: Беше прегледана книгата , преди да е закупена .
tags: AUX VERB NOUN PUNCT ADP AUX AUX VERB PUNCT
tagged_tokens: Беше_AUX прегледана_VERB книгата_NOUN ,_PUNCT преди_ADP да_AUX е_AUX закупена_VERB ._PUNCT

C) tokens: Била изчетена книгата , преди да се купи .
tags: AUX VERB NOUN PUNCT ADP AUX PRON VERB PUNCT
tagged_tokens: Била_AUX изчетена_VERB книгата_NOUN ,_PUNCT преди_ADP да_AUX се_PRON купи_VERB ._PUNCTD) tokens: Беше прочетена книгата , преди да бъде купена .
tags: AUX VERB NOUN PUNCT ADP AUX AUX VERB PUNCT
tagged_tokens: Беше_AUX прочетена_VERB книгата_NOUN ,_PUNCT преди_ADP да_AUX бъде_AUX купена_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: За този ще говорим .
tags: ADP DET AUX VERB PUNCT
tagged_tokens: За_ADP този_DET ще_AUX говорим_VERB ._PUNCT

B) tokens: С това ще разговаряме .
tags: ADP PRON AUX VERB PUNCT
tagged_tokens: С_ADP това_PRON ще_AUX разговаряме_VERB ._PUNCT

C) tokens: От него ще си говоря .
tags: ADP PRON AUX PART VERB PUNCT
tagged_tokens: От_ADP него_PRON ще_AUX си_PART говоря_VERB ._PUNCTD) tokens: С него ще говоря .
tags: ADP PRON AUX VERB PUNCT
tagged_tokens: С_ADP него_PRON ще_AUX говоря_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Всички в този зал владеят по два езика .
tags: DET ADP DET NOUN VERB ADP NUM NOUN PUNCT
tagged_tokens: Всички_DET в_ADP този_DET зал_NOUN владеят_VERB по_ADP два_NUM езика_NOUN ._PUNCT

B) tokens: Който и да е в тази мястност умее два езика .
tags: PRON ADV PART ADP DET NOUN VERB NUM NOUN PUNCT
tagged_tokens: Който_PRON и_ADV да_PART в_ADP тази_DET мястност_NOUN умее_VERB два_NUM езика_NOUN ._PUNCT

C) tokens: Никой в тоя кабинет не е незнаещ по два езика .
tags: PRON ADP DET NOUN PART AUX ADJ ADP NUM NOUN PUNCT
tagged_tokens: Никой_PRON в_ADP тоя_DET кабинет_NOUN не_PART е_AUX незнаещ_ADJ по_ADP два_NUM езика_NOUN ._PUNCTD) tokens: Всеки в тая стая знае два езика .
tags: DET ADP DET NOUN VERB NUM NOUN PUNCT
tagged_tokens: Всеки_DET в_ADP тая_DET стая_NOUN знае_VERB два_NUM езика_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Присъствието на Иван тук е чудно .
tags: NOUN ADP PROPN ADV AUX ADJ PUNCT
tagged_tokens: Присъствието_NOUN на_ADP Иван_PROPN тук_ADV е_AUX чудно_ADJ ._PUNCT

B) tokens: Появяването на Иван тук е неочаквано .
tags: NOUN ADP PROPN ADV AUX ADJ PUNCT
tagged_tokens: Появяването_NOUN на_ADP Иван_PROPN тук_ADV е_AUX неочаквано_ADJ ._PUNCT

C) tokens: Прибъдването на Иван тук е загадъчно .
tags: NOUN ADP PROPN ADV AUX ADJ PUNCT
tagged_tokens: Прибъдването_NOUN на_ADP Иван_PROPN тук_ADV е_AUX загадъчно_ADJ ._PUNCTD) tokens: Идването на Иван тук е странно .
tags: NOUN ADP PROPN ADV AUX ADJ PUNCT
tagged_tokens: Идването_NOUN на_ADP Иван_PROPN тук_ADV е_AUX странно_ADJ ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Той дойде само след два часа .
tags: PRON VERB PART ADP NUM NOUN PUNCT
tagged_tokens: Той_PRON дойде_VERB само_PART след_ADP два_NUM часа_NOUN ._PUNCT

B) tokens: Той се появи едва след два часа .
tags: PRON PRON VERB ADV ADP NUM NOUN PUNCT
tagged_tokens: Той_PRON се_PRON появи_VERB едва_ADV след_ADP два_NUM часа_NOUN ._PUNCT

C) tokens: Той привлезе едва след два часа .
tags: PRON VERB ADV ADP NUM NOUN PUNCT
tagged_tokens: Той_PRON привлезе_VERB едва_ADV след_ADP два_NUM часа_NOUN ._PUNCTD) tokens: Той пристигна едва след два часа .
tags: PRON VERB ADV ADP NUM NOUN PUNCT
tagged_tokens: Той_PRON пристигна_VERB едва_ADV след_ADP два_NUM часа_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Тя бе чаровна към вас .
tags: PRON AUX ADJ ADP PRON PUNCT
tagged_tokens: Тя_PRON бе_AUX чаровна_ADJ към_ADP вас_PRON ._PUNCT

B) tokens: Тя беше нежна към вас .
tags: PRON AUX ADJ ADP PRON PUNCT
tagged_tokens: Тя_PRON беше_AUX нежна_ADJ към_ADP вас_PRON ._PUNCT

C) tokens: Тя беше любезна към вас .
tags: PRON AUX ADJ ADP PRON PUNCT
tagged_tokens: Тя_PRON беше_AUX любезна_ADJ към_ADP вас_PRON ._PUNCTD) tokens: Тя беше мила към вас .
tags: PRON AUX ADJ ADP PRON PUNCT
tagged_tokens: Тя_PRON беше_AUX мила_ADJ към_ADP вас_PRON ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Тя посещаваше тук честичко тогава .
tags: PRON VERB ADV ADV ADV PUNCT
tagged_tokens: Тя_PRON посещаваше_VERB тук_ADV честичко_ADV тогава_ADV ._PUNCT

B) tokens: Тя ходеше тук често в онзи период .
tags: PRON VERB ADV ADV ADP DET NOUN PUNCT
tagged_tokens: Тя_PRON ходеше_VERB тук_ADV често_ADV в_ADP онзи_DET период_NOUN ._PUNCT

C) tokens: Тя дохождаше тук редовно тогава .
tags: PRON VERB ADV ADV ADV PUNCT
tagged_tokens: Тя_PRON дохождаше_VERB тук_ADV редовно_ADV тогава_ADV ._PUNCTD) tokens: Тя беше тук често тогава .
tags: PRON AUX ADV ADV ADV PUNCT
tagged_tokens: Тя_PRON беше_AUX тук_ADV често_ADV тогава_ADV ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Кои действа Петър ?
tags: DET VERB PROPN PUNCT
tagged_tokens: Кои_DET действа_VERB Петър_PROPN ?_PUNCT

B) tokens: Защо постъпва Петър ?
tags: PART VERB PROPN PUNCT
tagged_tokens: Защо_PART постъпва_VERB Петър_PROPN ?_PUNCT

C) tokens: С какво се занимава Петър ?
tags: ADP DET PRON VERB PROPN PUNCT
tagged_tokens: С_ADP какво_DET се_PRON занимава_VERB Петър_PROPN ?_PUNCTD) tokens: Какво прави Петър ?
tags: DET VERB PROPN PUNCT
tagged_tokens: Какво_DET прави_VERB Петър_PROPN ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Той се гледа .
tags: PRON PART VERB PUNCT
tagged_tokens: Той_PRON се_PART гледа_VERB ._PUNCT

B) tokens: Той си вижда .
tags: PRON PART VERB PUNCT
tagged_tokens: Той_PRON си_PART вижда_VERB ._PUNCT

C) tokens: Той се наблюдава .
tags: PRON PART VERB PUNCT
tagged_tokens: Той_PRON се_PART наблюдава_VERB ._PUNCTD) tokens: Той гледа себе си .
tags: PRON VERB PRON PART PUNCT
tagged_tokens: Той_PRON гледа_VERB себе_PRON си_PART ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: То надраска ръката си .
tags: PRON VERB NOUN PRON PUNCT
tagged_tokens: То_PRON надраска_VERB ръката_NOUN си_PRON ._PUNCT

B) tokens: То накърти ръката си .
tags: PRON VERB NOUN PRON PUNCT
tagged_tokens: То_PRON накърти_VERB ръката_NOUN си_PRON ._PUNCT

C) tokens: То издарка ръката си .
tags: PRON VERB NOUN PRON PUNCT
tagged_tokens: То_PRON издарка_VERB ръката_NOUN си_PRON ._PUNCTD) tokens: То одраска ръката си .
tags: PRON VERB NOUN PRON PUNCT
tagged_tokens: То_PRON одраска_VERB ръката_NOUN си_PRON ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Страстта на душите към себе си е безкрайна .
tags: NOUN ADP NOUN ADP PRON PART AUX ADJ PUNCT
tagged_tokens: Страстта_NOUN на_ADP душите_NOUN към_ADP себе_PRON си_PART е_AUX безкрайна_ADJ ._PUNCT

B) tokens: Нежността на сърцата към себе си е неизменна .
tags: NOUN ADP NOUN ADP PRON PART AUX ADJ PUNCT
tagged_tokens: Нежността_NOUN на_ADP сърцата_NOUN към_ADP себе_PRON си_PART е_AUX неизменна_ADJ ._PUNCT

C) tokens: Привързаността на хората към себе си е постоянна .
tags: NOUN ADP NOUN ADP PRON PART AUX ADJ PUNCT
tagged_tokens: Привързаността_NOUN на_ADP хората_NOUN към_ADP себе_PRON си_PART е_AUX постоянна_ADJ ._PUNCTD) tokens: Любовта на хората към себе си е вечна .
tags: NOUN ADP NOUN ADP PRON PART AUX ADJ PUNCT
tagged_tokens: Любовта_NOUN на_ADP хората_NOUN към_ADP себе_PRON си_PART е_AUX вечна_ADJ ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Че тя се намира там , му идва ужасно .
tags: SCONJ PRON PRON VERB ADV PUNCT PRON VERB ADV PUNCT
tagged_tokens: Че_SCONJ тя_PRON се_PRON намира_VERB там_ADV ,_PUNCT му_PRON идва_VERB ужасно_ADV ._PUNCT

B) tokens: Че тя е на място , му се става лошо .
tags: SCONJ PRON AUX ADP NOUN PUNCT PRON PRON VERB ADJ PUNCT
tagged_tokens: Че_SCONJ тя_PRON е_AUX на_ADP място_NOUN ,_PUNCT му_PRON се_PRON става_VERB лошо_ADJ ._PUNCT

C) tokens: Че тя се засича тука , му като загина .
tags: SCONJ PRON PRON VERB ADV PUNCT PRON SCONJ VERB PUNCT
tagged_tokens: Че_SCONJ тя_PRON се_PRON засича_VERB тука_ADV ,_PUNCT му_PRON като_SCONJ загина_VERB ._PUNCTD) tokens: Че тя е тук , му се струва ужасно .
tags: SCONJ PRON AUX ADV PUNCT PRON PRON VERB ADV PUNCT
tagged_tokens: Че_SCONJ тя_PRON е_AUX тук_ADV ,_PUNCT му_PRON се_PRON струва_VERB ужасно_ADV ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Кое смяташ , че е важно .
tags: DET VERB PUNCT SCONJ AUX ADV PUNCT
tagged_tokens: Кое_DET смяташ_VERB ,_PUNCT че_SCONJ е_AUX важно_ADV ._PUNCT

B) tokens: За теб какво значи , да е важно .
tags: ADP PRON DET VERB PUNCT SCONJ AUX ADV PUNCT
tagged_tokens: За_ADP теб_PRON какво_DET значи_VERB ,_PUNCT да_SCONJ е_AUX важно_ADV ._PUNCT

C) tokens: Според тебе , което е от значение .
tags: ADP PRON PUNCT DET AUX ADP NOUN PUNCT
tagged_tokens: Според_ADP тебе_PRON ,_PUNCT което_DET е_AUX от_ADP значение_NOUN ._PUNCTD) tokens: Какво мислиш , е важно .
tags: DET VERB PUNCT AUX ADV PUNCT
tagged_tokens: Какво_DET мислиш_VERB ,_PUNCT е_AUX важно_ADV ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Ти заспа , че я издирваш .
tags: PRON VERB PUNCT SCONJ PRON VERB PUNCT
tagged_tokens: Ти_PRON заспа_VERB ,_PUNCT че_SCONJ я_PRON издирваш_VERB ._PUNCT

B) tokens: Ти пропусна , че я гледаш .
tags: PRON VERB PUNCT SCONJ PRON VERB PUNCT
tagged_tokens: Ти_PRON пропусна_VERB ,_PUNCT че_SCONJ я_PRON гледаш_VERB ._PUNCT

C) tokens: Ти занемогна , че я следиш .
tags: PRON VERB PUNCT SCONJ PRON VERB PUNCT
tagged_tokens: Ти_PRON занемогна_VERB ,_PUNCT че_SCONJ я_PRON следиш_VERB ._PUNCTD) tokens: Ти забрави , че я търсиш .
tags: PRON VERB PUNCT SCONJ PRON VERB PUNCT
tagged_tokens: Ти_PRON забрави_VERB ,_PUNCT че_SCONJ я_PRON търсиш_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Повика , кого поискаш .
tags: VERB PUNCT PRON VERB PUNCT
tagged_tokens: Повика_VERB ,_PUNCT кого_PRON поискаш_VERB ._PUNCT

B) tokens: Кани , който желаеш .
tags: VERB PUNCT PRON VERB PUNCT
tagged_tokens: Кани_VERB ,_PUNCT който_PRON желаеш_VERB ._PUNCT

C) tokens: Извика , кой да сакаш .
tags: VERB PUNCT PRON SCONJ VERB PUNCT
tagged_tokens: Извика_VERB ,_PUNCT кой_PRON да_SCONJ сакаш_VERB ._PUNCTD) tokens: Повикай , когото искаш .
tags: VERB PUNCT PRON VERB PUNCT
tagged_tokens: Повикай_VERB ,_PUNCT когото_PRON искаш_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Очаквам да почна да говориш .
tags: VERB AUX VERB AUX VERB PUNCT
tagged_tokens: Очаквам_VERB да_AUX почна_VERB да_AUX говориш_VERB ._PUNCT

B) tokens: Изпълня се с нетърпение да чуя твоето мнение .
tags: VERB PRON ADP NOUN AUX VERB DET NOUN PUNCT
tagged_tokens: Изпълня_VERB се_PRON с_ADP нетърпение_NOUN да_AUX чуя_VERB твоето_DET мнение_NOUN ._PUNCT

C) tokens: Не мога да изчакам да прозвучиш .
tags: PART VERB AUX VERB AUX VERB PUNCT
tagged_tokens: Не_PART мога_VERB да_AUX изчакам_VERB да_AUX прозвучиш_VERB ._PUNCTD) tokens: Чакам да чуя какво ще кажеш .
tags: VERB AUX VERB DET AUX VERB PUNCT
tagged_tokens: Чакам_VERB да_AUX чуя_VERB какво_DET ще_AUX кажеш_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Bulgarian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Очаквам да чуеш какво ще кажа .
tags: VERB AUX VERB DET AUX VERB PUNCT
tagged_tokens: Очаквам_VERB да_AUX чуеш_VERB какво_DET ще_AUX кажа_VERB ._PUNCT

B) tokens: Изчакам да слушаш какво ще кажеш .
tags: VERB AUX VERB DET AUX VERB PUNCT
tagged_tokens: Изчакам_VERB да_AUX слушаш_VERB какво_DET ще_AUX кажеш_VERB ._PUNCT

C) tokens: Почакам да знаеш какво ще кажа .
tags: VERB AUX VERB DET AUX VERB PUNCT
tagged_tokens: Почакам_VERB да_AUX знаеш_VERB какво_DET ще_AUX кажа_VERB ._PUNCTD) tokens: Чакам да чуя какво ще кажеш .
tags: VERB AUX VERB DET AUX VERB PUNCT
tagged_tokens: Чакам_VERB да_AUX чуя_VERB какво_DET ще_AUX кажеш_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
