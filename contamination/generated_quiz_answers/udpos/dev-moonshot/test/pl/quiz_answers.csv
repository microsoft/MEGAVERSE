answer,prompt
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: 569 lat temu poddano na stosu Joannę D'Arc .
tags: NUM NOUN ADP VERB ADP NOUN PROPN NOUN PUNCT
tagged_tokens: 569_NUM lat_NOUN temu_ADP poddano_VERB na_ADP stosu_NOUN Joannę_PROPN D'Arc_NOUN ._PUNCT

B) tokens: 569 lat temu skazano na płonący stos Joannę D'Arc .
tags: NUM NOUN ADP VERB ADP ADJ NOUN PROPN NOUN PUNCT
tagged_tokens: 569_NUM lat_NOUN temu_ADP skazano_VERB na_ADP płonący_ADJ stos_NOUN Joannę_PROPN D'Arc_NOUN ._PUNCT

C) tokens: 569 lat temu spopieleniono na ognisku Joannę D'Arc .
tags: NUM NOUN ADP VERB ADP NOUN PROPN NOUN PUNCT
tagged_tokens: 569_NUM lat_NOUN temu_ADP spopieleniono_VERB na_ADP ognisku_NOUN Joannę_PROPN D'Arc_NOUN ._PUNCTD) tokens: 569 lat temu spalono na stosie Joannę D'Arc .
tags: NUM NOUN ADP VERB ADP NOUN PROPN NOUN PUNCT
tagged_tokens: 569_NUM lat_NOUN temu_ADP spalono_VERB na_ADP stosie_NOUN Joannę_PROPN D'Arc_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: 6 zbiegów zniknęło z oddziału dla obłąkanych w Radomiu .
tags: NUM NOUN VERB ADP NOUN ADP ADJ ADP PROPN PUNCT
tagged_tokens: 6_NUM zbiegów_NOUN zniknęło_VERB z_ADP oddziału_NOUN dla_ADP obłąkanych_ADJ w_ADP Radomiu_PROPN ._PUNCT

B) tokens: 6 uciekinierów znikło z kliniki psychotycznych w Radomiu .
tags: NUM NOUN VERB ADP NOUN ADJ ADP PROPN PUNCT
tagged_tokens: 6_NUM uciekinierów_NOUN znikło_VERB z_ADP kliniki_NOUN psychotycznych_ADJ w_ADP Radomiu_PROPN ._PUNCT

C) tokens: 6 zuchwałych zmyło się z zakładu postrzelonych w Radomiu .
tags: NUM ADJ VERB PART ADP NOUN ADJ ADP PROPN PUNCT
tagged_tokens: 6_NUM zuchwałych_ADJ zmyło_VERB się_PART z_ADP zakładu_NOUN postrzelonych_ADJ w_ADP Radomiu_PROPN ._PUNCTD) tokens: 6 przestępców uciekło ze szpitala psychiatrycznego w Radomiu .
tags: NUM NOUN VERB ADP NOUN ADJ ADP PROPN PUNCT
tagged_tokens: 6_NUM przestępców_NOUN uciekło_VERB ze_ADP szpitala_NOUN psychiatrycznego_ADJ w_ADP Radomiu_PROPN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Co gdyby występowały dwa lub trzy ?
tags: PRON SCONJ VERB NUM CCONJ NUM PUNCT
tagged_tokens: Co_PRON gdyby_SCONJ występowały_VERB dwa_NUM lub_CCONJ trzy_NUM ?_PUNCT

B) tokens: A gdybyśmy mieli dwa bądź trzy ?
tags: CCONJ SCONJ AUX VERB NUM CCONJ NUM PUNCT
tagged_tokens: A_CCONJ gdybyśmy_SCONJ mieli_AUX dwa_NUM bądź_CCONJ trzy_NUM ?_PUNCT

C) tokens: I co jeśli istniałyby dwa albo trzy ?
tags: CCONJ PRON SCONJ VERB NUM CCONJ NUM PUNCT
tagged_tokens: I_CCONJ co_PRON jeśli_SCONJ istniałyby_VERB dwa_NUM albo_CCONJ trzy_NUM ?_PUNCTD) tokens: A co by było , gdyby były dwa albo trzy ?
tags: CCONJ PRON AUX VERB PUNCT SCONJ VERB NUM CCONJ NUM PUNCT
tagged_tokens: A_CCONJ co_PRON by_AUX było_VERB ,_PUNCT gdyby_SCONJ były_VERB dwa_NUM albo_CCONJ trzy_NUM ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: - A jak ma być ?
tags: PUNCT CCONJ ADV VERB VERB PUNCT
tagged_tokens: -_PUNCT A_CCONJ jak_ADV ma_VERB być_VERB ?_PUNCT

B) tokens: - A co się ma dziać ?
tags: PUNCT CCONJ PRON PRON VERB VERB PUNCT
tagged_tokens: -_PUNCT A_CCONJ co_PRON się_PRON ma_VERB dziać_VERB ?_PUNCT

C) tokens: - A co to powinno być ?
tags: PUNCT CCONJ PRON DET VERB VERB PUNCT
tagged_tokens: -_PUNCT A_CCONJ co_PRON to_DET powinno_VERB być_VERB ?_PUNCTD) tokens: - A co ma być ?
tags: PUNCT CCONJ PRON VERB VERB PUNCT
tagged_tokens: -_PUNCT A_CCONJ co_PRON ma_VERB być_VERB ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: I czym się zajmujecie ?
tags: CCONJ ADVSC PRON VERB PUNCT
tagged_tokens: I_CCONJ czym_ADVSC się_PRON zajmujecie_VERB ?_PUNCT

B) tokens: A cześć z was robi ?
tags: CCONJ NSUBJ PART PRON VERB PUNCT
tagged_tokens: A_CCONJ część_NSUBJ z_PART was_PRON robi_VERB ?_PUNCT

C) tokens: A jaką macie działalność ?
tags: CCONJ ADJ PRON NOUN PUNCT
tagged_tokens: A_CCONJ jaką_ADJ macie_PRON działalność_NOUN ?_PUNCTD) tokens: A co wy robicie ?
tags: CCONJ PRON PRON VERB PUNCT
tagged_tokens: A_CCONJ co_PRON wy_PRON robicie_VERB ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: A glukozę posiadasz ?
tags: CCONJ NOUN VERB PUNCT
tagged_tokens: A_CCONJ glukozę_NOUN posiadasz_VERB ?_PUNCT

B) tokens: A sacharoza jest u ciebie ?
tags: CCONJ NOUN VERB ADP PRON PUNCT
tagged_tokens: A_CCONJ sacharoza_NOUN jest_VERB u_ADP ciebie_PRON ?_PUNCT

C) tokens: A słodzik dysponujesz ?
tags: CCONJ NOUN VERB PUNCT
tagged_tokens: A_CCONJ słodzik_NOUN dysponujesz_VERB ?_PUNCTD) tokens: A cukier masz ?
tags: CCONJ NOUN VERB PUNCT
tagged_tokens: A_CCONJ cukier_NOUN masz_VERB ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: A nieraz sam oddaje .
tags: CCONJ ADV ADJ VERB PUNCT
tagged_tokens: A_CCONJ nieraz_ADV sam_ADJ oddaje_VERB ._PUNCT

B) tokens: A czasami sam wystrzeliwuje .
tags: CCONJ NOUN ADJ VERB PUNCT
tagged_tokens: A_CCONJ czasami_NOUN sam_ADJ wystrzeliwuje_VERB ._PUNCT

C) tokens: A niekiedy sam wypala .
tags: CCONJ ADV ADJ VERB PUNCT
tagged_tokens: A_CCONJ niekiedy_ADV sam_ADJ wypala_VERB ._PUNCTD) tokens: A czasem sam strzela .
tags: CCONJ NOUN ADJ VERB PUNCT
tagged_tokens: A_CCONJ czasem_NOUN sam_ADJ strzela_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: - a szkarłatna makówka jest ?
tags: PUNCT CCONJ ADJ NOUN VERB PUNCT
tagged_tokens: -_PUNCT a_CCONJ szkarłatna_ADJ makówka_NOUN jest_VERB ?_PUNCT

B) tokens: - a rumiana gąska jest ?
tags: PUNCT CCONJ ADJ NOUN VERB PUNCT
tagged_tokens: -_PUNCT a_CCONJ rumiana_ADJ gąska_NOUN jest_VERB ?_PUNCT

C) tokens: - a purpurowa gibka jest ?
tags: PUNCT CCONJ ADJ NOUN VERB PUNCT
tagged_tokens: -_PUNCT a_CCONJ purpurowa_ADJ gibka_NOUN jest_VERB ?_PUNCTD) tokens: – a czerwona frotka jest ?
tags: PUNCT CCONJ ADJ NOUN VERB PUNCT
tagged_tokens: –_PUNCT a_CCONJ czerwona_ADJ frotka_NOUN jest_VERB ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""A""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: A kiedy ja stwierdził em , że nie posiadam własnej ojczyzny ?
tags: CCONJ ADV PRON VERB AUX PUNCT SCONJ PART VERB ADJ NOUN PUNCT
tagged_tokens: A_CCONJ kiedy_ADV ja_PRON stwierdził_VERB em_AUX ,_PUNCT że_SCONJ nie_PART posiadam_VERB własnej_ADJ ojczyzny_NOUN ?_PUNCT

B) tokens: A gdzie ja oświadczył em , że nie dysponuję moją ojczyzną ?
tags: CCONJ ADV PRON VERB AUX PUNCT SCONJ PART VERB PRON NOUN PUNCT
tagged_tokens: A_CCONJ gdzie_ADV ja_PRON oświadczył_VERB em_AUX ,_PUNCT że_SCONJ nie_PART dysponuję_VERB moją_PRON ojczyzną_NOUN ?_PUNCT

C) tokens: A kiedy ja zadeklarował em , że nie mam nadal ojczyzny ?
tags: CCONJ ADV PRON VERB AUX PUNCT SCONJ PART VERB ADV NOUN PUNCT
tagged_tokens: A_CCONJ kiedy_ADV ja_PRON zadeklarował_VERB em_AUX ,_PUNCT że_SCONJ nie_PART mam_VERB nadal_ADV ojczyzny_NOUN ?_PUNCTD) tokens: A gdzie ja powiedział em , że nie mam swojej ojczyzny ?
tags: CCONJ ADV PRON VERB AUX PUNCT SCONJ PART VERB DET NOUN PUNCT
tagged_tokens: A_CCONJ gdzie_ADV ja_PRON powiedział_VERB em_AUX ,_PUNCT że_SCONJ nie_PART mam_VERB swojej_DET ojczyzny_NOUN ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: A góralki jeste ogniste baby .
tags: CCONJ NOUN COP ADJ NOUN PUNCT
tagged_tokens: A_CCONJ góralki_NOUN jeste_COP ogniste_ADJ baby_NOUN ._PUNCT

B) tokens: A podhalance to sę dziarskie panie .
tags: CCONJ NOUN AUX REFL ADJ NOUN PUNCT
tagged_tokens: A_CCONJ podhalance_NOUN to_AUX sę_REFL dziarskie_ADJ panie_NOUN ._PUNCT

C) tokens: A zbójnice to są odważne niewiasty .
tags: CCONJ NOUN AUX AUX ADJ NOUN PUNCT
tagged_tokens: A_CCONJ zbójnice_NOUN to_AUX są_AUX odważne_ADJ niewiasty_NOUN ._PUNCTD) tokens: A górolki to som scyre kobiety .
tags: CCONJ NOUN AUX AUX ADJ NOUN PUNCT
tagged_tokens: A_CCONJ górolki_NOUN to_AUX som_AUX scyre_ADJ kobiety_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: A inny przybywa do audycji nietrzeźwy .
tags: CCONJ ADJ VERB ADP NOUN ADJ PUNCT
tagged_tokens: A_CCONJ inny_ADJ przybywa_VERB do_ADP audycji_NOUN nietrzeźwy_ADJ ._PUNCT

B) tokens: A odmienny dociera do programu spity .
tags: CCONJ ADJ VERB ADP NOUN ADJ PUNCT
tagged_tokens: A_CCONJ odmienny_ADJ dociera_VERB do_ADP programu_NOUN spity_ADJ ._PUNCT

C) tokens: A inaczej dotyka do transmisji upity .
tags: CCONJ ADV VERB ADP NOUN ADJ PUNCT
tagged_tokens: A_CCONJ inaczej_ADV dotyka_VERB do_ADP transmisji_NOUN upity_ADJ ._PUNCTD) tokens: A inni przychodzą do telewizji pijani .
tags: CCONJ ADJ VERB ADP NOUN ADJ PUNCT
tagged_tokens: A_CCONJ inni_ADJ przychodzą_VERB do_ADP telewizji_NOUN pijani_ADJ ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: A prawie straciłam nad sobą kontrolę .
tags: CCONJ ADV VERB ADP PRON NOUN PUNCT
tagged_tokens: A_CCONJ prawie_ADV straciłam_VERB nad_ADP sobą_PRON kontrolę_NOUN ._PUNCT

B) tokens: A niemal utraciła z nimi kontakt .
tags: CCONJ PART VERB ADP PRON NOUN PUNCT
tagged_tokens: A_CCONJ niemal_PART utraciła_VERB z_ADP nimi_PRON kontakt_NOUN ._PUNCT

C) tokens: A ledwo zachowałam przy nich rozsądek .
tags: CCONJ ADV VERB ADP PRON NOUN PUNCT
tagged_tokens: A_CCONJ ledwo_ADV zachowałam_VERB przy_ADP nich_PRON rozsądek_NOUN ._PUNCTD) tokens: A ja omal nie postradała m zmysłów .
tags: CCONJ PRON PART PART VERB AUX NOUN PUNCT
tagged_tokens: A_CCONJ ja_PRON omal_PART nie_PART postradała_VERB m_AUX zmysłów_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: A ja marznę .
tags: CCONJ PRON VERB PUNCT
tagged_tokens: A_CCONJ ja_PRON marznę_VERB ._PUNCT

B) tokens: A ja ziębię .
tags: CCONJ PRON VERB PUNCT
tagged_tokens: A_CCONJ ja_PRON ziębię_VERB ._PUNCT

C) tokens: A ja chłodnieję .
tags: CCONJ PRON VERB PUNCT
tagged_tokens: A_CCONJ ja_PRON chłodnieję_VERB ._PUNCTD) tokens: A ja stygnę .
tags: CCONJ PRON VERB PUNCT
tagged_tokens: A_CCONJ ja_PRON stygnę_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: i jak się nazywa ?
tags: CCONJ ADV PRON VERB PUNCT
tagged_tokens: i_CCONJ jak_ADV się_PRON nazywa_VERB ?_PUNCT

B) tokens: oraz jak ma imię ?
tags: CCONJ ADV VERB NOUN PUNCT
tagged_tokens: oraz_CCONJ jak_ADV ma_VERB imię_NOUN ?_PUNCT

C) tokens: a jak się zwie ?
tags: CCONJ ADV PRON VERB PUNCT
tagged_tokens: a_CCONJ jak_ADV się_PRON zwie_VERB ?_PUNCTD) tokens: a jak ma na imię ?
tags: CCONJ ADV VERB ADP NOUN PUNCT
tagged_tokens: a_CCONJ jak_ADV ma_VERB na_ADP imię_NOUN ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: I co stanie się latem ?
tags: CCONJ CCONJ VERB VERB NOUN PUNCT
tagged_tokens: I_CCONJ co_CCONJ stanie_VERB się_VERB latem_NOUN ?_PUNCT

B) tokens: A gdy przyjdzie lato ?
tags: CCONJ ADV VERB NOUN PUNCT
tagged_tokens: A_CCONJ gdy_ADV przyjdzie_VERB lato_NOUN ?_PUNCT

C) tokens: I jak przybędzie lato ?
tags: CCONJ ADV VERB NOUN PUNCT
tagged_tokens: I_CCONJ jak_ADV przybędzie_VERB lato_NOUN ?_PUNCTD) tokens: A jak nadejdzie zima ?
tags: CCONJ ADV VERB NOUN PUNCT
tagged_tokens: A_CCONJ jak_ADV nadejdzie_VERB zima_NOUN ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: A jak się prezentuje wzwód Stossy ?
tags: CCONJ ADV PART VERB NOUN PROPN PUNCT
tagged_tokens: A_CCONJ jak_ADV się_PART prezentuje_VERB wzwód_NOUN Stossy_PROPN ?_PUNCT

B) tokens: A jak wygląda erekcja Stossa ?
tags: CCONJ ADV VERB NOUN PROPN PUNCT
tagged_tokens: A_CCONJ jak_ADV wygląda_VERB erekcja_NOUN Stossa_PROPN ?_PUNCT

C) tokens: A jak się ma wzwód Stossa ?
tags: CCONJ ADV PART VERB NOUN PROPN PUNCT
tagged_tokens: A_CCONJ jak_ADV się_PART ma_VERB wzwód_NOUN Stossa_PROPN ?_PUNCTD) tokens: A jak wygląda Stossa wzwód ?
tags: CCONJ ADV VERB PROPN NOUN PUNCT
tagged_tokens: A_CCONJ jak_ADV wygląda_VERB Stossa_PROPN wzwód_NOUN ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: I kobieta zgodnie ze zwyczajnym przekonaniem musi być urodziwa .
tags: CCONJ NOUN ADV PREP ADJ NOUN VERB AUX ADJ PUNCT
tagged_tokens: I_CCONJ kobieta_NOUN zgodnie_ADV ze_PREP zwyczajnym_ADJ przekonaniem_NOUN musi_VERB być_AUX urodziwa_ADJ ._PUNCT

B) tokens: Oraz kobieta zwykle według popularnego sądu musi być przystojna .
tags: CCONJ NOUN ADV PREP ADJ NOUN VERB AUX ADJ PUNCT
tagged_tokens: Oraz_CCONJ kobieta_NOUN zwykle_ADV według_PREP popularnego_ADJ sądu_NOUN musi_VERB być_AUX przystojna_ADJ ._PUNCT

C) tokens: Or jak kobieta na ogół z racji powszechnego poglądu musi być ładna .
tags: CCONJ CCONJ NOUN ADV PREP NOUN ADJ NOUN VERB AUX ADJ PUNCT
tagged_tokens: Or_CCONJ jak_CCONJ kobieta_NOUN na_ADV ogół_NOUN z_PREP racji_NOUN powszechnego_ADJ poglądu_NOUN musi_VERB być_AUX ładna_ADJ ._PUNCTD) tokens: A kobieta wedle powszechnego mniemania musi być atrakcyjna .
tags: CCONJ NOUN ADP ADJ NOUN VERB AUX ADJ PUNCT
tagged_tokens: A_CCONJ kobieta_NOUN wedle_ADP powszechnego_ADJ mniemania_NOUN musi_VERB być_AUX atrakcyjna_ADJ ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: – a lekturę chyba z pięć lub sześć razy czytałem . .
tags: PUNCT CCONJ NOUN PART PART NUM CCONJ NUM NOUN VERB AUX PUNCT PUNCT
tagged_tokens: –_PUNCT a_CCONJ lekturę_NOUN chyba_PART z_PART pięć_NUM lub_CCONJ sześć_NUM razy_NOUN czytałem_VERB AUX_PUNCT ._PUNCT ._PUNCT

B) tokens: – a pozycję chyba z pięć bądź sześć razy przeczytałem . .
tags: PUNCT CCONJ NOUN PART PART NUM CCONJ NUM NOUN VERB AUX PUNCT PUNCT
tagged_tokens: –_PUNCT a_CCONJ pozycję_NOUN chyba_PART z_PART pięć_NUM bądź_CCONJ sześć_NUM razy_NOUN przeczytałem_VERB AUX_PUNCT ._PUNCT ._PUNCT

C) tokens: – a tomik chyba z pięć ewentualnie sześć razy odczytałem . .
tags: PUNCT CCONJ NOUN PART PART NUM CCONJ NUM NOUN VERB AUX PUNCT PUNCT
tagged_tokens: –_PUNCT a_CCONJ tomik_NOUN chyba_PART z_PART pięć_NUM ewentualnie_CCONJ sześć_NUM razy_NOUN odczytałem_VERB AUX_PUNCT ._PUNCT ._PUNCTD) tokens: – a książkę chyba z pięć albo sześć razy czytał em . .
tags: PUNCT CCONJ NOUN PART PART NUM CCONJ NUM NOUN VERB AUX PUNCT PUNCT
tagged_tokens: –_PUNCT a_CCONJ książkę_NOUN chyba_PART z_PART pięć_NUM albo_CCONJ sześć_NUM razy_NOUN czytał_VERB em_AUX ._PUNCT ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: A kto teraz pluł i łapywał ?
tags: CCONJ PRON ADV VERB CCONJ VERB PUNCT
tagged_tokens: A_CCONJ kto_PRON teraz_ADV pluł_VERB i_CCONJ łapywał_VERB ?_PUNCT

B) tokens: A kto dziś pluł i łowił ?
tags: CCONJ PRON ADV VERB CCONJ VERB PUNCT
tagged_tokens: A_CCONJ kto_PRON dziś_ADV pluł_VERB i_CCONJ łowił_VERB ?_PUNCT

C) tokens: A kto obecnie pluł i chwytał ?
tags: CCONJ PRON ADV VERB CCONJ VERB PUNCT
tagged_tokens: A_CCONJ kto_PRON obecnie_ADV pluł_VERB i_CCONJ chwytał_VERB ?_PUNCTD) tokens: A kto dzisiaj pluł i łapał ?
tags: CCONJ PRON ADV VERB CCONJ VERB PUNCT
tagged_tokens: A_CCONJ kto_PRON dzisiaj_ADV pluł_VERB i_CCONJ łapał_VERB ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: I kto zasiada na sofie ?
tags: CCONJ PRON VERB ADP NOUN PUNCT
tagged_tokens: I_CCONJ kto_PRON zasiada_VERB na_ADP sofie_NOUN ?_PUNCT

B) tokens: A kto zajmuje miejsce na kanapie ?
tags: CCONJ PRON VERB NOUN ADP NOUN PUNCT
tagged_tokens: A_CCONJ kto_PRON zajmuje_VERB miejsce_NOUN na_ADP kanapie_NOUN ?_PUNCT

C) tokens: I kto usiadł na wersalce ?
tags: CCONJ PRON VERB ADP NOUN PUNCT
tagged_tokens: I_CCONJ kto_PRON usiadł_VERB na_ADP wersalce_NOUN ?_PUNCTD) tokens: A kto siedzi na tapczanie ?
tags: CCONJ PRON VERB ADP NOUN PUNCT
tagged_tokens: A_CCONJ kto_PRON siedzi_VERB na_ADP tapczanie_NOUN ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""A""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: I kto połknął wczesne śniadanie ?
tags: CCONJ PRON VERB ADJ NOUN PUNCT
tagged_tokens: I_CCONJ kto_PRON połknął_VERB wczesne_ADJ śniadanie_NOUN ?_PUNCT

B) tokens: A kto skonsumował pierwotne śniadanie ?
tags: CCONJ PRON VERB ADJ NOUN PUNCT
tagged_tokens: A_CCONJ kto_PRON skonsumował_VERB pierwotne_ADJ śniadanie_NOUN ?_PUNCT

C) tokens: I kto zazielenił wcześniejsze śniadanie ?
tags: CCONJ PRON VERB ADJ NOUN PUNCT
tagged_tokens: I_CCONJ kto_PRON zazielenił_VERB wcześniejsze_ADJ śniadanie_NOUN ?_PUNCTD) tokens: A kto zjadł pierwsze śniadanie ?
tags: CCONJ PRON VERB ADJ NOUN PUNCT
tagged_tokens: A_CCONJ kto_PRON zjadł_VERB pierwsze_ADJ śniadanie_NOUN ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: I lokal wypełniają nieprzyjazne rzeczy nieożywione .
tags: CCONJ NOUN VERB ADJ NOUN ADJ PUNCT
tagged_tokens: I_CCONJ lokal_NOUN wypełniają_VERB nieprzyjazne_ADJ rzeczy_NOUN nieożywione_ADJ ._PUNCT

B) tokens: A pokój upstrzony jest złośliwymi obiektami martwymi .
tags: CCONJ NOUN VERB AUX ADJ NOUN ADJ PUNCT
tagged_tokens: A_CCONJ pokój_NOUN upstrzony_VERB jest_AUX złośliwymi_ADJ obiektami_NOUN martwymi_ADJ ._PUNCT

C) tokens: I pomieszczenie zastawione jest wrogimi elementami bez życia .
tags: CCONJ NOUN VERB AUX ADJ NOUN ADP NOUN PUNCT
tagged_tokens: I_CCONJ pomieszczenie_NOUN zastawione_VERB jest_AUX wrogimi_ADJ elementami_NOUN bez_ADP życia_NOUN ._PUNCTD) tokens: A mieszkanie zapełniają złośliwe przedmioty martwe .
tags: CCONJ NOUN VERB ADJ NOUN ADJ PUNCT
tagged_tokens: A_CCONJ mieszkanie_NOUN zapełniają_VERB złośliwe_ADJ przedmioty_NOUN martwe_ADJ ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: A moja kondycja jest niebywale komfortowa .
tags: CCONJ DET NOUN AUX ADV ADJ PUNCT
tagged_tokens: A_CCONJ moja_DET kondycja_NOUN jest_AUX niebywale_ADV komfortowa_ADJ ._PUNCT

B) tokens: A moja pozycja jest niewiarygodnie ekskluzywna .
tags: CCONJ DET NOUN AUX ADV ADJ PUNCT
tagged_tokens: A_CCONJ moja_DET pozycja_NOUN jest_AUX niewiarygodnie_ADV ekskluzywna_ADJ ._PUNCT

C) tokens: A moja sytuacja jest zadziwiająco prestiżowa .
tags: CCONJ DET NOUN AUX ADV ADJ PUNCT
tagged_tokens: A_CCONJ moja_DET sytuacja_NOUN jest_AUX zadziwiająco_ADV prestiżowa_ADJ ._PUNCTD) tokens: A moja sytuacja jest nieprawdopodobnie luksusowa .
tags: CCONJ DET NOUN AUX ADV ADJ PUNCT
tagged_tokens: A_CCONJ moja_DET sytuacja_NOUN jest_AUX nieprawdopodobnie_ADV luksusowa_ADJ ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: - albo to jest Agata ..
tags: PUNCT ADV VERB AUX PROPN PUNCT PUNCT
tagged_tokens: -_PUNCT albo_ADV to_VERB jest_AUX Agata_PROPN ._PUNCT ._PUNCT

B) tokens: - lub to jest Agata ..
tags: PUNCT CONJ VERB AUX PROPN PUNCT PUNCT
tagged_tokens: -_PUNCT lub_CONJ to_VERB jest_AUX Agata_PROPN ._PUNCT ._PUNCT

C) tokens: - ewentualnie to jest Agata ..
tags: PUNCT ADV VERB AUX PROPN PUNCT PUNCT
tagged_tokens: -_PUNCT ewentualnie_ADV to_VERB jest_AUX Agata_PROPN ._PUNCT ._PUNCTD) tokens: – a może to jest Agata . .
tags: PUNCT CCONJ PART VERB AUX PROPN PUNCT PUNCT
tagged_tokens: –_PUNCT a_CCONJ może_PART to_VERB jest_AUX Agata_PROPN ._PUNCT ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""A""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: I musiałem zapewne bardzo się przyglądać , gdyż anioł również zerknął na mnie i roześmiał się .
tags: CCONJ VERB AUX ADV PART VERB PUNCT ADV NOUN ADV VERB ADP PRON CCONJ VERB PRON PUNCT
tagged_tokens: I_CCONJ musiałem_VERB zapewne_ADV bardzo_ADV się_PART przyglądać_VERB ,_PUNCT gdyż_ADV anioł_NOUN również_ADV zerknął_VERB na_ADP mnie_PRON i_CCONJ roześmiał_VERB się_PRON ._PUNCT

B) tokens: A potrzebował em chyba silnie obserwować , ponieważ anioł także rzucił na mnie okiem i zaśmiał się .
tags: CCONJ VERB AUX PART ADV VERB PUNCT SCONJ NOUN ADV VERB ADP PRON CCONJ VERB PRON PUNCT
tagged_tokens: A_CCONJ potrzebował_VERB em_AUX chyba_PART silnie_ADV obserwować_VERB ,_PUNCT ponieważ_SCONJ anioł_NOUN także_ADV rzucił_VERB na_ADP mnie_PRON okiem_NOUN i_CCONJ zaśmiał_VERB się_PRON ._PUNCT

C) tokens: I miał em chyba mocno pilnować , bo anioł też rzucił na mnie spojrzeniem i uśmiał się .
tags: CCONJ VERB AUX PART ADV VERB PUNCT SCONJ NOUN PART VERB ADP PRON NOUN CCONJ VERB PRON PUNCT
tagged_tokens: I_CCONJ miał_VERB em_AUX chyba_PART mocno_ADV pilnować_VERB ,_PUNCT bo_SCONJ anioł_NOUN też_PART rzucił_VERB na_ADP mnie_PRON spojrzeniem_NOUN i_CCONJ uśmiał_VERB się_PRON ._PUNCTD) tokens: A musiał em chyba mocno patrzyć , bo anioł też spoglądnął na mnie i uśmiechnął się .
tags: CCONJ VERB AUX PART ADV VERB PUNCT SCONJ NOUN PART VERB ADP PRON CCONJ VERB PRON PUNCT
tagged_tokens: A_CCONJ musiał_VERB em_AUX chyba_PART mocno_ADV patrzyć_VERB ,_PUNCT bo_SCONJ anioł_NOUN też_PART spoglądnął_VERB na_ADP mnie_PRON i_CCONJ uśmiechnął_VERB się_PRON ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Za co nas osądzą ?
tags: SCONJ PRON PRON VERB PUNCT
tagged_tokens: Za_SCONJ co_PRON nas_PRON osądzą_VERB ?_PUNCT

B) tokens: Na co nas skarżą ?
tags: ADP PRON PRON VERB PUNCT
tagged_tokens: Na_ADP co_PRON nas_PRON skarżą_VERB ?_PUNCT

C) tokens: Przez co nas obwiniają ?
tags: ADP PRON PRON VERB PUNCT
tagged_tokens: Przez_ADP co_PRON nas_PRON obwiniają_VERB ?_PUNCTD) tokens: A o co nas oskarżą ?
tags: CCONJ ADP PRON PRON VERB PUNCT
tagged_tokens: A_CCONJ o_ADP co_PRON nas_PRON oskarżą_VERB ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: A rozróżnić nie umiem .
tags: CCONJ VERB PART VERB PUNCT
tagged_tokens: A_CCONJ rozróżnić_VERB nie_PART umiem_VERB ._PUNCT

B) tokens: A odszczepić nie zdołam .
tags: CCONJ VERB PART VERB PUNCT
tagged_tokens: A_CCONJ odszczepić_VERB nie_PART zdołam_VERB ._PUNCT

C) tokens: A odcyfrować nie potrzębuję .
tags: CCONJ VERB PART VERB PUNCT
tagged_tokens: A_CCONJ odcyfrować_VERB nie_PART potrzębuję_VERB ._PUNCTD) tokens: A odróżnić nie potrafię .
tags: CCONJ VERB PART VERB PUNCT
tagged_tokens: A_CCONJ odróżnić_VERB nie_PART potrafię_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: - A on do czego dłoń wkłada ?
tags: PUNCT CCONJ PRON PREP NOUN NOUN VERB PUNCT
tagged_tokens: -_PUNCT A_CCONJ on_PRON do_PREP czego_NOUN dłoń_NOUN wkłada_VERB ?_PUNCT

B) tokens: - A on gdzie tu łapą sięga ?
tags: PUNCT CCONJ PRON ADV ADV NOUN VERB PUNCT
tagged_tokens: -_PUNCT A_CCONJ on_PRON gdzie_ADV tu_ADV łapą_NOUN sięga_VERB ?_PUNCT

C) tokens: - A on po co tu rękę wsuwa ?
tags: PUNCT CCONJ PRON PREP INTJ ADV NOUN VERB PUNCT
tagged_tokens: -_PUNCT A_CCONJ on_PRON po_PREP co_INTJ tu_ADV rękę_NOUN wsuwa_VERB ?_PUNCTD) tokens: - A on czego tu łapę pcha ?
tags: PUNCT CCONJ PRON ADV ADV NOUN VERB PUNCT
tagged_tokens: -_PUNCT A_CCONJ on_PRON czego_ADV tu_ADV łapę_NOUN pcha_VERB ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: - i on otrzymuje pieczywo ?
tags: PUNCT CCONJ PRON VERB NOUN PUNCT
tagged_tokens: -_PUNCT i_CCONJ on_PRON otrzymuje_VERB pieczywo_NOUN ?_PUNCT

B) tokens: - a on ma chlebek ?
tags: PUNCT CCONJ PRON VERB NOUN PUNCT
tagged_tokens: -_PUNCT a_CCONJ on_PRON ma_VERB chlebek_NOUN ?_PUNCT

C) tokens: - i on dostaje bochenek ?
tags: PUNCT CCONJ PRON VERB NOUN PUNCT
tagged_tokens: -_PUNCT i_CCONJ on_PRON dostaje_VERB bochenek_NOUN ?_PUNCTD) tokens: – a on dostaje chleb ?
tags: PUNCT CCONJ PRON VERB NOUN PUNCT
tagged_tokens: –_PUNCT a_CCONJ on_PRON dostaje_VERB chleb_NOUN ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: A następnie byśmy również zgromadzili swoją kolekcję w Sieci .
tags: CCONJ ADV PART PART VERB DET NOUN ADP PROPN PUNCT
tagged_tokens: A_CCONJ następnie_ADV byśmy_PART również_PART zgromadzili_VERB swoją_DET kolekcję_NOUN w_ADP Sieci_PROPN ._PUNCT

B) tokens: A później moglibyśmy też zebrać naszą kolekcję w Internecie .
tags: CCONJ ADV VERB PART VERB DET NOUN ADP PROPN PUNCT
tagged_tokens: A_CCONJ później_ADV moglibyśmy_VERB też_PART zebrać_VERB naszą_DET kolekcję_NOUN w_ADP Internecie_PROPN ._PUNCT

C) tokens: A potem chcielibyśmy ponadto zgromadzić naszą kolekcję w Sieci .
tags: CCONJ ADV VERB ADV VERB DET NOUN ADP PROPN PUNCT
tagged_tokens: A_CCONJ potem_ADV chcielibyśmy_VERB ponadto_ADV zgromadzić_VERB naszą_DET kolekcję_NOUN w_ADP Sieci_PROPN ._PUNCTD) tokens: A potem może także umieścimy naszą kolekcję w Internecie .
tags: CCONJ ADV PART PART VERB DET NOUN ADP PROPN PUNCT
tagged_tokens: A_CCONJ potem_ADV może_PART także_PART umieścimy_VERB naszą_DET kolekcję_NOUN w_ADP Internecie_PROPN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: A następnie wszystko się wyklarowało .
tags: CCONJ ADV PRON PRON VERB PUNCT
tagged_tokens: A_CCONJ następnie_ADV wszystko_PRON się_PRON wyklarowało_VERB ._PUNCT

B) tokens: A później wszystko się rozjaśniło .
tags: CCONJ ADV PRON PRON VERB PUNCT
tagged_tokens: A_CCONJ później_ADV wszystko_PRON się_PRON rozjaśniło_VERB ._PUNCT

C) tokens: A potem wszystko się objaśniło .
tags: CCONJ ADV PRON PRON VERB PUNCT
tagged_tokens: A_CCONJ potem_ADV wszystko_PRON się_PRON objaśniło_VERB ._PUNCTD) tokens: A potem wszystko się wyjaśniło .
tags: CCONJ ADV PRON PRON VERB PUNCT
tagged_tokens: A_CCONJ potem_ADV wszystko_PRON się_PRON wyjaśniło_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: - a wróćmy jeszcze do lekcji .
tags: PUNCT CCONJ VERB PART ADP NOUN PUNCT
tagged_tokens: -_PUNCT a_CCONJ wróćmy_VERB jeszcze_PART do_ADP lekcji_NOUN ._PUNCT

B) tokens: - a powróćmy ponownie do nauki .
tags: PUNCT CCONJ VERB ADV ADP NOUN PUNCT
tagged_tokens: -_PUNCT a_CCONJ powróćmy_VERB ponownie_ADV do_ADP nauki_NOUN ._PUNCT

C) tokens: - a wróćmy znów do edukacji .
tags: PUNCT CCONJ VERB ADV ADP NOUN PUNCT
tagged_tokens: -_PUNCT a_CCONJ wróćmy_VERB znów_ADV do_ADP edukacji_NOUN ._PUNCTD) tokens: – a powróćmy jeszcze do szkoły .
tags: PUNCT CCONJ VERB PART ADP NOUN PUNCT
tagged_tokens: –_PUNCT a_CCONJ powróćmy_VERB jeszcze_PART do_ADP szkoły_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: - A pójdzie Konstanty z moją osobą do pana Platera ?
tags: PUNCT CCONJ VERB PROPN ADP ADJ NOUN ADP NOUN PROPN PUNCT
tagged_tokens: -_PUNCT A_CCONJ pójdzie_VERB Konstanty_PROPN z_ADP moją_ADJ osobą_NOUN do_ADP pana_NOUN Platera_PROPN ?_PUNCT

B) tokens: - A pójdzie Konstanty do pana Platera ze mną ?
tags: PUNCT CCONJ VERB PROPN ADP NOUN PROPN ADP PRON PUNCT
tagged_tokens: -_PUNCT A_CCONJ pójdzie_VERB Konstanty_PROPN do_ADP pana_NOUN Platera_PROPN ze_ADP mną_PRON ?_PUNCT

C) tokens: - A pójdzie Konstanty z mego towarzystwa do pana Platera ?
tags: PUNCT CCONJ VERB PROPN ADP ADJ NOUN ADP NOUN PROPN PUNCT
tagged_tokens: -_PUNCT A_CCONJ pójdzie_VERB Konstanty_PROPN z_ADP mego_ADJ towarzystwa_NOUN do_ADP pana_NOUN Platera_PROPN ?_PUNCTD) tokens: - A pójdzie Konstanty ze mną do pana Platera ?
tags: PUNCT CCONJ VERB PROPN ADP PRON ADP NOUN PROPN PUNCT
tagged_tokens: -_PUNCT A_CCONJ pójdzie_VERB Konstanty_PROPN ze_ADP mną_PRON do_ADP pana_NOUN Platera_PROPN ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: - A może nie próbowałaś ?
tags: PUNCT CCONJ PART PART VERB AUX PUNCT
tagged_tokens: -_PUNCT A_CCONJ może_PART nie_PART próbowałaś_VERB ?_PUNCT

B) tokens: - A nie starałaś się ?
tags: PUNCT CCONJ PART VERB PRON PUNCT
tagged_tokens: -_PUNCT A_CCONJ nie_PART starałaś_VERB się_PRON ?_PUNCT

C) tokens: - A nie usiłowałaś ?
tags: PUNCT CCONJ PART VERB PUNCT
tagged_tokens: -_PUNCT A_CCONJ nie_PART usiłowałaś_VERB ?_PUNCTD) tokens: - A sama nie próbowała ś ?
tags: PUNCT CCONJ ADJ PART VERB AUX PUNCT
tagged_tokens: -_PUNCT A_CCONJ sama_ADJ nie_PART próbowała_VERB ś_AUX ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: A opóźnia się chyba ?
tags: CCONJ VERB PRON PART PUNCT
tagged_tokens: A_CCONJ opóźnia_VERB się_PRON chyba_PART ?_PUNCT

B) tokens: A zwleka się prawda ?
tags: CCONJ VERB PRON NOUN PUNCT
tagged_tokens: A_CCONJ zwleka_VERB się_PRON prawda_NOUN ?_PUNCT

C) tokens: A ociąga się prawdopodobnie ?
tags: CCONJ VERB PRON ADV PUNCT
tagged_tokens: A_CCONJ ociąga_VERB się_PRON prawdopodobnie_ADV ?_PUNCTD) tokens: A spóźnia się może ?
tags: CCONJ VERB PRON PART PUNCT
tagged_tokens: A_CCONJ spóźnia_VERB się_PRON może_PART ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Co szkoda !
tags: SCONJ VERB PUNCT
tagged_tokens: Co_SCONJ szkoda_VERB !_PUNCT

B) tokens: Szkoda to !
tags: VERB PRON PUNCT
tagged_tokens: Szkoda_VERB to_PRON !_PUNCT

C) tokens: Szkoda tego !
tags: VERB DET PUNCT
tagged_tokens: Szkoda_VERB tego_DET !_PUNCTD) tokens: A szkoda !
tags: CCONJ VERB PUNCT
tagged_tokens: A_CCONJ szkoda_VERB !_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: - a tu ma aneksy wiejskie .
tags: PUNCT CCONJ ADV VERB NOUN ADJ PUNCT
tagged_tokens: -_PUNCT a_CCONJ tu_ADV ma_VERB aneksy_NOUN wiejskie_ADJ ._PUNCT

B) tokens: - a tam posiada suplementy wiejskie .
tags: PUNCT CCONJ ADV VERB NOUN ADJ PUNCT
tagged_tokens: -_PUNCT a_CCONJ tam_ADV posiada_VERB suplementy_NOUN wiejskie_ADJ ._PUNCT

C) tokens: - a tam dysponuje dodatkami wiejskimi .
tags: PUNCT CCONJ ADV VERB NOUN ADJ PUNCT
tagged_tokens: -_PUNCT a_CCONJ tam_ADV dysponuje_VERB dodatkami_NOUN wiejskimi_ADJ ._PUNCTD) tokens: – a tam ma dodatki wiejskie .
tags: PUNCT CCONJ ADV VERB NOUN ADJ PUNCT
tagged_tokens: –_PUNCT a_CCONJ tam_ADV ma_VERB dodatki_NOUN wiejskie_ADJ ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Teraz wujostwo Józef stoi na dworcu i oczekuje .
tags: ADV NOUN PROPN VERB ADP NOUN CCONJ VERB PUNCT
tagged_tokens: Teraz_ADV wujostwo_NOUN Józef_PROPN stoi_VERB na_ADP dworcu_NOUN i_CCONJ oczekuje_VERB ._PUNCT

B) tokens: Obecnie wujkowski Józio czeka na stacji i pilnuje .
tags: ADV ADJ PROPN VERB ADP NOUN CCONJ VERB PUNCT
tagged_tokens: Obecnie_ADV wujkowski_ADJ Józio_PROPN czeka_VERB na_ADP stacji_NOUN i_CCONJ pilnuje_VERB ._PUNCT

C) tokens: Aktualnie wujeczny Józek wyczekuje na przystanku i się niecierpliwi .
tags: ADV ADJ PROPN VERB ADP NOUN CCONJ PART VERB PUNCT
tagged_tokens: Aktualnie_ADV wujeczny_ADJ Józek_PROPN wyczekuje_VERB na_ADP przystanku_NOUN i_CCONJ się_PART niecierpliwi_VERB ._PUNCTD) tokens: A teraz wujek Józiek stoi na peronie i czeka .
tags: CCONJ ADV NOUN PROPN VERB ADP NOUN CCONJ VERB PUNCT
tagged_tokens: A_CCONJ teraz_ADV wujek_NOUN Józiek_PROPN stoi_VERB na_ADP peronie_NOUN i_CCONJ czeka_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: - I to jest , niestety , osądna dolegliwość .
tags: PUNCT CCONJ VERB AUX PUNCT PART PUNCT ADJ NOUN PUNCT
tagged_tokens: -_PUNCT I_CCONJ to_VERB jest_AUX ,_PUNCT niestety_PART ,_PUNCT osądna_ADJ dolegliwość_NOUN ._PUNCT

B) tokens: - A to jest , niestety , zagrażająca życiu przypadłość .
tags: PUNCT CCONJ VERB AUX PUNCT PART PUNCT ADJ NOUN NOUN PUNCT
tagged_tokens: -_PUNCT A_CCONJ to_VERB jest_AUX ,_PUNCT niestety_PART ,_PUNCT zagrażająca_ADJ życiu_NOUN przypadłość_NOUN ._PUNCT

C) tokens: - I to jest , niestety , skazująca na śmierć infekcja .
tags: PUNCT CCONJ VERB AUX PUNCT PART PUNCT ADJ ADP NOUN NOUN PUNCT
tagged_tokens: -_PUNCT I_CCONJ to_VERB jest_AUX ,_PUNCT niestety_PART ,_PUNCT skazująca_ADJ na_ADP śmierć_NOUN infekcja_NOUN ._PUNCTD) tokens: - A to jest , niestety , śmiertelna choroba .
tags: PUNCT CCONJ VERB AUX PUNCT PART PUNCT ADJ NOUN PUNCT
tagged_tokens: -_PUNCT A_CCONJ to_VERB jest_AUX ,_PUNCT niestety_PART ,_PUNCT śmiertelna_ADJ choroba_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: To nie jest możliwe .
tags: PRON PART AUX ADJ PUNCT
tagged_tokens: To_PRON nie_PART jest_AUX możliwe_ADJ ._PUNCT

B) tokens: To nie ma szans .
tags: PRON PART VERB NOUN PUNCT
tagged_tokens: To_PRON nie_PART ma_VERB szans_NOUN ._PUNCT

C) tokens: To nie pójdzie .
tags: PRON PART VERB PUNCT
tagged_tokens: To_PRON nie_PART pójdzie_VERB ._PUNCTD) tokens: A to nie wchodzi w grę .
tags: CCONJ PRON PART VERB ADP NOUN PUNCT
tagged_tokens: A_CCONJ to_PRON nie_PART wchodzi_VERB w_ADP grę_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: - a oglądałeś recital na cześć papieża ?
tags: PUNCT CCONJ VERB AUX NOUN ADP NOUN PUNCT
tagged_tokens: -_PUNCT a_CCONJ oglądałeś_VERB AUX_NOUN recital_NOUN na_ADP cześć_NOUN papieża_NOUN ?_PUNCT

B) tokens: - a dostrzegłeś spektakl dla honoru papieża ?
tags: PUNCT CCONJ VERB AUX NOUN ADP NOUN PUNCT
tagged_tokens: -_PUNCT a_CCONJ dostrzegłeś_VERB AUX_NOUN spektakl_NOUN dla_ADP honoru_NOUN papieża_NOUN ?_PUNCT

C) tokens: - a zauważyłeś występ na rzecz papieża ?
tags: PUNCT CCONJ VERB AUX NOUN ADP NOUN PUNCT
tagged_tokens: -_PUNCT a_CCONJ zauważyłeś_VERB AUX_NOUN występ_NOUN na_ADP rzecz_NOUN papieża_NOUN ?_PUNCTD) tokens: – a widział eś koncert dla papieża ?
tags: PUNCT CCONJ VERB AUX NOUN ADP NOUN PUNCT
tagged_tokens: –_PUNCT a_CCONJ widział_VERB eś_AUX koncert_NOUN dla_ADP papieża_NOUN ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Tak więc dostrzegła .
tags: PART CCONJ VERB PUNCT
tagged_tokens: Tak_PART więc_CCONJ dostrzegła_VERB ._PUNCT

B) tokens: Więc zobaczyła .
tags: CCONJ VERB PUNCT
tagged_tokens: Więc_CCONJ zobaczyła_VERB ._PUNCT

C) tokens: A więc dojrzała .
tags: CCONJ CCONJ VERB PUNCT
tagged_tokens: A_CCONJ więc_CCONJ dojrzała_VERB ._PUNCTD) tokens: A więc zauważyła .
tags: CCONJ CCONJ VERB PUNCT
tagged_tokens: A_CCONJ więc_CCONJ zauważyła_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: - a kujawskie się skończyły już ..
tags: PUNCT CCONJ ADJ PRON VERB PFV ADV PUNCT PUNCT
tagged_tokens: -_PUNCT a_CCONJ kujawskie_ADJ się_PRON skończyły_VERB_PFV już_ADV ._PUNCT ._PUNCT

B) tokens: - a śląskie się zakończyły obecnie ..
tags: PUNCT CCONJ ADJ PRON VERB PFV ADV PUNCT PUNCT
tagged_tokens: -_PUNCT a_CCONJ śląskie_ADJ się_PRON zakończyły_VERB_PFV obecnie_ADV ._PUNCT ._PUNCT

C) tokens: - a mazowieckie się finiszują aktualnie ..
tags: PUNCT CCONJ ADJ PRON VERB ADV PUNCT PUNCT
tagged_tokens: -_PUNCT a_CCONJ mazowieckie_ADJ się_PRON finiszują_VERB aktualnie_ADV ._PUNCT ._PUNCTD) tokens: – a łódzkie się kończą teraz . .
tags: PUNCT CCONJ ADJ PRON VERB ADV PUNCT PUNCT
tagged_tokens: –_PUNCT a_CCONJ łódzkie_ADJ się_PRON kończą_VERB teraz_ADV ._PUNCT ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""A""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: - Ech, panie Aleksie, sama już nie rozumiem.
tags: PUNCT INTJ PUNCT NOUN PROPN PUNCT ADJ PART PART VERB PUNCT
tagged_tokens: -_PUNCT Ech_INTJ ,_PUNCT panie_NOUN Aleksie_PROPN ,_PUNCT sama_ADJ już_PART nie_PART rozumiem_VERB ._PUNCT

B) tokens: - Och, panie Oleksie, sama już nie orientuję się.
tags: PUNCT INTJ PUNCT NOUN PROPN PUNCT ADJ PART PART VERB PART PUNCT
tagged_tokens: -_PUNCT Och_INTJ ,_PUNCT panie_NOUN Oleksie_PROPN ,_PUNCT sama_ADJ już_PART nie_PART orientuję_VERB się_PART ._PUNCT

C) tokens: - Uch, panie Aleksy, sama już nie pojmuję.
tags: PUNCT INTJ PUNCT NOUN PROPN PUNCT ADJ PART PART VERB PUNCT
tagged_tokens: -_PUNCT Uch_INTJ ,_PUNCT panie_NOUN Aleksy_PROPN ,_PUNCT sama_ADJ już_PART nie_PART pojmuję_VERB ._PUNCTD) tokens: - Ach , panie Aleksandrze , sama już nie wiem .
tags: PUNCT INTJ PUNCT NOUN PROPN PUNCT ADJ PART PART VERB PUNCT
tagged_tokens: -_PUNCT Ach_INTJ ,_PUNCT panie_NOUN Aleksandrze_PROPN ,_PUNCT sama_ADJ już_PART nie_PART wiem_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: - Agis zadrżał .
tags: PUNCT PROPN VERB PUNCT
tagged_tokens: -_PUNCT Agis_PROPN zadrżał_VERB ._PUNCT

B) tokens: - Agis zatrzęsł się .
tags: PUNCT PROPN VERB PRON PUNCT
tagged_tokens: -_PUNCT Agis_PROPN zatrzęsł_VERB się_PRON ._PUNCT

C) tokens: - Agis spłoszył się .
tags: PUNCT PROPN VERB PRON PUNCT
tagged_tokens: -_PUNCT Agis_PROPN spłoszył_VERB się_PRON ._PUNCTD) tokens: - Agis wstrząsnął się .
tags: PUNCT PROPN VERB PRON PUNCT
tagged_tokens: -_PUNCT Agis_PROPN wstrząsnął_VERB się_PRON ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Lecz chłopiec starał się .
tags: CCONJ NOUN VERB PRON PUNCT
tagged_tokens: Lecz_CCONJ chłopiec_NOUN starał_VERB się_PRON ._PUNCT

B) tokens: Natomiast chłopina usiłował .
tags: CCONJ NOUN VERB PUNCT
tagged_tokens: Natomiast_CCONJ chłopina_NOUN usiłował_VERB ._PUNCT

C) tokens: Jednakże chłopak dążył .
tags: CCONJ NOUN VERB PUNCT
tagged_tokens: Jednakże_CCONJ chłopak_NOUN dążył_VERB ._PUNCTD) tokens: Ale chłopak próbował .
tags: CCONJ NOUN VERB PUNCT
tagged_tokens: Ale_CCONJ chłopak_NOUN próbował_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: - Tylko czuwał , iż nie stroi sobie z niego .
tags: PUNCT ADV VERB PUNCT SCONJ PART VERB PRON ADP PRON PUNCT
tagged_tokens: -_PUNCT Tylko_ADV czuwał_VERB ,_PUNCT iż_SCONJ nie_PART stroi_VERB sobie_PRON z_ADP niego_PRON ._PUNCT

B) tokens: - Jednakże odczuwał , że nie dowcipkuje .
tags: PUNCT CONJ VERB PUNCT SCONJ PART VERB PUNCT
tagged_tokens: -_PUNCT Jednakże_CONJ odczuwał_VERB ,_PUNCT że_SCONJ nie_PART dowcipkuje_VERB ._PUNCT

C) tokens: - Lecz wyczuwał , że nie drwi .
tags: PUNCT CCONJ VERB PUNCT SCONJ PART VERB PUNCT
tagged_tokens: -_PUNCT Lecz_CCONJ wyczuwał_VERB ,_PUNCT że_SCONJ nie_PART drwi_VERB ._PUNCTD) tokens: - Ale czuł , że nie żartuje .
tags: PUNCT CCONJ VERB PUNCT SCONJ PART VERB PUNCT
tagged_tokens: -_PUNCT Ale_CCONJ czuł_VERB ,_PUNCT że_SCONJ nie_PART żartuje_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Lecz ja jestem zwolennikiem , by zamienić je na fundusze .
tags: CCONJ PRON AUX NOUN PUNCT SCONJ VERB PRON ADP NOUN PUNCT
tagged_tokens: Lecz_CCONJ ja_PRON jestem_AUX zwolennikiem_NOUN ,_PUNCT by_SCONJ zamienić_VERB je_PRON na_ADP fundusze_NOUN ._PUNCT

B) tokens: Natomiast ja jestem zwolennikiem , żeby zamienić je na gotówkę .
tags: CCONJ PRON AUX NOUN PUNCT SCONJ VERB PRON ADP NOUN PUNCT
tagged_tokens: Natomiast_CCONJ ja_PRON jestem_AUX zwolennikiem_NOUN ,_PUNCT żeby_SCONJ zamienić_VERB je_PRON na_ADP gotówkę_NOUN ._PUNCT

C) tokens: Jednak ja jestem zwolennikiem , ażeby zamienić je na środki .
tags: CCONJ PRON AUX NOUN PUNCT SCONJ VERB PRON ADP NOUN PUNCT
tagged_tokens: Jednak_CCONJ ja_PRON jestem_AUX zwolennikiem_NOUN ,_PUNCT ażeby_SCONJ zamienić_VERB je_PRON na_ADP środki_NOUN ._PUNCTD) tokens: Ale ja jestem zwolennikiem , aby zamienić je na pieniądze .
tags: CCONJ PRON AUX NOUN PUNCT SCONJ VERB PRON ADP NOUN PUNCT
tagged_tokens: Ale_CCONJ ja_PRON jestem_AUX zwolennikiem_NOUN ,_PUNCT aby_SCONJ zamienić_VERB je_PRON na_ADP pieniądze_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: - Lecz to ja znam datę sprawy, która odbędzie się jutro ...
tags: PUNCT CCONJ DET PRON VERB NOUN NOUN PUNCT REL PRON VERB PRON ADV PUNCT PUNCT PUNCT
tagged_tokens: -_PUNCT Lecz_CCONJ to_DET ja_PRON znam_VERB datę_NOUN sprawy_NOUN ,_PUNCT która_REL odbędzie_VERB się_PRON jutro_ADV ._PUNCT ._PUNCT ._PUNCT

B) tokens: - A jednak to ja wiem o terminie procesu, co ma się zdarzyć jutro ...
tags: PUNCT CCONJ ADV DET PRON VERB ADP NOUN NOUN PUNCT SCONJ VERB PRON VERB VERB ADV PUNCT PUNCT PUNCT
tagged_tokens: -_PUNCT A_CCONJ jednak_ADV to_DET ja_PRON wiem_VERB o_ADP terminie_NOUN procesu_NOUN ,_PUNCT co_SCONJ ma_VERB się_PRON zdarzyć_VERB jutro_ADV ._PUNCT ._PUNCT ._PUNCT

C) tokens: - Ale przecież ja mogę podać czas sądu, który ma się wydarzyć jutro ...
tags: PUNCT CCONJ PART PRON VERB VERB NOUN NOUN PUNCT PRON VERB PRON VERB VERB ADV PUNCT PUNCT PUNCT
tagged_tokens: -_PUNCT Ale_CCONJ przecież_PART ja_PRON mogę_VERB podać_VERB czas_NOUN sądu_NOUN ,_PUNCT który_PRON ma_VERB się_PRON wydarzyć_VERB jutro_ADV ._PUNCT ._PUNCT ._PUNCTD) tokens: - Ale ja wiem , że rozprawa ma się odbyć jutro . . .
tags: PUNCT CCONJ PRON VERB PUNCT SCONJ NOUN VERB PRON VERB ADV PUNCT PUNCT PUNCT
tagged_tokens: -_PUNCT Ale_CCONJ ja_PRON wiem_VERB ,_PUNCT że_SCONJ rozprawa_NOUN ma_VERB się_PRON odbyć_VERB jutro_ADV ._PUNCT ._PUNCT ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: – lecz ja wodę piję ciągle . .
tags: PUNCT CCONJ PRON NOUN VERB ADV PUNCT PUNCT
tagged_tokens: –_PUNCT lecz_CCONJ ja_PRON wodę_NOUN piję_VERB ciągle_ADV ._PUNCT ._PUNCT

B) tokens: – tylko ja wodę piję wciąż . .
tags: PUNCT ADV PRON NOUN VERB ADV PUNCT PUNCT
tagged_tokens: –_PUNCT tylko_ADV ja_PRON wodę_NOUN piję_VERB wciąż_ADV ._PUNCT ._PUNCT

C) tokens: – a ja wodę piję zawsze . .
tags: PUNCT CCONJ PRON NOUN VERB ADV PUNCT PUNCT
tagged_tokens: –_PUNCT a_CCONJ ja_PRON wodę_NOUN piję_VERB zawsze_ADV ._PUNCT ._PUNCTD) tokens: – ale ja wodę piję nadal . .
tags: PUNCT CCONJ PRON NOUN VERB ADV PUNCT PUNCT
tagged_tokens: –_PUNCT ale_CCONJ ja_PRON wodę_NOUN piję_VERB nadal_ADV ._PUNCT ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: - lecz ja odpoczywam najlepiej przy komputerze .
tags: PUNCT CCONJ PRON VERB ADV ADP NOUN PUNCT
tagged_tokens: -_PUNCT lecz_CCONJ ja_PRON odpoczywam_VERB najlepiej_ADV przy_ADP komputerze_NOUN ._PUNCT

B) tokens: - ale ja relaksuję się najlepiej przy komputerze .
tags: PUNCT CCONJ PRON VERB PART ADV ADP NOUN PUNCT
tagged_tokens: -_PUNCT ale_CCONJ ja_PRON relaksuję_VERB się_PART najlepiej_ADV przy_ADP komputerze_NOUN ._PUNCT

C) tokens: - to ja wypoczywam najdoskonalej przy komputerze .
tags: PUNCT PART PRON VERB ADV ADP NOUN PUNCT
tagged_tokens: -_PUNCT to_PART ja_PRON wypoczywam_VERB najdoskonalej_ADV przy_ADP komputerze_NOUN ._PUNCTD) tokens: – ale ja wypoczywam najlepiej przy komputerze .
tags: PUNCT CCONJ PRON VERB ADV ADP NOUN PUNCT
tagged_tokens: –_PUNCT ale_CCONJ ja_PRON wypoczywam_VERB najlepiej_ADV przy_ADP komputerze_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: - lecz jest jeden królik .
tags: PUNCT CCONJ VERB ADJ NOUN PUNCT
tagged_tokens: -_PUNCT lecz_CCONJ jest_VERB jeden_ADJ królik_NOUN ._PUNCT

B) tokens: - natomiast jest jeden uszatek .
tags: PUNCT CCONJ VERB ADJ NOUN PUNCT
tagged_tokens: -_PUNCT natomiast_CCONJ jest_VERB jeden_ADJ uszatek_NOUN ._PUNCT

C) tokens: - jednak jest jeden zająk .
tags: PUNCT CCONJ VERB ADJ NOUN PUNCT
tagged_tokens: -_PUNCT jednak_CCONJ jest_VERB jeden_ADJ zająk_NOUN ._PUNCTD) tokens: – ale jest jeden zajączek .
tags: PUNCT CCONJ VERB ADJ NOUN PUNCT
tagged_tokens: –_PUNCT ale_CCONJ jest_VERB jeden_ADJ zajączek_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Lecz istotne jest uzyskanie patrona .
tags: CCONJ ADJ AUX NOUN NOUN PUNCT
tagged_tokens: Lecz_CCONJ istotne_ADJ jest_AUX uzyskanie_NOUN patrona_NOUN ._PUNCT

B) tokens: Natomiast zasadnicze jest zdobycie wsparcia .
tags: CCONJ ADJ AUX NOUN NOUN PUNCT
tagged_tokens: Natomiast_CCONJ zasadnicze_ADJ jest_AUX zdobycie_NOUN wsparcia_NOUN ._PUNCT

C) tokens: Jednak niezbędne jest nawiązanie opieki .
tags: CCONJ ADJ AUX NOUN NOUN PUNCT
tagged_tokens: Jednak_CCONJ niezbędne_ADJ jest_AUX nawiązanie_NOUN opieki_NOUN ._PUNCTD) tokens: Ale kluczowe jest pozyskanie sponsora .
tags: CCONJ ADJ AUX NOUN NOUN PUNCT
tagged_tokens: Ale_CCONJ kluczowe_ADJ jest_AUX pozyskanie_NOUN sponsora_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Lecz mieszkańcy na Śląsku teraz obawiają się o własne córki .
tags: CCONJ NOUN ADP PROPN ADV VERB PRON ADP ADJ NOUN PUNCT
tagged_tokens: Lecz_CCONJ mieszkańcy_NOUN na_ADP Śląsku_PROPN teraz_ADV obawiają_VERB się_PRON o_ADP własne_ADJ córki_NOUN ._PUNCT

B) tokens: Natomiast ludność na Śląsku aktualnie lęka się o niewłasne córki .
tags: CCONJ NOUN ADP PROPN ADV VERB PRON ADP ADJ NOUN PUNCT
tagged_tokens: Natomiast_CCONJ ludność_NOUN na_ADP Śląsku_PROPN aktualnie_ADV lęka_VERB się_PRON o_ADP niewłasne_ADJ córki_NOUN ._PUNCT

C) tokens: Jednak obywatele na Śląsku obecnie drżą o swojskie córki .
tags: CCONJ NOUN ADP PROPN ADV VERB ADP ADJ NOUN PUNCT
tagged_tokens: Jednak_CCONJ obywatele_NOUN na_ADP Śląsku_PROPN obecnie_ADV drżą_VERB o_ADP swojskie_ADJ córki_NOUN ._PUNCTD) tokens: Ale ludzie na Śląsku już boją się o swoje córki .
tags: CCONJ NOUN ADP PROPN PART VERB PRON ADP DET NOUN PUNCT
tagged_tokens: Ale_CCONJ ludzie_NOUN na_ADP Śląsku_PROPN już_PART boją_VERB się_PRON o_ADP swoje_DET córki_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Tyleż upływały lata , co wokół gdańskiego Ratusza nieustannie brzmiała cudza mowa i cudze pieśni .
tags: ADV VERB NOUN PUNCT SCONJ ADP ADJ NOUN ADV VERB ADJ NOUN CCONJ ADJ NOUN PUNCT
tagged_tokens: Tyleż_ADV upływały_VERB lata_NOUN ,_PUNCT co_SCONJ wokół_ADP gdańskiego_ADJ Ratusza_NOUN nieustannie_ADV brzmiała_VERB cudza_ADJ mowa_NOUN i_CCONJ cudze_ADJ pieśni_NOUN ._PUNCT

B) tokens: Lecz przemijały lata , a w pobliżu gdańskiego Ratusza ciągle można było usłyszeć obcą mowę i obce pieśni .
tags: CCONJ VERB NOUN PUNCT CCONJ ADP ADJ NOUN ADJ VERB AUX VERB ADJ NOUN CCONJ ADJ NOUN PUNCT
tagged_tokens: Lecz_CCONJ przemijały_VERB lata_NOUN ,_PUNCT a_CCONJ w_ADP pobliżu_ADJ Ratusza_NOUN ciągle_ADV można_VERB było_AUX usłyszeć_VERB obcą_ADJ mowę_NOUN i_CCONJ obce_ADJ pieśni_NOUN ._PUNCT

C) tokens: Ale płynęły lata , a za gdańskim Ratuszem stale wybijała obca mowa i obce pieśni .
tags: CCONJ VERB NOUN PUNCT CCONJ ADP ADJ NOUN ADJ VERB ADJ NOUN CCONJ ADJ NOUN PUNCT
tagged_tokens: Ale_CCONJ płynęły_VERB lata_NOUN ,_PUNCT a_CCONJ za_ADP gdańskim_ADJ Ratuszem_NOUN stale_ADV wybijała_VERB obca_ADJ mowa_NOUN i_CCONJ obce_ADJ pieśni_NOUN ._PUNCTD) tokens: Ale mijały lata , a dokoła gdańskiego Ratusza wciąż rozbrzmiewała obca mowa i obce pieśni .
tags: CCONJ VERB NOUN PUNCT CCONJ ADP ADJ NOUN ADV VERB ADJ NOUN CCONJ ADJ NOUN PUNCT
tagged_tokens: Ale_CCONJ mijały_VERB lata_NOUN ,_PUNCT a_CCONJ dokoła_ADP gdańskiego_ADJ Ratusza_NOUN wciąż_ADV rozbrzmiewała_VERB obca_ADJ mowa_NOUN i_CCONJ obce_ADJ pieśni_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: - a my jesteśmy w kontaktach zagranicznych .
tags: PUNCT CCONJ PRON AUX ADP NOUN ADJ PUNCT
tagged_tokens: -_PUNCT a_CCONJ my_PRON jesteśmy_AUX w_ADP kontaktach_NOUN zagranicznych_ADJ ._PUNCT

B) tokens: - lecz my jesteśmy na relacjach międzynarodowych .
tags: PUNCT CCONJ PRON AUX ADP NOUN ADJ PUNCT
tagged_tokens: -_PUNCT lecz_CCONJ my_PRON jesteśmy_AUX na_ADP relacjach_NOUN międzynarodowych_ADJ ._PUNCT

C) tokens: - jednak my jesteśmy w związkach zagranicznych .
tags: PUNCT CCONJ PRON AUX ADP NOUN ADJ PUNCT
tagged_tokens: -_PUNCT jednak_CCONJ my_PRON jesteśmy_AUX w_ADP związkach_NOUN zagranicznych_ADJ ._PUNCTD) tokens: – ale my jesteśmy na stosunkach międzynarodowych .
tags: PUNCT CCONJ PRON AUX ADP NOUN ADJ PUNCT
tagged_tokens: –_PUNCT ale_CCONJ my_PRON jesteśmy_AUX na_ADP stosunkach_NOUN międzynarodowych_ADJ ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Lecz nie można brać na siebie myśli .
tags: CCONJ PART VERB VERB ADP PRON NOUN PUNCT
tagged_tokens: Lecz_CCONJ nie_PART można_VERB brać_VERB na_ADP siebie_PRON myśli_NOUN ._PUNCT

B) tokens: Jednak nie można ponosić odpowiedzialności za myśli .
tags: ADV PART VERB VERB NOUN ADP NOUN PUNCT
tagged_tokens: Jednak_ADV nie_PART można_VERB ponosić_VERB odpowiedzialności_NOUN za_ADP myśli_NOUN ._PUNCT

C) tokens: Natomiast nie można odpowiadać winą za myśli .
tags: CCONJ PART VERB VERB NOUN ADP NOUN PUNCT
tagged_tokens: Natomiast_CCONJ nie_PART można_VERB odpowiadać_VERB winą_NOUN za_ADP myśli_NOUN ._PUNCTD) tokens: Ale nie można odpowiadać za myśli .
tags: CCONJ PART VERB VERB ADP NOUN PUNCT
tagged_tokens: Ale_CCONJ nie_PART można_VERB odpowiadać_VERB za_ADP myśli_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Lecz nie więdną , ktoś je wydobywa nocą .
tags: CCONJ PART VERB PUNCT PRON PRON VERB NOUN PUNCT
tagged_tokens: Lecz_CCONJ nie_PART więdną_VERB ,_PUNCT ktoś_PRON je_PRON wydobywa_VERB nocą_NOUN ._PUNCT

B) tokens: Tylko nie zasychają , ktoś je kopie w nocy .
tags: PART PART VERB PUNCT PRON PRON VERB ADP NOUN PUNCT
tagged_tokens: Tylko_PART nie_PART zasychają_VERB ,_PUNCT ktoś_PRON je_PRON kopie_VERB w_ADP nocy_NOUN ._PUNCT

C) tokens: Jednak nie umierają , ktoś je odkopuje nocami .
tags: ADV PART VERB PUNCT PRON PRON VERB NOUN PUNCT
tagged_tokens: Jednak_ADV nie_PART umierają_VERB ,_PUNCT ktoś_PRON je_PRON odkopuje_VERB nocami_NOUN ._PUNCTD) tokens: Ale nie usychają , ktoś wykopuje je nocami .
tags: CCONJ PART VERB PUNCT PRON VERB PRON NOUN PUNCT
tagged_tokens: Ale_CCONJ nie_PART usychają_VERB ,_PUNCT ktoś_PRON wykopuje_VERB je_PRON nocami_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Lecz nie zdawał em sobie sprawy , że aż tak ekscytują cię krótkie spódniczki .
tags: CCONJ PART VERB AUX PRON NOUN PUNCT SCONJ PART ADV VERB PRON ADJ NOUN PUNCT
tagged_tokens: Lecz_CCONJ nie_PART zdawał_VERB em_AUX sobie_PRON sprawy_NOUN ,_PUNCT że_SCONJ aż_PART tak_ADV ekscytują_VERB cię_PRON krótkie_ADJ spódniczki_NOUN ._PUNCT

B) tokens: Tylko nie miał em pojęcia , że aż tak podniecają cię krótkie spódniczki .
tags: PART PART VERB AUX NOUN PUNCT SCONJ PART ADV VERB PRON ADJ NOUN PUNCT
tagged_tokens: Tylko_PART nie_PART miał_VERB em_AUX pojęcia_NOUN ,_PUNCT że_SCONJ aż_PART tak_ADV podniecają_VERB cię_PRON krótkie_ADJ spódniczki_NOUN ._PUNCT

C) tokens: Jednak nie wiedział em nic , że aż tak porywają cię krótkie spódniczki .
tags: CCONJ PART VERB AUX NOUN PUNCT SCONJ PART ADV VERB PRON ADJ NOUN PUNCT
tagged_tokens: Jednak_CCONJ nie_PART wiedział_VERB em_AUX nic_NOUN ,_PUNCT że_SCONJ aż_PART tak_ADV porywają_VERB cię_PRON krótkie_ADJ spódniczki_NOUN ._PUNCTD) tokens: Ale nie wiedział em , że aż tak rajcują cię krótkie spódniczki .
tags: CCONJ PART VERB AUX PUNCT SCONJ PART ADV VERB PRON ADJ NOUN PUNCT
tagged_tokens: Ale_CCONJ nie_PART wiedział_VERB em_AUX ,_PUNCT że_SCONJ aż_PART tak_ADV rajcują_VERB cię_PRON krótkie_ADJ spódniczki_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Lecz nigdy więcej nie nadszedł .
tags: CCONJ ADV ADV PART VERB PUNCT
tagged_tokens: Lecz_CCONJ nigdy_ADV więcej_ADV nie_PART nadszedł_VERB ._PUNCT

B) tokens: Tylko nigdy potem nie powrócił .
tags: PART ADV ADV PART VERB PUNCT
tagged_tokens: Tylko_PART nigdy_ADV potem_ADV nie_PART powrócił_VERB ._PUNCT

C) tokens: Jednak nigdy znowu nie pojawił się .
tags: ADV ADV ADV PART VERB PRON PUNCT
tagged_tokens: Jednak_ADV nigdy_ADV znowu_ADV nie_PART pojawił_VERB się_PRON ._PUNCTD) tokens: Ale nigdy już nie przyszedł .
tags: CCONJ ADV PART PART VERB PUNCT
tagged_tokens: Ale_CCONJ nigdy_ADV już_PART nie_PART przyszedł_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: - A o tym teraz Pan walczy ?
tags: PUNCT CCONJ ADP PRON ADV NOUN VERB PUNCT
tagged_tokens: -_PUNCT A_CCONJ o_ADP tym_PRON teraz_ADV Pan_NOUN walczy_VERB ?_PUNCT

B) tokens: - I o to teraz Pan toczy ?
tags: PUNCT CCONJ ADP PRON ADV NOUN VERB PUNCT
tagged_tokens: -_PUNCT I_CCONJ o_ADP to_PRON teraz_ADV Pan_NOUN toczy_VERB ?_PUNCT

C) tokens: - O o to teraz Pan się stara ?
tags: PUNCT ADP ADP PRON ADV NOUN PART VERB PUNCT
tagged_tokens: -_PUNCT O_ADP o_ADP to_PRON teraz_ADV Pan_NOUN się_PART stara_VERB ?_PUNCTD) tokens: – Ale o to teraz Pan walczy ?
tags: PUNCT CCONJ ADP PRON ADV NOUN VERB PUNCT
tagged_tokens: –_PUNCT Ale_CCONJ o_ADP to_PRON teraz_ADV Pan_NOUN walczy_VERB ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Lecz oni nie posiadają Balcerowiczów .
tags: CCONJ PRON PART VERB PROPN PUNCT
tagged_tokens: Lecz_CCONJ oni_PRON nie_PART posiadają_VERB Balcerowiczów_PROPN ._PUNCT

B) tokens: Jednak oni nie dysponują Balcerowiczami .
tags: CCONJ PRON PART VERB PROPN PUNCT
tagged_tokens: Jednak_CCONJ oni_PRON nie_PART dysponują_VERB Balcerowiczami_PROPN ._PUNCT

C) tokens: Tylko oni nie mają Balcerowicze .
tags: CCONJ PRON PART VERB PROPN PUNCT
tagged_tokens: Tylko_CCONJ oni_PRON nie_PART mają_VERB Balcerowicze_PROPN ._PUNCTD) tokens: Ale oni nie mają Balcerowiczów .
tags: CCONJ PRON PART VERB PROPN PUNCT
tagged_tokens: Ale_CCONJ oni_PRON nie_PART mają_VERB Balcerowiczów_PROPN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Lecz odczuł em go .
tags: CCONJ VERB AUX PRON PUNCT
tagged_tokens: Lecz_CCONJ odczuł_VERB em_AUX go_PRON ._PUNCT

B) tokens: Ale wyczuł em go .
tags: CCONJ VERB AUX PRON PUNCT
tagged_tokens: Ale_CCONJ wyczuł_VERB em_AUX go_PRON ._PUNCT

C) tokens: Ale zaznał em go .
tags: CCONJ VERB AUX PRON PUNCT
tagged_tokens: Ale_CCONJ zaznał_VERB em_AUX go_PRON ._PUNCTD) tokens: Ale poczuł em go .
tags: CCONJ VERB AUX PRON PUNCT
tagged_tokens: Ale_CCONJ poczuł_VERB em_AUX go_PRON ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""A""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Lecz polityka prędko zmieniała się na mniej wolnościową i zbiór nie mógł się pojawić .
tags: CCONJ NOUN ADV VERB PRON ADP ADV ADJ CCONJ NOUN PART VERB PRON VERB PUNCT
tagged_tokens: Lecz_CCONJ polityka_NOUN prędko_ADV zmieniała_VERB się_PRON na_ADP mniej_ADV wolnościową_ADJ i_CCONJ zbiór_NOUN nie_PART mógł_VERB się_PRON pojawić_VERB ._PUNCT

B) tokens: Natomiast polityka rychło przybierała na mniej tolerancyjną i wybór nie zdołał się ujrzeć .
tags: ADV NOUN ADV VERB ADP ADV ADJ CCONJ NOUN PART VERB PRON VERB PUNCT
tagged_tokens: Natomiast_ADV polityka_NOUN rychło_ADV przybierała_VERB na_ADP mniej_ADV tolerancyjną_ADJ i_CCONJ wybór_NOUN nie_PART zdołał_VERB się_PRON ujrzeć_VERB ._PUNCT

C) tokens: Jednak polityka wkrótce zaczynała się mniej otwartą i kompilacja nie umiała się pokazać .
tags: ADV NOUN ADV VERB PRON ADV ADJ CCONJ NOUN PART VERB PRON VERB PUNCT
tagged_tokens: Jednak_ADV polityka_NOUN wkrótce_ADV zaczynała_VERB się_PRON mniej_ADV otwartą_ADJ i_CCONJ kompilacja_NOUN nie_PART umiała_VERB się_PRON pokazać_VERB ._PUNCTD) tokens: Ale polityka szybko stawała się mniej liberalna i antologia nie mogła się ukazać .
tags: CCONJ NOUN ADV VERB PRON ADV ADJ CCONJ NOUN PART VERB PRON VERB PUNCT
tagged_tokens: Ale_CCONJ polityka_NOUN szybko_ADV stawała_VERB się_PRON mniej_ADV liberalna_ADJ i_CCONJ antologia_NOUN nie_PART mogła_VERB się_PRON ukazać_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Lecz zdecydowała się dojechać do siostry i rodziny w Podłozinach i ponownie prosić o pomoc .
tags: CCONJ VERB PART VERB ADP NOUN CCONJ NOUN ADP PROPN CCONJ ADV VERB ADP NOUN PUNCT
tagged_tokens: Lecz_CCONJ zdecydowała_VERB się_PART dojechać_VERB do_ADP siostry_NOUN i_CCONJ rodziny_NOUN w_ADP Podłozinach_PROPN i_CCONJ ponownie_ADV prosić_VERB o_ADP pomoc_NOUN ._PUNCT

B) tokens: Tymczasem uznała za stosowne doścignąć siostrę i rodzinę w Podłozinach i znowu poprosić o pomoc .
tags: ADV VERB ADP ADJ VERB NOUN CCONJ NOUN ADP PROPN CCONJ ADV VERB ADP NOUN PUNCT
tagged_tokens: Tymczasem_ADV uznała_VERB za_ADP stosowne_ADJ doścignąć_VERB siostrę_NOUN i_CCONJ rodzinę_NOUN w_ADP Podłozinach_PROPN i_CCONJ znowu_ADV poprosić_VERB o_ADP pomoc_NOUN ._PUNCT

C) tokens: Jednak postawiła na dotarcie do siostry i rodziny w Podłozinach i jeszcze jedno raz poprosić o pomoc .
tags: CONJ VERB ADP VERB ADP NOUN CCONJ NOUN ADP PROPN CCONJ PART NUM NOUN VERB ADP NOUN PUNCT
tagged_tokens: Jednak_CONJ postawiła_VERB na_ADP dotarcie_NOUN do_ADP siostry_NOUN i_CCONJ rodziny_NOUN w_ADP Podłozinach_PROPN i_CCONJ jeszcze_PART jedno_NUM raz_NOUN poprosić_VERB o_ADP pomoc_NOUN ._PUNCTD) tokens: Ale postanowiła dotrzeć do siostry i rodziny w Podłozinach i jeszcze raz poprosić o pomoc .
tags: CCONJ VERB VERB ADP NOUN CCONJ NOUN ADP PROPN CCONJ PART NOUN VERB ADP NOUN PUNCT
tagged_tokens: Ale_CCONJ postanowiła_VERB dotrzeć_VERB do_ADP siostry_NOUN i_CCONJ rodziny_NOUN w_ADP Podłozinach_PROPN i_CCONJ jeszcze_PART raz_NOUN poprosić_VERB o_ADP pomoc_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Lecz następnie dotarł .
tags: CCONJ ADV VERB PUNCT
tagged_tokens: Lecz_CCONJ następnie_ADV dotarł_VERB ._PUNCT

B) tokens: Jednak potem dojechał .
tags: CCONJ ADV VERB PUNCT
tagged_tokens: Jednak_CCONJ potem_ADV dojechał_VERB ._PUNCT

C) tokens: Tymczasem później przybył .
tags: CCONJ ADV VERB PUNCT
tagged_tokens: Tymczasem_CCONJ później_ADV przybył_VERB ._PUNCTD) tokens: Ale później przyjechał .
tags: CCONJ ADV VERB PUNCT
tagged_tokens: Ale_CCONJ później_ADV przyjechał_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Lecz opiekunów do tej codzienności nie wystarcza .
tags: CCONJ NOUN ADP DET NOUN PART VERB PUNCT
tagged_tokens: Lecz_CCONJ opiekunów_NOUN do_ADP tej_DET codzienności_NOUN nie_PART wystarcza_VERB ._PUNCT

B) tokens: Jednak rodzicom ku tej normalności nie zdołają .
tags: CCONJ NOUN ADP DET NOUN PART VERB PUNCT
tagged_tokens: Jednak_CCONJ rodzicom_NOUN ku_ADP tej_DET normalności_NOUN nie_PART zdołają_VERB ._PUNCT

C) tokens: Tylko rodzicielom na tę zwyczajność nie potrafią .
tags: CCONJ NOUN ADP DET NOUN PART VERB PUNCT
tagged_tokens: Tylko_CCONJ rodzicielom_NOUN na_ADP tę_DET zwyczajność_NOUN nie_PART potrafią_VERB ._PUNCTD) tokens: Ale rodziców na tę normalność nie stać .
tags: CCONJ NOUN ADP DET NOUN PART VERB PUNCT
tagged_tokens: Ale_CCONJ rodziców_NOUN na_ADP tę_DET normalność_NOUN nie_PART stać_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Lecz debatujemy na temat twojego autorytetu .
tags: CCONJ VERB ADP NOUN PRON NOUN PUNCT
tagged_tokens: Lecz_CCONJ debatujemy_VERB na_ADP temat_NOUN twojego_PRON autorytetu_NOUN ._PUNCT

B) tokens: Jednak dyskutujemy o twoim renomie .
tags: ADV VERB ADP DET NOUN PUNCT
tagged_tokens: Jednak_ADV dyskutujemy_VERB o_ADP twoim_DET renomie_NOUN ._PUNCT

C) tokens: Tymczasem rozmieniamy się o twojej sławie .
tags: ADV VERB PRON ADP DET NOUN PUNCT
tagged_tokens: Tymczasem_ADV rozmieniamy_VERB się_PRON o_ADP twojej_DET sławie_NOUN ._PUNCTD) tokens: Ale rozmawiamy o twojej wiarygodności .
tags: CCONJ VERB ADP DET NOUN PUNCT
tagged_tokens: Ale_CCONJ rozmawiamy_VERB o_ADP twojej_DET wiarygodności_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: - Lecz dość już .
tags: PUNCT CCONJ ADJ PART PUNCT
tagged_tokens: -_PUNCT Lecz_CCONJ dość_ADJ już_PART ._PUNCT

B) tokens: - Jednak koniec już .
tags: PUNCT ADV NOUN PART PUNCT
tagged_tokens: -_PUNCT Jednak_ADV koniec_NOUN już_PART ._PUNCT

C) tokens: - No wystarczy już .
tags: PUNCT PART VERB PART PUNCT
tagged_tokens: -_PUNCT No_PART wystarczy_VERB już_PART ._PUNCTD) tokens: – Ale skończ już .
tags: PUNCT CCONJ VERB PART PUNCT
tagged_tokens: –_PUNCT Ale_CCONJ skończ_VERB już_PART ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: - Lecz to jest wyłącznie przez dwa , trzy okresy w roku .
tags: PUNCT CCONJ PRON VERB PART ADP NUM PUNCT NUM NOUN ADP NOUN PUNCT
tagged_tokens: -_PUNCT Lecz_CCONJ to_PRON jest_VERB wyłącznie_PART przez_ADP dwa_NUM ,_PUNCT trzy_NUM okresy_NOUN w_ADP roku_NOUN ._PUNCT

B) tokens: - Jednak to jest jedynie przez dwa , trzy miesiące w rocznym cyklu .
tags: PUNCT CCONJ PRON VERB PART ADP NUM PUNCT NUM NOUN ADP ADJ NOUN PUNCT
tagged_tokens: -_PUNCT Jednak_CCONJ to_PRON jest_VERB jedynie_PART przez_ADP dwa_NUM ,_PUNCT trzy_NUM miesiące_NOUN w_ADP rocznym_ADJ cyklu_NOUN ._PUNCT

C) tokens: - Tylko to jest zaledwie przez dwa , trzy okresy w rocznym obiegu .
tags: PUNCT CCONJ PRON VERB PART ADP NUM PUNCT NUM NOUN ADP ADJ NOUN PUNCT
tagged_tokens: -_PUNCT Tylko_CCONJ to_PRON jest_VERB zaledwie_PART przez_ADP dwa_NUM ,_PUNCT trzy_NUM okresy_NOUN w_ADP rocznym_ADJ obiegu_NOUN ._PUNCTD) tokens: - Ale tak jest tylko przez dwa , trzy miesiące w roku .
tags: PUNCT CCONJ ADV VERB PART ADP NUM PUNCT NUM NOUN ADP NOUN PUNCT
tagged_tokens: -_PUNCT Ale_CCONJ tak_ADV jest_VERB tylko_PART przez_ADP dwa_NUM ,_PUNCT trzy_NUM miesiące_NOUN w_ADP roku_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: – Lecz tam stoi ptak !
tags: PUNCT CCONJ ADV VERB NOUN PUNCT
tagged_tokens: –_PUNCT Lecz_CCONJ tam_ADV stoi_VERB ptak_NOUN !_PUNCT

B) tokens: – A oto widzimy pawia !
tags: PUNCT CCONJ PART VERB NOUN PUNCT
tagged_tokens: –_PUNCT A_CCONJ oto_PART widzimy_VERB pawia_NOUN !_PUNCT

C) tokens: – Tam jest piękny paw !
tags: PUNCT ADV AUX ADJ NOUN PUNCT
tagged_tokens: –_PUNCT Tam_ADV jest_AUX piękny_ADJ paw_NOUN !_PUNCTD) tokens: – Ale tam jest paw !
tags: PUNCT CCONJ ADV AUX NOUN PUNCT
tagged_tokens: –_PUNCT Ale_CCONJ tam_ADV jest_AUX paw_NOUN !_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: - Lecz tam jest zbyt obszerne posłanie !
tags: PUNCT CCONJ ADV AUX ADV ADJ NOUN PUNCT
tagged_tokens: -_PUNCT Lecz_CCONJ tam_ADV jest_AUX zbyt_ADV obszerne_ADJ posłanie_NOUN !_PUNCT

B) tokens: - A tam jest nadto wielkie łoże !
tags: PUNCT CCONJ ADV AUX ADP ADJ NOUN PUNCT
tagged_tokens: -_PUNCT A_CCONJ tam_ADV jest_AUX nadto_ADP wielkie_ADJ łoże_NOUN !_PUNCT

C) tokens: - Przecież tam jest zanadto rozległe łóżeczko !
tags: PUNCT PART ADV AUX ADV ADJ NOUN PUNCT
tagged_tokens: -_PUNCT Przecież_PART tam_ADV jest_AUX zanadto_ADV rozległe_ADJ łóżeczko_NOUN !_PUNCTD) tokens: – Ale tam jest za duże łóżko !
tags: PUNCT CCONJ ADV AUX PART ADJ NOUN PUNCT
tagged_tokens: –_PUNCT Ale_CCONJ tam_ADV jest_AUX za_PART duże_ADJ łóżko_NOUN !_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Lecz to nie jest mój grzech .
tags: CCONJ VERB PART VERB ADJ NOUN PUNCT
tagged_tokens: Lecz_CCONJ to_VERB nie_PART jest_VERB mój_ADJ grzech_NOUN ._PUNCT

B) tokens: Jednak to nie była moja wada .
tags: CONJ VERB PART AUX ADJ NOUN PUNCT
tagged_tokens: Jednak_CONJ to_VERB nie_PART była_AUX moja_ADJ wada_NOUN ._PUNCT

C) tokens: Tylko to nie należy do mojej winy .
tags: ADV VERB PART VERB ADP ADJ GEN PUNCT
tagged_tokens: Tylko_ADV to_VERB nie_PART należy_VERB do_ADP mojej_ADJ winy_GEN ._PUNCTD) tokens: Ale to nie moja wina .
tags: CCONJ VERB PART DET NOUN PUNCT
tagged_tokens: Ale_CCONJ to_VERB nie_PART moja_DET wina_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Natomiast na Dolnym Śląsku , terenie Poznania i w Opolu część rolników już kończy zbiory .
tags: CONJ ADP ADJ NOUN PUNCT NOUN PROPN CCONJ ADP PROPN DET NOUN PART VERB NOUN PUNCT
tagged_tokens: Natomiast_CONJ na_ADP Dolnym_ADJ Śląsku_NOUN ,_PUNCT terenie_NOUN Poznania_PROPN i_CCONJ w_ADP Opolu_PROPN część_DET rolników_NOUN już_PART kończy_VERB zbiory_NOUN ._PUNCT

B) tokens: Jednak w okolicach Wrocławia , Opola i Poznania spora liczba gospodarstw rolnych jest już nawet na mecie .
tags: CONJ ADP NOUN PROPN PUNCT PROPN CCONJ PROPN ADJ NOUN NOUN ADJ VERB PART PART ADP NOUN PUNCT
tagged_tokens: Jednak_CONJ w_ADP okolicach_NOUN Wrocławia_PROPN ,_PUNCT Opola_PROPN i_CCONJ Poznania_PROPN spora_ADJ liczba_NOUN gospodarstw_NOUN rolnych_ADJ jest_VERB już_PART nawet_PART na_ADP mecie_NOUN ._PUNCT

C) tokens: Lecz w rejonie Opolskiego , Wrocławskiego i Poznańskiego nieco ferm jest już nawet na kresie .
tags: CONJ ADP NOUN PROPN PUNCT PROPN CCONJ PROPN TROCHA DET NOUN VERB PART PART ADP NOUN PUNCT
tagged_tokens: Lecz_CONJ w_ADP rejonie_NOUN Opolskiego_PROPN ,_PUNCT Wrocławskiego_PROPN i_CCONJ Poznańskiego_PROPN nieco_TROCHA ferm_DET jest_VERB już_PART nawet_PART na_ADP kresie_NOUN ._PUNCTD) tokens: Ale w Opolskiem , Wrocławskiem i Poznańskiem niektóre gospodarstwa są już nawet na finiszu .
tags: CCONJ ADP PROPN PUNCT PROPN CCONJ PROPN DET NOUN VERB PART PART ADP NOUN PUNCT
tagged_tokens: Ale_CCONJ w_ADP Opolskiem_PROPN ,_PUNCT Wrocławskiem_PROPN i_CCONJ Poznańskiem_PROPN niektóre_DET gospodarstwa_NOUN są_VERB już_PART nawet_PART na_ADP finiszu_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Lecz w sporej ilości sytuacji o wiele niebezpieczniej prezentują się opłaty poboczne .
tags: CCONJ ADP ADJ NOUN NOUN ADP ADV ADJ VERB PRON NOUN ADJ PUNCT
tagged_tokens: Lecz_CCONJ w_ADP sporej_ADJ ilości_NOUN sytuacji_NOUN o_ADP wiele_ADV niebezpieczniej_ADJ prezentują_VERB się_PRON opłaty_NOUN poboczne_ADJ ._PUNCT

B) tokens: Natomiast w dużej liczbie okoliczności znacznie ryzykowniej ukazują się należności uboczne .
tags: CCONJ ADP ADJ NOUN NOUN ADV ADJ VERB PRON NOUN ADJ PUNCT
tagged_tokens: Natomiast_CCONJ w_ADP dużej_ADJ liczbie_NOUN okoliczności_NOUN znacznie_ADV ryzykowniej_ADJ ukazują_VERB się_PRON należności_NOUN uboczne_ADJ ._PUNCT

C) tokens: Jednak w licznej części przypadków znacznie groźniej pokazują się obciążenia dodatkowe .
tags: CCONJ ADP ADJ NOUN NOUN ADV ADJ VERB PRON NOUN ADJ PUNCT
tagged_tokens: Jednak_CCONJ w_ADP licznej_ADJ części_NOUN przypadków_NOUN znacznie_ADV groźniej_ADJ pokazują_VERB się_PRON obciążenia_NOUN dodatkowe_ADJ ._PUNCTD) tokens: Ale w wielu przypadkach znacznie groźniej wyglądają koszty dodatkowe .
tags: CCONJ ADP DET NOUN ADV ADV VERB NOUN ADJ PUNCT
tagged_tokens: Ale_CCONJ w_ADP wielu_DET przypadkach_NOUN znacznie_ADV groźniej_ADV wyglądają_VERB koszty_NOUN dodatkowe_ADJ ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: - Lecz sporo zależy również od ich działania .
tags: PUNCT CCONJ NOUN VERB ADV ADP PRON NOUN PUNCT
tagged_tokens: -_PUNCT Lecz_CCONJ sporo_NOUN zależy_VERB również_ADV od_ADP ich_PRON działania_NOUN ._PUNCT

B) tokens: - Jednak mnóstwo zależy także od ich aktywności .
tags: PUNCT CCONJ NOUN VERB PART ADP PRON NOUN PUNCT
tagged_tokens: -_PUNCT Jednak_CCONJ mnóstwo_NOUN zależy_VERB także_PART od_ADP ich_PRON aktywności_NOUN ._PUNCT

C) tokens: - Ale dużo zależy dodatkowo od ich funkcjonowania .
tags: PUNCT CCONJ NUM VERB ADV ADP PRON NOUN PUNCT
tagged_tokens: -_PUNCT Ale_CCONJ dużo_NUM zależy_VERB dodatkowo_ADV od_ADP ich_PRON funkcjonowania_NOUN ._PUNCTD) tokens: - Ale wiele zależy też od ich aktywności .
tags: PUNCT CCONJ DET VERB PART ADP PRON NOUN PUNCT
tagged_tokens: -_PUNCT Ale_CCONJ wiele_DET zależy_VERB też_PART od_ADP ich_PRON aktywności_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Lecz znam , że mnie tam wyczekują kajdany . . .
tags: CCONJ VERB PUNCT SCONJ PRON ADV VERB NOUN PUNCT PUNCT PUNCT
tagged_tokens: Lecz_CCONJ znam_VERB ,_PUNCT że_SCONJ mnie_PRON tam_ADV wyczekują_VERB kajdany_NOUN ._PUNCT ._PUNCT ._PUNCT

B) tokens: Jednak umiem , że mnie tam oczekują okowy . . .
tags: CCONJ VERB PUNCT SCONJ PRON ADV VERB NOUN PUNCT PUNCT PUNCT
tagged_tokens: Jednak_CCONJ umiem_VERB ,_PUNCT że_SCONJ mnie_PRON tam_ADV oczekują_VERB okowy_NOUN ._PUNCT ._PUNCT ._PUNCT

C) tokens: Natomiast potrafię , że mnie tam czekają łańcuchy . . .
tags: CCONJ VERB PUNCT SCONJ PRON ADV VERB NOUN PUNCT PUNCT PUNCT
tagged_tokens: Natomiast_CCONJ potrafię_VERB ,_PUNCT że_SCONJ mnie_PRON tam_ADV czekają_VERB łańcuchy_NOUN ._PUNCT ._PUNCT ._PUNCTD) tokens: Ale wiem , że mnie tam czekają więzy . . .
tags: CCONJ VERB PUNCT SCONJ PRON ADV VERB NOUN PUNCT PUNCT PUNCT
tagged_tokens: Ale_CCONJ wiem_VERB ,_PUNCT że_SCONJ mnie_PRON tam_ADV czekają_VERB więzy_NOUN ._PUNCT ._PUNCT ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Lecz popielica, myjąc ubrania, znajdowała klamry i nastał radosny finał.
tags: CCONJ NOUN PUNCT VERB NOUN PUNCT VERB NOUN CCONJ VERB ADJ NOUN PUNCT
tagged_tokens: Lecz_CCONJ popielica_NOUN ,_PUNCT myjąc_VERB ubrania_NOUN ,_PUNCT znajdowała_VERB klamry_NOUN i_CCONJ nastał_VERB radosny_ADJ finał_NOUN ._PUNCT

B) tokens: Natomiast kuna, prać odzież, odzyskiwała spinki i zdarzył się wesoły zakończenie.
tags: ADV NOUN PUNCT VERB NOUN PUNCT VERB NOUN CCONJ VERB VERB ADJ NOUN PUNCT
tagged_tokens: Natomiast_ADV kuna_NOUN ,_PUNCT prać_VERB odzież_NOUN ,_PUNCT odzyskiwała_VERB spinki_NOUN i_CCONJ zdarzył_VERB się_VERB wesoły_ADJ zakończenie_NOUN ._PUNCT

C) tokens: Tymczasem lisica, czyszcząc stroje, wyszukiwała zapięcia i miał miejsce zabawny epilog.
tags: ADV NOUN PUNCT VERB NOUN PUNCT VERB NOUN CCONJ VERB NOUN ADJ NOUN PUNCT
tagged_tokens: Tymczasem_ADV lisica_NOUN ,_PUNCT czyszcząc_VERB stroje_NOUN ,_PUNCT wyszukiwała_VERB zapięcia_NOUN i_CCONJ miał_VERB miejsce_NOUN zabawny_ADJ epilog_NOUN ._PUNCTD) tokens: Ale wiewiórka , piorąc bieliznę , wyławiała lady i następował szczęśliwy koniec .
tags: CCONJ NOUN PUNCT VERB NOUN PUNCT VERB NOUN CCONJ VERB ADJ NOUN PUNCT
tagged_tokens: Ale_CCONJ wiewiórka_NOUN ,_PUNCT piorąc_VERB bieliznę_NOUN ,_PUNCT wyławiała_VERB lady_NOUN i_CCONJ następował_VERB szczęśliwy_ADJ koniec_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Lecz każdy został nominalizowany i zajmuje miejsce w Parlamencie .
tags: CCONJ PRON AUX ADJ CCONJ VERB NOUN ADP NOUN PUNCT
tagged_tokens: Lecz_CCONJ każdy_PRON został_AUX nominalizowany_ADJ i_CCONJ zajmuje_VERB miejsce_NOUN w_ADP Parlamencie_NOUN ._PUNCT

B) tokens: Jednakże wszelcy uzyskali nominację i piastują stanowisko w Izbie .
tags: ADV PRON VERB NOUN CCONJ VERB NOUN ADP NOUN PUNCT
tagged_tokens: Jednakże_ADV wszelcy_PRON uzyskali_VERB nominację_NOUN i_CCONJ piastują_VERB stanowisko_NOUN w_ADP Izbie_NOUN ._PUNCT

C) tokens: Tymczasem wszyscy otrzymali nominat i sprawują funkcję w Zgromadzeniu .
tags: ADV PRON VERB NOUN CCONJ VERB NOUN ADP NOUN PUNCT
tagged_tokens: Tymczasem_ADV wszyscy_PRON otrzymali_VERB nominat_NOUN i_CCONJ sprawują_VERB funkcję_NOUN w_ADP Zgromadzeniu_NOUN ._PUNCTD) tokens: Ale wszyscy zostali wybrani i zasiadają w Sejmie .
tags: CCONJ PRON AUX ADJ CCONJ VERB ADP NOUN PUNCT
tagged_tokens: Ale_CCONJ wszyscy_PRON zostali_AUX wybrani_ADJ i_CCONJ zasiadają_VERB w_ADP Sejmie_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Lecz potem twierdził am zwykle , iż będzie źle .
tags: CCONJ ADV VERB AUX ADV PUNCT SCONJ VERB ADV PUNCT
tagged_tokens: Lecz_CCONJ potem_ADV twierdził_VERB am_AUX zwykle_ADV ,_PUNCT iż_SCONJ będzie_VERB źle_ADV ._PUNCT

B) tokens: Natomiast później utrzymywał aś normalnie , że będzie niedobrze .
tags: CCONJ ADV VERB AUX ADV PUNCT SCONJ VERB ADV PUNCT
tagged_tokens: Natomiast_CCONJ później_ADV utrzymywał_VERB aś_AUX normalnie_ADV ,_PUNCT że_SCONJ będzie_VERB niedobrze_ADV ._PUNCT

C) tokens: A następnie zapewniał ał zwyczajnie , że będzie fatalnie .
tags: CCONJ ADV VERB AUX ADV PUNCT SCONJ VERB ADV PUNCT
tagged_tokens: A_CCONJ następnie_ADV zapewniał_VERB ał_AUX zwyczajnie_ADV ,_PUNCT że_SCONJ będzie_VERB fatalnie_ADV ._PUNCTD) tokens: Ale wtedy mówił em po prostu , że będzie gorzej .
tags: CCONJ ADV VERB AUX ADP ADJ PUNCT SCONJ VERB ADV PUNCT
tagged_tokens: Ale_CCONJ wtedy_ADV mówił_VERB em_AUX po_ADP prostu_ADJ ,_PUNCT że_SCONJ będzie_VERB gorzej_ADV ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Lecz wtedy zainterweniowały już nadrzędne władze .
tags: CCONJ ADV VERB PART ADJ NOUN PUNCT
tagged_tokens: Lecz_CCONJ wtedy_ADV zainterweniowały_VERB już_PART nadrzędne_ADJ władze_NOUN ._PUNCT

B) tokens: Natomiast wówczas zadziałały już wyższej instancje .
tags: CCONJ ADV VERB PART ADJ NOUN PUNCT
tagged_tokens: Natomiast_CCONJ wówczas_ADV zadziałały_VERB już_PART wyższej_ADJ instancje_NOUN ._PUNCT

C) tokens: Jednakże wówczas interweniowały już wyższe organy .
tags: CCONJ ADV VERB PART ADJ NOUN PUNCT
tagged_tokens: Jednakże_CCONJ wówczas_ADV interweniowały_VERB już_PART wyższe_ADJ organy_NOUN ._PUNCTD) tokens: Ale wówczas wkroczyły już wyższe władze .
tags: CCONJ ADV VERB PART ADJ NOUN PUNCT
tagged_tokens: Ale_CCONJ wówczas_ADV wkroczyły_VERB już_PART wyższe_ADJ władze_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: - Lecz nie sądzę , że się przeraził .
tags: PUNCT CCONJ ADV VERB PUNCT SCONJ PRON VERB PUNCT
tagged_tokens: -_PUNCT Lecz_CCONJ nie_ADV sądzę_VERB ,_PUNCT że_SCONJ się_PRON przeraził_VERB ._PUNCT

B) tokens: - Tylko nie przypuszczam , iż się wystraszył .
tags: PUNCT ADV NEG VERB PUNCT SCONJ PRON VERB PUNCT
tagged_tokens: -_PUNCT Tylko_ADV nie_NEG przypuszczam_VERB ,_PUNCT iż_SCONJ się_PRON wystraszył_VERB ._PUNCT

C) tokens: - Jednak nie uważam , żeby się zaniepokoił .
tags: PUNCT ADV NEG VERB PUNCT SCONJ PRON VERB PUNCT
tagged_tokens: -_PUNCT Jednak_ADV nie_NEG uważam_VERB ,_PUNCT żeby_SCONJ się_PRON zaniepokoił_VERB ._PUNCTD) tokens: - Ale wątpię , by się zląkł .
tags: PUNCT CCONJ VERB PUNCT SCONJ PRON VERB PUNCT
tagged_tokens: -_PUNCT Ale_CCONJ wątpię_VERB ,_PUNCT by_SCONJ się_PRON zląkł_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Alfons Piotrowski zginął nie odzyskując świadomości .
tags: PROPN PROPN VERB PART VERB NOUN PUNCT
tagged_tokens: Alfons_PROPN Piotrowski_PROPN zginął_VERB nie_PART odzyskując_VERB świadomości_NOUN ._PUNCT

B) tokens: Alfons Piotrowski skonał nie wracając do siebie .
tags: PROPN PROPN VERB PART VERB ADP PRON PUNCT
tagged_tokens: Alfons_PROPN Piotrowski_PROPN skonał_VERB nie_PART wracając_VERB do_ADP siebie_PRON ._PUNCT

C) tokens: Alfons Piotrowski poległ nie wychodząc z omdlenia .
tags: PROPN PROPN VERB PART VERB NOUN PUNCT
tagged_tokens: Alfons_PROPN Piotrowski_PROPN poległ_VERB nie_PART wychodząc_VERB z_ADP omdlenia_NOUN ._PUNCTD) tokens: Alfons Piotrowski poniósł śmierć nie odzyskawszy przytomności .
tags: PROPN PROPN VERB NOUN PART VERB NOUN PUNCT
tagged_tokens: Alfons_PROPN Piotrowski_PROPN poniósł_VERB śmierć_NOUN nie_PART odzyskawszy_VERB przytomności_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: reprezentant Algierii Nouredine Morceli zajął jedynie 12 . miejsce .
tags: NOUN PROPN PROPN VERB ADV ADJ PUNCT NOUN PUNCT
tagged_tokens: reprezentant_NOUN Algierii_PROPN Nouredine_PROPN Morceli_PROPN zajął_VERB jedynie_ADV 12_ADJ ._PUNCT miejsce_NOUN ._PUNCT

B) tokens: lider Algieru Noreddin Morceli znalazł się tylko na 12 . lokacie .
tags: NOUN PROPN PROPN VERB PRON PART ADP ADJ PUNCT NOUN PUNCT
tagged_tokens: lider_NOUN Algieru_PROPN Noreddin_PROPN Morceli_PROPN znalazł_VERB się_PRON tylko_PART na_ADP 12_ADJ ._PUNCT lokacie_NOUN ._PUNCT

C) tokens: gwiazda Algieru Nourredine Morceli skończył zaledwie na 12 . pozycji .
tags: NOUN PROPN PROPN VERB ADV ADP ADJ PUNCT NOUN PUNCT
tagged_tokens: gwiazda_NOUN Algieru_PROPN Nourredine_PROPN Morceli_PROPN skończył_VERB zaledwie_ADV na_ADP 12_ADJ ._PUNCT pozycji_NOUN ._PUNCTD) tokens: Algierczyk Noureddine Morceli uplasował się dopiero na 12 . pozycji .
tags: PROPN PROPN PROPN VERB PRON PART ADP ADJ PUNCT NOUN PUNCT
tagged_tokens: Algierczyk_PROPN Noureddine_PROPN Morceli_PROPN uplasował_VERB się_PRON dopiero_PART na_ADP 12_ADJ ._PUNCT pozycji_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Ambrożego nawet osadzili .
tags: PROPN PART VERB PUNCT
tagged_tokens: Ambrożego_PROPN nawet_PART osadzili_VERB ._PUNCT

B) tokens: Ambrożego nawet uwięzili .
tags: PROPN PART VERB PUNCT
tagged_tokens: Ambrożego_PROPN nawet_PART uwięzili_VERB ._PUNCT

C) tokens: Ambrożego nawet wsadzili .
tags: PROPN PART VERB PUNCT
tagged_tokens: Ambrożego_PROPN nawet_PART wsadzili_VERB ._PUNCTD) tokens: Ambrożego nawet zamknęli .
tags: PROPN PART VERB PUNCT
tagged_tokens: Ambrożego_PROPN nawet_PART zamknęli_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""A""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Andrzej z powagą ucałował ją w dłoń .
tags: PROPN ADP NOUN VERB PRON ADP NOUN PUNCT
tagged_tokens: Andrzej_PROPN z_ADP powagą_NOUN ucałował_VERB ją_PRON w_ADP dłoń_NOUN ._PUNCT

B) tokens: Andreas z poważaniem pocałował ją w rąk .
tags: PROPN ADP NOUN VERB PRON ADP NOUN PUNCT
tagged_tokens: Andreas_PROPN z_ADP poważaniem_NOUN pocałował_VERB ją_PRON w_ADP rąk_NOUN ._PUNCT

C) tokens: Andre z szacunku całował ją w łapę .
tags: PROPN ADP NOUN VERB PRON ADP NOUN PUNCT
tagged_tokens: Andre_PROPN z_ADP szacunku_NOUN całował_VERB ją_PRON w_ADP łapę_NOUN ._PUNCTD) tokens: Andrew z szacunkiem pocałował ją w rękę .
tags: PROPN ADP NOUN VERB PRON ADP NOUN PUNCT
tagged_tokens: Andrew_PROPN z_ADP szacunkiem_NOUN pocałował_VERB ją_PRON w_ADP rękę_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: - Anna, spadaj już własnymi siłami...
tags: PUNCT PROPN PUNCT VERB PART ADJS PUNCT PUNCT PUNCT
tagged_tokens: -_PUNCT Anna_PROPN ,_PUNCT spadaj_VERB już_PART własnymi siłami_ADJS ._PUNCT ._PUNCT ._PUNCT

B) tokens: - Anetto, odpal już samodzielnie...
tags: PUNCT PROPN PUNCT VERB PART ADJ PUNCT PUNCT PUNCT
tagged_tokens: -_PUNCT Anetto_PROPN ,_PUNCT odpal_VERB już_PART samodzielnie_ADJ ._PUNCT ._PUNCT ._PUNCT

C) tokens: - Anka, zmykaj już osobno...
tags: PUNCT PROPN PUNCT VERB PART ADV PUNCT PUNCT PUNCT
tagged_tokens: -_PUNCT Anka_PROPN ,_PUNCT zmykaj_VERB już_PART osobno_ADV ._PUNCT ._PUNCT ._PUNCTD) tokens: – Aniu , idź już sama . . .
tags: PUNCT PROPN PUNCT VERB PART ADJ PUNCT PUNCT PUNCT
tagged_tokens: –_PUNCT Aniu_PROPN ,_PUNCT idź_VERB już_PART sama_ADJ ._PUNCT ._PUNCT ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Działa moskiewskie również ucichły .
tags: NOUN ADJ ADV VERB PUNCT
tagged_tokens: Działa_NOUN moskiewskie_ADJ również_ADV ucichły_VERB ._PUNCT

B) tokens: Armata rosyjska także znikła .
tags: NOUN ADJ PART VERB PUNCT
tagged_tokens: Armata_NOUN rosyjska_ADJ także_PART znikła_VERB ._PUNCT

C) tokens: Haubice rosyjskie również zniknęły .
tags: NOUN ADJ ADV VERB PUNCT
tagged_tokens: Haubice_NOUN rosyjskie_ADJ również_ADV zniknęły_VERB ._PUNCTD) tokens: Artyleria rosyjska także zamilkła .
tags: NOUN ADJ PART VERB PUNCT
tagged_tokens: Artyleria_NOUN rosyjska_ADJ także_PART zamilkła_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Dopóki nie nadszedł taki moment , że się nic nie działo .
tags: SCONJ PART VERB DET NOUN PUNCT SCONJ PRON ADV PART VERB PUNCT
tagged_tokens: Dopóki_SCONJ nie_PART nadszedł_VERB taki_DET moment_NOUN ,_PUNCT że_SCONJ się_PRON nic_ADV nie_PART działo_VERB ._PUNCT

B) tokens: Zanim nie przyszedł taki okres , że się wszystko przerwało .
tags: SCONJ PART VERB DET NOUN PUNCT SCONJ PRON PRON VERB PUNCT
tagged_tokens: Zanim_SCONJ nie_PART przyszedł_VERB taki_DET okres_NOUN ,_PUNCT że_SCONJ się_PRON wszystko_PRON przerwało_VERB ._PUNCT

C) tokens: Póki nie nastała taka pora , że się nic nie wydarzyło .
tags: SCONJ PART VERB DET NOUN PUNCT SCONJ PRON ADV PART VERB PUNCT
tagged_tokens: Póki_SCONJ nie_PART nastała_VERB taka_DET pora_NOUN ,_PUNCT że_SCONJ się_PRON nic_ADV nie_PART wydarzyło_VERB ._PUNCTD) tokens: Aż nastał taki czas , że się wszystko urwało .
tags: SCONJ VERB DET NOUN PUNCT SCONJ PRON PRON VERB PUNCT
tagged_tokens: Aż_SCONJ nastał_VERB taki_DET czas_NOUN ,_PUNCT że_SCONJ się_PRON wszystko_PRON urwało_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Złoczyńcy wtargnęli do mieszkania po sforsowaniu drzwi .
tags: NOUN VERB ADP NOUN ADP NOUN NOUN PUNCT
tagged_tokens: Złoczyńcy_NOUN wtargnęli_VERB do_ADP mieszkania_NOUN po_ADP sforsowaniu_NOUN drzwi_NOUN ._PUNCT

B) tokens: Rozbójnicy wdarli się do lokalu po rozbiciu drzwi .
tags: NOUN VERB PART ADP NOUN ADP NOUN NOUN PUNCT
tagged_tokens: Rozbójnicy_NOUN wdarli_VERB się_PART do_ADP lokalu_NOUN po_ADP rozbiciu_NOUN drzwi_NOUN ._PUNCT

C) tokens: Przestępcy wbiegli do chaty po zniszczeniu drzwi .
tags: NOUN VERB ADP NOUN ADP NOUN NOUN PUNCT
tagged_tokens: Przestępcy_NOUN wbiegli_VERB do_ADP chaty_NOUN po_ADP zniszczeniu_NOUN drzwi_NOUN ._PUNCTD) tokens: Bandyci weszli do domu po wyłamaniu drzwi .
tags: NOUN VERB ADP NOUN ADP NOUN NOUN PUNCT
tagged_tokens: Bandyci_NOUN weszli_VERB do_ADP domu_NOUN po_ADP wyłamaniu_NOUN drzwi_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Barbara podaje Milanowi kieliszek .
tags: PROPN VERB PROPN NOUN PUNCT
tagged_tokens: Barbara_PROPN podaje_VERB Milanowi_PROPN kieliszek_NOUN ._PUNCT

B) tokens: Barbara przekazuje Milanowi szklanicę .
tags: PROPN VERB PROPN NOUN PUNCT
tagged_tokens: Barbara_PROPN przekazuje_VERB Milanowi_PROPN szklanicę_NOUN ._PUNCT

C) tokens: Barbara daje Milanowi kubek .
tags: PROPN VERB PROPN NOUN PUNCT
tagged_tokens: Barbara_PROPN daje_VERB Milanowi_PROPN kubek_NOUN ._PUNCTD) tokens: Barbara wręcza Milanowi szklankę .
tags: PROPN VERB PROPN NOUN PUNCT
tagged_tokens: Barbara_PROPN wręcza_VERB Milanowi_PROPN szklankę_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Bardzo pragnął by m z nim porozmawiać .
tags: ADV VERB AUX AUX ADP PRON VERB PUNCT
tagged_tokens: Bardzo_ADV pragnął_VERB by_AUX m_AUX z_ADP nim_PRON porozmawiać_VERB ._PUNCT

B) tokens: Bardzo życzył by m z nim pogawędzić .
tags: ADV VERB AUX AUX ADP PRON VERB PUNCT
tagged_tokens: Bardzo_ADV życzył_VERB by_AUX m_AUX z_ADP nim_PRON pogawędzić_VERB ._PUNCT

C) tokens: Bardzo marzył by m z nim poplotkować .
tags: ADV VERB AUX AUX ADP PRON VERB PUNCT
tagged_tokens: Bardzo_ADV marzył_VERB by_AUX m_AUX z_ADP nim_PRON poplotkować_VERB ._PUNCTD) tokens: Bardzo chciał by m z nim pogadać .
tags: ADV VERB AUX AUX ADP PRON VERB PUNCT
tagged_tokens: Bardzo_ADV chciał_VERB by_AUX m_AUX z_ADP nim_PRON pogadać_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Niezmiernie odległy jest ów świat poza oknem .
tags: ADV ADJ AUX DET NOUN ADP NOUN PUNCT
tagged_tokens: Niezmiernie_ADV odległy_ADJ jest_AUX ów_DET świat_NOUN poza_ADP oknem_NOUN ._PUNCT

B) tokens: Nadzwyczaj daleki jest ten świat za szybą .
tags: ADV ADJ AUX DET NOUN ADP NOUN PUNCT
tagged_tokens: Nadzwyczaj_ADV daleki_ADJ jest_AUX ten_DET świat_NOUN za_ADP szybą_NOUN ._PUNCT

C) tokens: Bardzo odległy jest tamten świat za kratą .
tags: ADV ADJ AUX DET NOUN ADP NOUN PUNCT
tagged_tokens: Bardzo_ADV odległy_ADJ jest_AUX tamten_DET świat_NOUN za_ADP kratą_NOUN ._PUNCTD) tokens: Bardzo daleki jest ten świat za oknem .
tags: ADV ADJ AUX DET NOUN ADP NOUN PUNCT
tagged_tokens: Bardzo_ADV daleki_ADJ jest_AUX ten_DET świat_NOUN za_ADP oknem_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: - Gorąco zachęcam do głosu .
tags: PUNCT ADV VERB ADP NOUN PUNCT
tagged_tokens: -_PUNCT Gorąco_ADV zachęcam_VERB do_ADP głosu_NOUN ._PUNCT

B) tokens: - Serdecznie proszę o wybór .
tags: PUNCT ADV VERB ADP NOUN PUNCT
tagged_tokens: -_PUNCT Serdecznie_ADV proszę_VERB o_ADP wybór_NOUN ._PUNCT

C) tokens: - Usilnie namawiam do udziału .
tags: PUNCT ADV VERB ADP NOUN PUNCT
tagged_tokens: -_PUNCT Usilnie_ADV namawiam_VERB do_ADP udziału_NOUN ._PUNCTD) tokens: - Bardzo proszę o głos .
tags: PUNCT ADV VERB ADP NOUN PUNCT
tagged_tokens: -_PUNCT Bardzo_ADV proszę_VERB o_ADP głos_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Bardzo zwracam się , Panie Senatorze .
tags: ADV VERB PRON PUNCT NOUN NOUN PUNCT
tagged_tokens: Bardzo_ADV zwracam się_VERB PRON_PUNCT Panie_NOUN Senatorze_NOUN ._PUNCT

B) tokens: Bardzo upraszam , Panie Senatorze .
tags: ADV VERB PUNCT NOUN NOUN PUNCT
tagged_tokens: Bardzo_ADV upraszam_VERB ,_PUNCT Panie_NOUN Senatorze_NOUN ._PUNCT

C) tokens: Bardzo żądam , Panie Senatorze .
tags: ADV VERB PUNCT NOUN NOUN PUNCT
tagged_tokens: Bardzo_ADV żądam_VERB ,_PUNCT Panie_NOUN Senatorze_NOUN ._PUNCTD) tokens: Bardzo proszę , Panie Senatorze .
tags: ADV VERB PUNCT NOUN NOUN PUNCT
tagged_tokens: Bardzo_ADV proszę_VERB ,_PUNCT Panie_NOUN Senatorze_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Czy mógłbyś .
tags: PART VERB PUNCT
tagged_tokens: Czy_PART mógłbyś_VERB ._PUNCT

B) tokens: Proszę cię .
tags: VERB PRON PUNCT
tagged_tokens: Proszę_VERB cię_PRON ._PUNCT

C) tokens: Zechciałbyś .
tags: VERB PUNCT
tagged_tokens: Zechciałbyś_VERB ._PUNCTD) tokens: - Bardzo proszę .
tags: PUNCT ADV VERB PUNCT
tagged_tokens: -_PUNCT Bardzo_ADV proszę_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Niezmiernie upraszam .
tags: ADV VERB PUNCT
tagged_tokens: Niezmiernie_ADV upraszam_VERB ._PUNCT

B) tokens: Z całego serca proszę .
tags: PREP ADJ NOUN VERB PUNCT
tagged_tokens: Z_PREP całego_ADJ serca_NOUN proszę_VERB ._PUNCT

C) tokens: Usilnie zachęcam .
tags: ADV VERB PUNCT
tagged_tokens: Usilnie_ADV zachęcam_VERB ._PUNCTD) tokens: Bardzo proszę .
tags: ADV VERB PUNCT
tagged_tokens: Bardzo_ADV proszę_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Ogromnie się poruszyła m .
tags: ADV PRON VERB AUX PUNCT
tagged_tokens: Ogromnie_ADV się_PRON poruszyła_VERB m_AUX ._PUNCT

B) tokens: Niezmiernie się rozbudziła m .
tags: ADV PRON VERB AUX PUNCT
tagged_tokens: Niezmiernie_ADV się_PRON rozbudziła_VERB m_AUX ._PUNCT

C) tokens: Nadzwyczaj się  przejęła m .
tags: ADV PRON VERB AUX PUNCT
tagged_tokens: Nadzwyczaj_ADV się_PRON  przejęła_VERB m_AUX ._PUNCTD) tokens: Bardzo się wzruszyła m .
tags: ADV PRON VERB AUX PUNCT
tagged_tokens: Bardzo_ADV się_PRON wzruszyła_VERB m_AUX ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Niesamowicie się z Justyną kłócił .
tags: ADV PRON ADP PROPN VERB PUNCT
tagged_tokens: Niesamowicie_ADV się_PRON z_ADP Justyną_PROPN kłócił_VERB ._PUNCT

B) tokens: Ciężko się z Justynką sprzeczał .
tags: ADV PRON ADP PROPN VERB PUNCT
tagged_tokens: Ciężko_ADV się_PRON z_ADP Justynką_PROPN sprzeczał_VERB ._PUNCT

C) tokens: Zawzięcie się z Justyną zwadył .
tags: ADV PRON ADP PROPN VERB PUNCT
tagged_tokens: Zawzięcie_ADV się_PRON z_ADP Justyną_PROPN zwadył_VERB ._PUNCTD) tokens: Bardzo się z Justynką waśnił .
tags: ADV PRON ADP PROPN VERB PUNCT
tagged_tokens: Bardzo_ADV się_PRON z_ADP Justynką_PROPN waśnił_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Akumulator został obmurowany w murze , a odbiornik zakopano w desce sufitowej w dokładnie ukrytym zagłębieniu .
tags: NOUN AUX ADJ ADP NOUN PUNCT CCONJ NOUN VERB ADP NOUN ADJ ADP ADV ADJ NOUN PUNCT
tagged_tokens: Akumulator_NOUN został_AUX obmurowany_ADJ w_ADP murze_NOUN ,_PUNCT a_CCONJ odbiornik_NOUN zakopano_VERB w_ADP desce_NOUN sufitowej_ADJ w_ADP dokładnie_ADV ukrytym_ADJ zagłębieniu_NOUN ._PUNCT

B) tokens: Źródło zostało osłonięte w ściance , a aparat schowano w legarze stropowym w precyzyjnie zatuszowanym otworze .
tags: NOUN AUX ADJ ADP NOUN PUNCT CCONJ NOUN VERB ADP NOUN ADJ ADP ADV ADJ NOUN PUNCT
tagged_tokens: Źródło_NOUN zostało_AUX osłonięte_ADJ w_ADP ściance_NOUN ,_PUNCT a_CCONJ aparat_NOUN schowano_VERB w_ADP legarze_NOUN stropowym_ADJ w_ADP precyzyjnie_ADV zatuszowanym_ADJ otworze_NOUN ._PUNCT

C) tokens: Zasilacz został przykryty w tynku , a nadajnik ukryto w beli podsufitowej w starannie skrytym wnętrzu .
tags: NOUN AUX ADJ ADP NOUN PUNCT CCONJ NOUN VERB ADP NOUN ADJ ADP ADV ADJ NOUN PUNCT
tagged_tokens: Zasilacz_NOUN został_AUX przykryty_ADJ w_ADP tynku_NOUN ,_PUNCT a_CCONJ nadajnik_NOUN ukryto_VERB w_ADP beli_NOUN podsufitowej_ADJ w_ADP starannie_ADV skrytym_ADJ wnętrzu_NOUN ._PUNCTD) tokens: Bateria została zamurowana w ścianie , a radio umieszczono w belce stropowej w starannie zamaskowanym wgłębieniu .
tags: NOUN AUX ADJ ADP NOUN PUNCT CCONJ NOUN VERB ADP NOUN ADJ ADP ADV ADJ NOUN PUNCT
tagged_tokens: Bateria_NOUN została_AUX zamurowana_ADJ w_ADP ścianie_NOUN ,_PUNCT a_CCONJ radio_NOUN umieszczono_VERB w_ADP belce_NOUN stropowej_ADJ w_ADP starannie_ADV zamaskowanym_ADJ wgłębieniu_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""A""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Batyra przymuszał ją mocą zrywać z noszy , a Helka , odwrotnie , nawet nie podejść do ojca .
tags: PROPN VERB PRON NOUN VERB ADP NOUN PUNCT CCONJ PROPN PUNCT ADV PUNCT PART PART VERB ADP NOUN PUNCT
tagged_tokens: Batyra_PROPN przymuszał_VERB ją_PRON mocą_NOUN zrywać_VERB z_ADP noszy_NOUN ,_PUNCT a_CCONJ Helka_PROPN ,_PUNCT odwrotnie_ADV ,_PUNCT nawet_PART nie_PART podejść_VERB do_ADP ojca_NOUN ._PUNCT

B) tokens: Batyra zmuszał ją siłę urywać od noszy , a Helka , na odwrót , nawet nie podchodzić do ojca .
tags: PROPN VERB PRON NOUN VERB ADP NOUN PUNCT CCONJ PROPN PUNCT ADP NOUN PUNCT PART PART VERB ADP NOUN PUNCT
tagged_tokens: Batyra_PROPN zmuszał_VERB ją_PRON siłę_NOUN urywać_VERB od_ADP noszy_NOUN ,_PUNCT a_CCONJ Helka_PROPN ,_PUNCT na_ADP odwrót_NOUN ,_PUNCT nawet_PART nie_PART podchodzić_VERB do_ADP ojca_NOUN ._PUNCT

C) tokens: Batyra wymuszał ją mocą odczepiać od noszy , a Helka , wręcz , nawet nie przybliżyć się do ojca .
tags: PROPN VERB PRON NOUN VERB ADP NOUN PUNCT CCONJ PROPN PUNCT ADV PUNCT PART PART VERB ADP NOUN PUNCT
tagged_tokens: Batyra_PROPN wymuszał_VERB ją_PRON mocą_NOUN odczepiać_VERB od_ADP noszy_NOUN ,_PUNCT a_CCONJ Helka_PROPN ,_PUNCT wręcz_ADV ,_PUNCT nawet_PART nie_PART przybliżyć_VERB się_ADP ojca_NOUN ._PUNCTD) tokens: Batyra musiał ją siłą odrywać od noszy , a Helka , przeciwnie , nawet nie podeszła do ojca .
tags: PROPN VERB PRON NOUN VERB ADP NOUN PUNCT CCONJ PROPN PUNCT ADV PUNCT PART PART VERB ADP NOUN PUNCT
tagged_tokens: Batyra_PROPN musiał_VERB ją_PRON siłą_NOUN odrywać_VERB od_ADP noszy_NOUN ,_PUNCT a_CCONJ Helka_PROPN ,_PUNCT przeciwnie_ADV ,_PUNCT nawet_PART nie_PART podeszła_VERB do_ADP ojca_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Obawiał em się , iż nie umiem zatroszczyć się o rodzinę .
tags: VERB AUX PRON PUNCT SCONJ PART VERB VERB PRON ADP NOUN PUNCT
tagged_tokens: Obawiał_VERB em_AUX się_PRON ,_PUNCT iż_SCONJ nie_PART umiem_VERB zatroszczyć_VERB się_PRON o_ADP rodzinę_NOUN ._PUNCT

B) tokens: Lękał em się , że nie mogę dbać o rodzinę .
tags: VERB AUX PRON PUNCT SCONJ PART VERB VERB ADP NOUN PUNCT
tagged_tokens: Lękał_VERB em_AUX się_PRON ,_PUNCT że_SCONJ nie_PART mogę_VERB dbać_VERB o_ADP rodzinę_NOUN ._PUNCT

C) tokens: Przerażał em się , że nie jestem zdolny troszczyć się o rodzinę .
tags: VERB AUX PRON PUNCT SCONJ PART VERB ADJ VERB PRON ADP NOUN PUNCT
tagged_tokens: Przerażał_VERB em_AUX się_PRON ,_PUNCT że_SCONJ nie_PART jestem_VERB zdolny_ADJ troszczyć_VERB się_PRON o_ADP rodzinę_NOUN ._PUNCTD) tokens: Bał em się , że nie potrafię zadbać o rodzinę .
tags: VERB AUX PRON PUNCT SCONJ PART VERB VERB ADP NOUN PUNCT
tagged_tokens: Bał_VERB em_AUX się_PRON ,_PUNCT że_SCONJ nie_PART potrafię_VERB zadbać_VERB o_ADP rodzinę_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Beata zaparła się .
tags: PROPN VERB PUNCT
tagged_tokens: Beata_PROPN zaparła_VERB się_PART ._PUNCT

B) tokens: Beata odmówiła .
tags: PROPN VERB PUNCT
tagged_tokens: Beata_PROPN odmówiła_VERB ._PUNCT

C) tokens: Beata zdementowała .
tags: PROPN VERB PUNCT
tagged_tokens: Beata_PROPN zdementowała_VERB ._PUNCTD) tokens: Beata zaprzeczyła .
tags: PROPN VERB PUNCT
tagged_tokens: Beata_PROPN zaprzeczyła_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Rozgwieżdżone niebo oczarowuje gwiazdami .
tags: ADJ NOUN VERB NOUN PUNCT
tagged_tokens: Rozgwieżdżone_ADJ niebo_NOUN oczarowuje_VERB gwiazdami_NOUN ._PUNCT

B) tokens: Bezchmurkowe niebo fascynuje gwiazdami .
tags: ADJ NOUN VERB NOUN PUNCT
tagged_tokens: Bezchmurkowe_ADJ niebo_NOUN fascynuje_VERB gwiazdami_NOUN ._PUNCT

C) tokens: Czyste niebo hipnotyzuje gwiazdami .
tags: ADJ NOUN VERB NOUN PUNCT
tagged_tokens: Czyste_ADJ niebo_NOUN hipnotyzuje_VERB gwiazdami_NOUN ._PUNCTD) tokens: Bezchmurne niebo czaruje gwiazdami .
tags: ADJ NOUN VERB NOUN PUNCT
tagged_tokens: Bezchmurne_ADJ niebo_NOUN czaruje_VERB gwiazdami_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Bezużyteczność wykazuje się w niektórych okolicznościach lepsza niż sprzeciw , zatem dobrze jest ją od czasu do czasu okazywać .
tags: NOUN VERB PRON ADP ADJ NOUN ADJ ADP NOUN PUNCT ADV VERB PRON ADP NOUN ADP NOUN VERB PUNCT
tagged_tokens: Bezużyteczność_NOUN wykazuje_VERB się_PRON w_ADP niektórych_ADJ okolicznościach_NOUN lepsza_ADJ niż_ADP sprzeciw_NOUN ,_PUNCT zatem_ADV dobrze_VERB jest_VERB ją_PRON od_ADP czasu_NOUN do_ADP czasu_NOUN okazywać_VERB ._PUNCT

B) tokens: Bezsilność ukazuje się w konkretnych sprawach efektywniejsza niż odmowa , z tego powodu należy ją co jakiś czas demonstrować .
tags: NOUN VERB PRON ADP ADJ NOUN ADJ ADP NOUN PUNCT ADP DET NOUN VERB PRON NOUN ADV VERB PUNCT
tagged_tokens: Bezsilność_NOUN ukazuje_VERB się_PRON w_ADP konkretnych_ADJ sprawach_NOUN efektywniejsza_ADJ niż_ADP odmowa_NOUN ,_PUNCT z_ADP tego_DET powodu_NOUN należy_VERB ją_PRON co_NOUN jakiś_ADV czas_NOUN demonstrować_VERB ._PUNCT

C) tokens: Nieporadność ujawnia się w określonych przypadkach skuteczniejsza niż bunt , dlatego też powinno się ją raz na jakiś czas eksponować .
tags: NOUN VERB PRON ADP ADJ NOUN ADJ ADP NOUN PUNCT ADV ADV VERB PRON NOUN ADP NOUN VERB PUNCT
tagged_tokens: Nieporadność_NOUN ujawnia_VERB się_PRON w_ADP określonych_ADJ przypadkach_NOUN skuteczniejsza_ADJ niż_ADP bunt_NOUN ,_PUNCT dlatego_ADV też_ADV powinno_VERB się_PRON ją_PRON raz_NOUN na_ADP jakiś_ADV czas_NOUN eksponować_VERB ._PUNCTD) tokens: Bezradność okazuje się w pewnych sytuacjach skuteczniejsza niż opór , dlatego warto ją czasem manifestować .
tags: NOUN VERB PRON ADP DET NOUN ADJ ADP NOUN PUNCT ADV VERB PRON NOUN VERB PUNCT
tagged_tokens: Bezradność_NOUN okazuje_VERB się_PRON w_ADP pewnych_DET sytuacjach_NOUN skuteczniejsza_ADJ niż_ADP opór_NOUN ,_PUNCT dlatego_ADV warto_VERB ją_PRON czasem_NOUN manifestować_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Miednica musi być wychylona do tyłu .
tags: NOUN VERB AUX ADJ ADP NOUN PUNCT
tagged_tokens: Miednica_NOUN musi_VERB być_AUX wychylona_ADJ do_ADP tyłu_NOUN ._PUNCT

B) tokens: Kość biodrowa powinna być nachylona do tyłu .
tags: NOUN ADJ VERB AUX ADJ ADP NOUN PUNCT
tagged_tokens: Kość_NOUN biodrowa_ADJ powinna_VERB być_AUX nachylona_ADJ do_ADP tyłu_NOUN ._PUNCT

C) tokens: Biodra należy odchylić do tyłu .
tags: NOUN VERB VERB ADP NOUN PUNCT
tagged_tokens: Biodra_NOUN należy_VERB odchylić_VERB do_ADP tyłu_NOUN ._PUNCTD) tokens: Biodra powinny być odchylone do tyłu .
tags: NOUN VERB AUX ADJ ADP NOUN PUNCT
tagged_tokens: Biodra_NOUN powinny_VERB być_AUX odchylone_ADJ do_ADP tyłu_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: - Ponieważ zgaduję , że również pan pochodzi z oddziału akowskiego .
tags: PUNCT SCONJ VERB PUNCT SCONJ ADV NOUN VERB ADP NOUN ADJ PUNCT
tagged_tokens: -_PUNCT Ponieważ_SCONJ zgaduję_VERB ,_PUNCT że_SCONJ również_ADV pan_NOUN pochodzi_VERB z_ADP oddziału_NOUN akowskiego_ADJ ._PUNCT

B) tokens: - Gdyż przypuszczam , że także pan wywodzi się z formacji akowskiej .
tags: PUNCT SCONJ VERB PUNCT SCONJ RCONJ NOUN VERB PRON ADP NOUN ADJ PUNCT
tagged_tokens: -_PUNCT Gdyż_SCONJ przypuszczam_VERB ,_PUNCT że_SCONJ także_RCONJ pan_NOUN wywodzi_VERB się_PRON z_ADP formacji_NOUN akowskiej_ADJ ._PUNCT

C) tokens: - Albowiem domniemywam , że i pan pochodzi z zespołu akowskiego .
tags: PUNCT SCONJ VERB PUNCT SCONJ PART NOUN VERB ADP NOUN ADJ PUNCT
tagged_tokens: -_PUNCT Albowiem_SCONJ domniemywam_VERB ,_PUNCT że_SCONJ i_PART pan_NOUN pochodzi_VERB z_ADP zespołu_NOUN akowskiego_ADJ ._PUNCTD) tokens: - Bo domyślam się , że i pan wywodzi się z partyzantki akowskiej .
tags: PUNCT SCONJ VERB PRON PUNCT SCONJ PART NOUN VERB PRON ADP NOUN ADJ PUNCT
tagged_tokens: -_PUNCT Bo_SCONJ domyślam_VERB się_PRON ,_PUNCT że_SCONJ i_PART pan_NOUN wywodzi_VERB się_PRON z_ADP partyzantki_NOUN akowskiej_ADJ ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Bezsilność ujawnia się w niektórych przypadkach lepsza niż bunt , więc dobrze ją niekiedy demonstrować .
tags: NOUN VERB PRON ADP DET NOUN ADJ ADP NOUN PUNCT ADV ADV PRON ADV VERB PUNCT
tagged_tokens: Bezsilność_NOUN ujawnia_VERB się_PRON w_ADP niektórych_DET przypadkach_NOUN lepsza_ADJ niż_ADP bunt_NOUN ,_PUNCT więc_ADV dobrze_ADV ją_PRON niekiedy_ADV demonstrować_VERB ._PUNCT

B) tokens: Impotencja objawia się w określonych sytuacjach efektywniejsza niż sprzeciw , zatem warto ją czasami pokazywać .
tags: NOUN VERB PRON ADP DET NOUN ADJ ADP NOUN PUNCT CONJ VERB PRON NOUN VERB PUNCT
tagged_tokens: Impotencja_NOUN objawia_VERB się_PRON w_ADP określonych_DET sytuacjach_NOUN efektywniejsza_ADJ niż_ADP sprzeciw_NOUN ,_PUNCT zatem_CONJ warto_VERB ją_PRON czasami_NOUN pokazywać_VERB ._PUNCT

C) tokens: Znużenie pokazuje się w konkretnych sprawach wydajniejsza niż opozycja , toteż dobrze ją sporadycznie eksponować .
tags: NOUN VERB PRON ADP DET NOUN ADJ ADP NOUN PUNCT CONJ ADV PRON ADV VERB PUNCT
tagged_tokens: Znużenie_NOUN pokazuje_VERB się_PRON w_ADP konkretnych_DET sprawach_NOUN wydajniejsza_ADJ niż_ADP opozycja_NOUN ,_PUNCT toteż_CONJ dobrze_ADV ją_PRON sporadycznie_ADV eksponować_VERB ._PUNCTD) tokens: Bezradność okazuje się w pewnych sytuacjach skuteczniejsza niż opór , dlatego warto ją czasem manifestować .
tags: NOUN VERB PRON ADP DET NOUN ADJ ADP NOUN PUNCT ADV VERB PRON NOUN VERB PUNCT
tagged_tokens: Bezradność_NOUN okazuje_VERB się_PRON w_ADP pewnych_DET sytuacjach_NOUN skuteczniejsza_ADJ niż_ADP opór_NOUN ,_PUNCT dlatego_ADV warto_VERB ją_PRON czasem_NOUN manifestować_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Biodra muszą być odsunięte do tyłu .
tags: NOUN VERB AUX VERB ADP NOUN PUNCT
tagged_tokens: Biodra_NOUN muszą_VERB być_AUX odsunięte_VERB do_ADP tyłu_NOUN ._PUNCT

B) tokens: Biodra winny być cofnięte do tyłu .
tags: NOUN VERB AUX VERB ADP NOUN PUNCT
tagged_tokens: Biodra_NOUN winny_VERB być_AUX cofnięte_VERB do_ADP tyłu_NOUN ._PUNCT

C) tokens: Biodra należy być odciągnięte do tyłu .
tags: NOUN VERB AUX VERB ADP NOUN PUNCT
tagged_tokens: Biodra_NOUN należy_VERB być_AUX odciągnięte_VERB do_ADP tyłu_NOUN ._PUNCTD) tokens: Biodra powinny być odchylone do tyłu .
tags: NOUN VERB AUX ADJ ADP NOUN PUNCT
tagged_tokens: Biodra_NOUN powinny_VERB być_AUX odchylone_ADJ do_ADP tyłu_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: - Gdyż przypuszczam , że i pan pochodzi z akowskiej partyzantki .
tags: PUNCT ADV VERB PUNCT SCONJ PART NOUN VERB ADP ADJ NOUN PUNCT
tagged_tokens: -_PUNCT Gdyż_ADV przypuszczam_VERB ,_PUNCT że_SCONJ i_PART pan_NOUN pochodzi_VERB z_ADP akowskiej_ADJ partyzantki_NOUN ._PUNCT

B) tokens: - Skoro zakładam , że i pan należy do partyzantki akowskiej .
tags: PUNCT CONJ VERB PUNCT SCONJ PART NOUN VERB ADP NOUN ADJ PUNCT
tagged_tokens: -_PUNCT Skoro_CONJ zakładam_VERB ,_PUNCT że_SCONJ i_PART pan_NOUN należy_VERB do_ADP partyzantki_NOUN akowskiej_ADJ ._PUNCT

C) tokens: - Bowiem zgaduję , że i pan jest z akowskiego ruchu oporu .
tags: PUNCT CONJ VERB PUNCT SCONJ PART NOUN VERB ADP ADJ NOUN NOUN PUNCT
tagged_tokens: -_PUNCT Bowiem_CONJ zgaduję_VERB ,_PUNCT że_SCONJ i_PART pan_NOUN jest_VERB z_ADP akowskiego_ADJ ruchu_NOUN oporu_NOUN ._PUNCTD) tokens: - Bo domyślam się , że i pan wywodzi się z partyzantki akowskiej .
tags: PUNCT SCONJ VERB PRON PUNCT SCONJ PART NOUN VERB PRON ADP NOUN ADJ PUNCT
tagged_tokens: -_PUNCT Bo_SCONJ domyślam_VERB się_PRON ,_PUNCT że_SCONJ i_PART pan_NOUN wywodzi_VERB się_PRON z_ADP partyzantki_NOUN akowskiej_ADJ ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
