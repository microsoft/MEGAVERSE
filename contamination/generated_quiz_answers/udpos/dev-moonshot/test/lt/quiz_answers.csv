answer,prompt
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Nepraraskite proto nuo skausmo
tags: VERB VERB ADP NOUN
tagged_tokens: Nepraraskite_VERB proto_VERB nuo_ADP skausmo_NOUN

B) tokens: Nebūkite kankinami galvos spengimo
tags: VERB VERB ADJ NOUN
tagged_tokens: Nebūkite_VERB kankinami_VERB galvos_ADJ spengimo_NOUN

C) tokens: Nekelkite galvai skausmingo pojūčio
tags: VERB NOUN ADJ NOUN
tagged_tokens: Nekelkite_VERB galvai_NOUN skausmingo_ADJ pojūčio_NOUND) tokens: Nekentėkite galvos skausmo
tags: VERB NOUN NOUN
tagged_tokens: Nekentėkite_VERB galvos_NOUN skausmo_NOUN
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Medikė rezidentė Lina Mozūraitė
tags: NOUN NOUN PROPN PROPN
tagged_tokens: Medikė_NOUN rezidentė_NOUN Lina_PROPN Mozūraitė_PROPN

B) tokens: Gydytoja aspirantė Lina Mozūraitė
tags: NOUN NOUN PROPN PROPN
tagged_tokens: Gydytoja_NOUN aspirantė_NOUN Lina_PROPN Mozūraitė_PROPN

C) tokens: Daktarė rezidentė Lina Mozūraitė
tags: NOUN NOUN PROPN PROPN
tagged_tokens: Daktarė_NOUN rezidentė_NOUN Lina_PROPN Mozūraitė_PROPND) tokens: Gydytoja rezidentė Lina Mozūraitė
tags: NOUN NOUN PROPN PROPN
tagged_tokens: Gydytoja_NOUN rezidentė_NOUN Lina_PROPN Mozūraitė_PROPN
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Kokios būna galvijos svaigalės ?
tags: DET AUX NOUN NOUN PUNCT
tagged_tokens: Kokios_DET būna_AUX galvijos_NOUN svaigalės_NOUN ?_PUNCT

B) tokens: Kokie yra smegenų skauduliai ?
tags: DET VERB NOUN NOUN PUNCT
tagged_tokens: Kokie_DET yra_VERB smegenų_NOUN skauduliai_NOUN ?_PUNCT

C) tokens: Kokia galima patirti galvos duobės ?
tags: DET VERB VERB NOUN PUNCT
tagged_tokens: Kokia_DET galima_VERB patirti_VERB galvos_NOUN duobės_NOUN ?_PUNCTD) tokens: Kokie gali būti galvos skausmai ?
tags: DET VERB AUX NOUN NOUN PUNCT
tagged_tokens: Kokie_DET gali_VERB būti_AUX galvos_NOUN skausmai_NOUN ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: 1 . Būdingieji .
tags: NUM PUNCT ADJ PUNCT
tagged_tokens: 1_NUM ._PUNCT Būdingieji_ADJ ._PUNCT

B) tokens: 1 . Pradmenys .
tags: NUM PUNCT ADJ PUNCT
tagged_tokens: 1_NUM ._PUNCT Pradmenys_ADJ ._PUNCT

C) tokens: 1 . Elementarūs .
tags: NUM PUNCT ADJ PUNCT
tagged_tokens: 1_NUM ._PUNCT Elementarūs_ADJ ._PUNCTD) tokens: 1 . Pirminiai .
tags: NUM PUNCT ADJ PUNCT
tagged_tokens: 1_NUM ._PUNCT Pirminiai_ADJ ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Tai tokie smegenų sutrikimai , kai trūksta aiškių negalavimų ir audinių anomalijų , kurios galėtų juos lemti .
tags: DET DET NOUN NOUN PUNCT SCONJ VERB ADJ NOUN CCONJ NOUN NOUN PUNCT PRON VERB PRON VERB PUNCT
tagged_tokens: Tai_DET tokie_DET smegenų_NOUN sutrikimai_NOUN ,_PUNCT kai_SCONJ trūksta_VERB aiškių_ADJ negalavimų_NOUN ir_CCONJ audinių_NOUN anomalijų_NOUN ,_PUNCT kurios_PRON galėtų_VERB juos_PRON lemti_VERB ._PUNCT

B) tokens: Tai tokie galvos malonai , kai nebūna ryškių simptomų ir ląstelių pokyčių , kuriems jie būtų atsiradę .
tags: DET DET NOUN NOUN PUNCT SCONJ VERB ADJ NOUN CCONJ NOUN NOUN PUNCT PRON PRON VERB VERB PUNCT
tagged_tokens: Tai_DET tokie_DET galvos_NOUN malonai_NOUN ,_PUNCT kai_SCONJ nebūna_VERB ryškių_ADJ simptomų_NOUN ir_CCONJ ląstelių_NOUN pokyčių_NOUN ,_PUNCT kuriems_PRON jie_PRON būtų_VERB atsiradę_VERB ._PUNCT

C) tokens: Tai tokie galvos žvilgsniai , kai neturi aiškaus priežasčių ir struktūrų pažeidimų , dėl kurių jie kiltų .
tags: DET DET NOUN NOUN PUNCT SCONJ VERB ADJ NOUN CCONJ NOUN NOUN PUNCT ADP PRON PRON VERB PUNCT
tagged_tokens: Tai_DET tokie_DET galvos_NOUN žvilgsniai_NOUN ,_PUNCT kai_SCONJ neturi_VERB aiškaus_ADJ priežasčių_NOUN ir_CCONJ struktūrų_NOUN pažeidimų_NOUN ,_PUNCT dėl_ADP kurių_PRON jie_PRON kiltų_VERB ._PUNCTD) tokens: Tai tokie galvos skausmai , kai nėra akivaizdžių ligų ir organinių pakitimų , galinčių juos sukelti .
tags: DET DET NOUN NOUN PUNCT SCONJ VERB ADJ NOUN CCONJ ADJ NOUN PUNCT VERB PRON VERB PUNCT
tagged_tokens: Tai_DET tokie_DET galvos_NOUN skausmai_NOUN ,_PUNCT kai_SCONJ nėra_VERB akivaizdžių_ADJ ligų_NOUN ir_CCONJ organinių_ADJ pakitimų_NOUN ,_PUNCT galinčių_VERB juos_PRON sukelti_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Jie yra linkę pasikartoti .
tags: PRON AUX VERB VERB PUNCT
tagged_tokens: Jie_PRON yra_AUX linkę_VERB pasikartoti_VERB ._PUNCT

B) tokens: Jie dažnai kartoja save .
tags: PRON ADV VERB PRON PUNCT
tagged_tokens: Jie_PRON dažnai_ADV kartoja_VERB save_PRON ._PUNCT

C) tokens: Jie turi polinkį kartoti savo veiksmus .
tags: PRON VERB NOUN VERB ADJ NOUN PUNCT
tagged_tokens: Jie_PRON turi_VERB polinkį_NOUN kartoti_VERB savo_ADJ veiksmus_NOUN ._PUNCTD) tokens: Jie linkę kartotis .
tags: PRON VERB VERB PUNCT
tagged_tokens: Jie_PRON linkę_VERB kartotis_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Šiuo plėtiniu tenka trys kategorijos – migrena , įtampų rūšies ir grupiniai galvos skausmai .
tags: DET NOUN VERB NUM NOUN PUNCT NOUN PUNCT NOUN NOUN CCONJ ADJ NOUN NOUN PUNCT
tagged_tokens: Šiuo_DET plėtiniu_NOUN tenka_VERB trys_NUM kategorijos_NOUN –_PUNCT migrena_NOUN ,_PUNCT įtampų_NOUN rūšies_NOUN ir_CCONJ grupiniai_ADJ galvos_NOUN skausmai_NOUN ._PUNCT

B) tokens: Šiai grupei būdingos trys klasės – migrena , įtempimo tipo ir kuopiniai galvos skausmai .
tags: DET NOUN ADJ NUM NOUN PUNCT NOUN PUNCT NOUN NOUN CCONJ ADJ NOUN NOUN PUNCT
tagged_tokens: Šiai_DET grupei_NOUN būdingos_ADJ trys_NUM klasės_NOUN –_PUNCT migrena_NOUN ,_PUNCT įtempimo_NOUN tipo_NOUN ir_CCONJ kuopiniai_ADJ galvos_NOUN skausmai_NOUN ._PUNCT

C) tokens: Šiai grupei priskirtinos trys grupės – migrena , įtempių tipas ir klūkiai galvos skausmai .
tags: DET NOUN VERB NUM NOUN PUNCT NOUN PUNCT NOUN NOUN CCONJ NOUN NOUN NOUN PUNCT
tagged_tokens: Šiai_DET grupei_NOUN priskirtinos_VERB trys_NUM grupės_NOUN –_PUNCT migrena_NOUN ,_PUNCT įtempių_NOUN tipas_NOUN ir_CCONJ klūkiai_NOUN galvos_NOUN skausmai_NOUN ._PUNCTD) tokens: Šiai grupei priklauso trys rūšys – migrena , įtampos tipo ir klasteriniai galvos skausmai .
tags: DET NOUN VERB NUM NOUN PUNCT NOUN PUNCT NOUN NOUN CCONJ ADJ NOUN NOUN PUNCT
tagged_tokens: Šiai_DET grupei_NOUN priklauso_VERB trys_NUM rūšys_NOUN –_PUNCT migrena_NOUN ,_PUNCT įtampos_NOUN tipo_NOUN ir_CCONJ klasteriniai_ADJ galvos_NOUN skausmai_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: 2 . Šalutiniai .
tags: NUM PUNCT ADJ PUNCT
tagged_tokens: 2_NUM ._PUNCT Šalutiniai_ADJ ._PUNCT

B) tokens: 2 . Papildomi .
tags: NUM PUNCT ADJ PUNCT
tagged_tokens: 2_NUM ._PUNCT Papildomi_ADJ ._PUNCT

C) tokens: 2 . Kitiniai .
tags: NUM PUNCT ADJ PUNCT
tagged_tokens: 2_NUM ._PUNCT Kitiniai_ADJ ._PUNCTD) tokens: 2 . Antriniai .
tags: NUM PUNCT ADJ PUNCT
tagged_tokens: 2_NUM ._PUNCT Antriniai_ADJ ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Jų sukelia koks nors tam tikras organinis sutrikimas ir tuo metu galvos skausmas yra vien tam tikros ligos ženklas .
tags: PRON VERB DET X DET ADJ ADJ NOUN CCONJ DET NOUN NOUN NOUN AUX PART DET X NOUN NOUN PUNCT
tagged_tokens: Jų_PRON sukelia_VERB koks_DET nors_X tam_DET tikras_ADJ organinis_ADJ sutrikimas_NOUN ir_CCONJ tuo_DET metu_NOUN galvos_NOUN skausmas_NOUN yra_AUX vien_PART tam_DET tikros_X ligos_NOUN ženklas_NOUN ._PUNCT

B) tokens: Juos provokuoja kas nors aiškus organinis pažeidimas ir tokiu atveju galvos skausmas yra tik tam tikros ligos požymis .
tags: PRON VERB DET X ADJ ADJ NOUN CCONJ DET NOUN NOUN NOUN AUX PART PRON X NOUN NOUN PUNCT
tagged_tokens: Juos_PRON provokuoja_VERB kas_DET nors_X aiškus_ADJ organinis_ADJ pažeidimas_NOUN ir_CCONJ tokiu_DET atveju_NOUN galvos_NOUN skausmas_NOUN yra_AUX tik_PART tam_PRON tikros_X ligos_NOUN požymis_NOUN ._PUNCT

C) tokens: Juos lemia kuris nors konkrečius organinis defektas ir šiuo momentu galvos skausmas yra tik tam tikros ligos signalas .
tags: PRON VERB DET X ADJ ADJ NOUN CCONJ DET NOUN NOUN NOUN AUX PART PRON X NOUN NOUN PUNCT
tagged_tokens: Juos_PRON lemia_VERB kuris_DET nors_X konkrečius_ADJ organinis_ADJ defektas_NOUN ir_CCONJ šiuo_DET momentu_NOUN galvos_NOUN skausmas_NOUN yra_AUX tik_PART tam_PRON tikros_X ligos_NOUN signalas_NOUN ._PUNCTD) tokens: Juos sukelia kokia nors konkreti organinė patologija ir šiuo atveju galvos skausmas yra tik tam tikros ligos simptomas .
tags: PRON VERB DET X ADJ ADJ NOUN CCONJ DET NOUN NOUN NOUN AUX PART PRON X NOUN NOUN PUNCT
tagged_tokens: Juos_PRON sukelia_VERB kokia_DET nors_X konkreti_ADJ organinė_ADJ patologija_NOUN ir_CCONJ šiuo_DET atveju_NOUN galvos_NOUN skausmas_NOUN yra_AUX tik_PART tam_PRON tikros_X ligos_NOUN simptomas_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Kokiu atveju galvos skausmas kelia nerimą ?
tags: ADV NOUN NOUN VERB NOUN PUNCT
tagged_tokens: Kokiu_ADV atveju_NOUN galvos_NOUN skausmas_NOUN kelia_VERB nerimą_NOUN ?_PUNCT

B) tokens: Kada reikia nerimauti dėl galvos skausmų ?
tags: ADV VERB VERB ADP NOUN NOUN PUNCT
tagged_tokens: Kada_ADV reikia_VERB nerimauti_VERB dėl_ADP galvos_NOUN skausmų_NOUN ?_PUNCT

C) tokens: Kai galvos skausmas tampa grėsme ?
tags: ADV NOUN NOUN VERB NOUN PUNCT
tagged_tokens: Kai_ADV galvos_NOUN skausmas_NOUN tampa_VERB grėsme_NOUN ?_PUNCTD) tokens: Kada galvos skausmas yra pavojingas ?
tags: ADV NOUN NOUN AUX ADJ PUNCT
tagged_tokens: Kada_ADV galvos_NOUN skausmas_NOUN yra_AUX pavojingas_ADJ ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Jei kaktos skausmų išsirito > 50 metų amžiuje .
tags: SCONJ NOUN NOUN VERB SYM NUM NOUN NOUN PUNCT
tagged_tokens: Jei_SCONJ kaktos_NOUN skausmų_NOUN išsirito_VERB >_SYM 50_NUM metų_NOUN amžiuje_NOUN ._PUNCT

B) tokens: Kad smegenų skausmai prasidėjau > 50 metai amžiaus .
tags: SCONJ NOUN NOUN VERB SYM NUM NOUN NOUN PUNCT
tagged_tokens: Kad_SCONJ smegenų_NOUN skausmai_NOUN prasidėjau_VERB >_SYM 50_NUM metai_NOUN amžiaus_NOUN ._PUNCT

C) tokens: Jog galvos skausmų atsirado > 50 metų amžiuje .
tags: SCONJ NOUN NOUN VERB SYM NUM NOUN NOUN PUNCT
tagged_tokens: Jog_SCONJ galvos_NOUN skausmų_NOUN atsirado_VERB >_SYM 50_NUM metų_NOUN amžiuje_NOUN ._PUNCTD) tokens: Jeigu galvos skausmai prasidėjo > 50 metų amžiaus .
tags: SCONJ NOUN NOUN VERB SYM NUM NOUN NOUN PUNCT
tagged_tokens: Jeigu_SCONJ galvos_NOUN skausmai_NOUN prasidėjo_VERB >_SYM 50_NUM metų_NOUN amžiaus_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Jei tai galingas , neseniai prasidėjęs smegenų skausmas , kitokio charakterio nei prieš tai .
tags: SCONJ DET ADJ PUNCT ADV VERB NOUN NOUN PUNCT ADJ NOUN SCONJ ADV PUNCT
tagged_tokens: Jei_SCONJ tai_DET galingas_ADJ ,_PUNCT neseniai_ADV prasidėjęs_VERB smegenų_NOUN skausmas_NOUN ,_PUNCT kitokio_ADJ charakterio_NOUN nei_SCONJ prieš_ADV tai_ADV ._PUNCT

B) tokens: Ar tai stipri , paskutiniu metu pasireiškusi galvos spaudimas , skiriasi nuo ankstesnių .
tags: PART DET ADJ PUNCT ADJ NOUN VERB NOUN NOUN PUNCT VERB ADP ADJ PUNCT
tagged_tokens: Ar_PART tai_DET stipri_ADJ ,_PUNCT paskutiniu_ADJ metu_NOUN pasireiškusi_VERB galvos_NOUN spaudimas_NOUN ,_PUNCT skiriasi_VERB nuo_ADP ankstesnių_ADJ ._PUNCT

C) tokens: Kai tai intensyvus , šviežiai atsirandantis galvijos skausmas , kito tipo nei iki tol .
tags: SCONJ DET ADJ PUNCT ADV VERB NOUN NOUN PUNCT ADJ NOUN SCONJ ADV PUNCT
tagged_tokens: Kai_SCONJ tai_DET intensyvus_ADJ ,_PUNCT šviežiai_ADV atsirandantis_VERB galvijos_NOUN skausmas_NOUN ,_PUNCT kito_ADJ tipo_NOUN nei_SCONJ iki_ADV tol_ADV ._PUNCTD) tokens: Jeigu tai stiprus , naujai atsiradęs galvos skausmas , skirtingo pobūdžio nei anksčiau .
tags: SCONJ DET ADJ PUNCT ADV VERB NOUN NOUN PUNCT ADJ NOUN SCONJ ADV PUNCT
tagged_tokens: Jeigu_SCONJ tai_DET stiprus_ADJ ,_PUNCT naujai_ADV atsiradęs_VERB galvos_NOUN skausmas_NOUN ,_PUNCT skirtingo_ADJ pobūdžio_NOUN nei_SCONJ anksčiau_ADV ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Kai pasirodo neilgai po pabudimo ar sužadina iš sapnų .
tags: SCONJ VERB ADV ADP VERB CCONJ VERB ADP NOUN PUNCT
tagged_tokens: Kai_SCONJ pasirodo_VERB neilgai_ADV po_ADP pabudimo_NOUN ar_CCONJ sužadina_VERB iš_ADP sapnų_NOUN ._PUNCT

B) tokens: Jei užklumpa netrukus po atsibudimo ar ištraukia iš miego .
tags: SCONJ VERB ADV ADP NOUN CCONJ VERB ADP NOUN PUNCT
tagged_tokens: Jei_SCONJ užklumpa_VERB netrukus_ADV po_ADP atsibudimo_NOUN ar_CCONJ ištraukia_VERB iš_ADP miego_NOUN ._PUNCT

C) tokens: Kada atsiranda vos po pabudimo ar pažadina iš miego .
tags: SCONJ VERB ADV ADP NOUN CCONJ VERB ADP NOUN PUNCT
tagged_tokens: Kada_SCONJ atsiranda_VERB vos_ADV po_ADP pabudimo_NOUN ar_CCONJ pažadina_VERB iš_ADP miego_NOUN ._PUNCTD) tokens: Jeigu atsiranda tuoj pat atsikėlus po miego ar pažadina iš miego .
tags: SCONJ VERB ADV X VERB ADP NOUN CCONJ VERB ADP NOUN PUNCT
tagged_tokens: Jeigu_SCONJ atsiranda_VERB tuoj_ADV pat_X atsikėlus_VERB po_ADP miego_NOUN ar_CCONJ pažadina_VERB iš_ADP miego_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Jei turėjote padidintą arterinį kraujotakos slėgį .
tags: SCONJ VERB VERB ADJ ADJ NOUN NOUN PUNCT
tagged_tokens: Jei_SCONJ turėjote_VERB padidintą_VERB arterinį_ADJ kraujotakos_ADJ slėgį_NOUN ._PUNCT

B) tokens: Kai būdavo pakilusio arterinio kraujagyslių spaudimo .
tags: SCONJ AUX VERB ADJ ADJ NOUN NOUN PUNCT
tagged_tokens: Kai_SCONJ būdavo_AUX pakilusio_VERB arterinio_ADJ kraujagyslių_ADJ spaudimo_NOUN ._PUNCT

C) tokens: Kad jūsų arterinis kraujos įtampos dydis būdavo didesnis .
tags: SCONJ PRON ADJ NOUN NOUN NOUN AUX VERB ADJ PUNCT
tagged_tokens: Kad_SCONJ jūsų_PRON arterinis_ADJ kraujos_NOUN įtampos_NOUN dydis_NOUN būdavo_AUX didesnis_VERB ._PUNCTD) tokens: Jeigu buvo padidėjęs arterinis kraujo spaudimas .
tags: SCONJ AUX VERB ADJ NOUN NOUN PUNCT
tagged_tokens: Jeigu_SCONJ buvo_AUX padidėjęs_VERB arterinis_ADJ kraujo_NOUN spaudimas_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Jei galvijos skausmynai atsirado dėl smegenų sužalojimo .
tags: SCONJ NOUN NOUN VERB SCONJ NOUN NOUN PUNCT
tagged_tokens: Jei_SCONJ galvijos_NOUN skausmynai_NOUN atsirado_VERB dėl_SCONJ smegenų_NOUN sužalojimo_NOUN ._PUNCT

B) tokens: Kai galūnės skausmingumai iškilo po kaukolės žalos .
tags: SCONJ NOUN NOUN VERB ADP NOUN NOUN PUNCT
tagged_tokens: Kai_SCONJ galūnės_NOUN skausmingumai_NOUN iškilo_VERB po_ADP kaukolės_NOUN žalos_NOUN ._PUNCT

C) tokens: Kad galvutės skaudėjimai pasirodė po galvos pažeidimo .
tags: SCONJ NOUN NOUN VERB ADP NOUN NOUN PUNCT
tagged_tokens: Kad_SCONJ galvutės_NOUN skaudėjimai_NOUN pasirodė_VERB po_ADP galvos_NOUN pažeidimo_NOUN ._PUNCTD) tokens: Jeigu galvos skausmai prasidėjo po galvos traumos .
tags: SCONJ NOUN NOUN VERB ADP NOUN NOUN PUNCT
tagged_tokens: Jeigu_SCONJ galvos_NOUN skausmai_NOUN prasidėjo_VERB po_ADP galvos_NOUN traumos_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Jei skausmingumas nesiliauja po terapijos įgaleriojais skausmą nuraminančiais preparatais .
tags: SCONJ NOUN VERB ADP NOUN ADJ NOUN VERB NOUN PUNCT
tagged_tokens: Jei_SCONJ skausmingumas_NOUN nesiliauja_VERB po_ADP terapijos_NOUN įgaleriojais_ADJ skausmą_NOUN nuraminančiais_VERB preparatais_NOUN ._PUNCT

B) tokens: Kai skausmo pojūtis neišnyksta dėl gydymo standartiniais skausmą slopinančiais medikamentais .
tags: SCONJ NOUN NOUN VERB ADP NOUN ADJ NOUN VERB NOUN PUNCT
tagged_tokens: Kai_SCONJ skausmo_NOUN pojūtis_NOUN neišnyksta_VERB dėl_ADP gydymo_NOUN standartiniais_ADJ skausmą_NOUN slopinančiais_VERB medikamentais_NOUN ._PUNCT

C) tokens: Jeigu skausmo jausmas nepraeina nuo behandlungo įrankiais skausmą palengvinančiais farmaciniais priemonėmis .
tags: SCONJ NOUN NOUN VERB ADP NOUN ADJ NOUN VERB ADJ NOUN PUNCT
tagged_tokens: Jeigu_SCONJ skausmo_NOUN jausmas_NOUN nepraeina_VERB nuo_ADP behandlungo_NOUN įrankiais_ADJ skausmą_NOUN palengvinančiais_VERB farmaciniais_ADJ NOUN priemonėmis_NOUN ._PUNCTD) tokens: Jeigu skausmas nepasiduoda gydymui įprastiniais skausmą malšinančiais vaistais .
tags: SCONJ NOUN VERB NOUN ADJ NOUN VERB NOUN PUNCT
tagged_tokens: Jeigu_SCONJ skausmas_NOUN nepasiduoda_VERB gydymui_NOUN įprastiniais_ADJ skausmą_NOUN malšinančiais_VERB vaistais_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Jei galvos srities skausmas yra kartu su neurologiniais požymiais , sąmoningo ir psichinio būvio pokyčiais .
tags: SCONJ NOUN NOUN NOUN VERB ADV SCONJ ADJ NOUN PUNCT NOUN CCONJ NOUN NOUN NOUN PUNCT
tagged_tokens: Jei_SCONJ galvos_NOUN srities_NOUN skausmas_NOUN yra_VERB kartu_ADV su_SCONJ neurologiniais_ADJ požymiais_NOUN ,_PUNCT sąmoningo_NOUN ir_CCONJ psichinio_NOUN būvio_NOUN pokyčiais_NOUN ._PUNCT

B) tokens: Jog galvos dirglumas susijęs su neurologinėmis apraiškomis , sąmonės lygmens ir psichos funkcijų sutrikimu .
tags: SCONJ NOUN NOUN VERB SCONJ ADJ NOUN PUNCT NOUN NOUN CCONJ NOUN NOUN NOUN PUNCT
tagged_tokens: Jog_SCONJ galvos_NOUN dirglumas_NOUN susijęs_VERB su_SCONJ neurologinėmis_ADJ apraiškomis_NOUN ,_PUNCT sąmonės_NOUN lygmens_NOUN ir_CCONJ psichos_NOUN funkcijų_NOUN sutrikimu_NOUN ._PUNCT

C) tokens: Kad galvos maudimas sietinas su neurologinėm reikšmėm , sąmoningumo ir psichinės būsenos kliūtimis .
tags: SCONJ NOUN NOUN VERB SCONJ ADJ NOUN PUNCT NOUN CCONJ NOUN NOUN NOUN PUNCT
tagged_tokens: Kad_SCONJ galvos_NOUN maudimas_NOUN sietinas_VERB su_SCONJ neurologinėm_ADJ reikšmėm_NOUN ,_PUNCT sąmoningumo_NOUN ir_CCONJ psichinės_NOUN būsenos_NOUN kliūtimis_NOUN ._PUNCTD) tokens: Jeigu galvos skausmą lydi neurologiniai simptomai , sąmonės ir psichikos sutrikimai .
tags: SCONJ NOUN NOUN VERB ADJ NOUN PUNCT NOUN CCONJ NOUN NOUN PUNCT
tagged_tokens: Jeigu_SCONJ galvos_NOUN skausmą_NOUN lydi_VERB neurologiniai_ADJ simptomai_NOUN ,_PUNCT sąmonės_NOUN ir_CCONJ psichikos_NOUN sutrikimai_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Jei šalia pasireiškia sistemos ligų simptomai ( temperatūra , sprandžio raumenų sustingimas , bėrimas ir pan . ) .
tags: SCONJ ADV VERB NOUN NOUN NOUN PUNCT NOUN PUNCT NOUN NOUN NOUN PUNCT NOUN CCONJ X PUNCT PUNCT PUNCT
tagged_tokens: Jei_SCONJ šalia_ADV pasireiškia_VERB sistemos_NOUN ligų_NOUN simptomai_NOUN (_PUNCT temperatūra_NOUN ,_PUNCT sprandžio_NOUN raumenų_NOUN sustingimas_NOUN ,_PUNCT bėrimas_NOUN ir_CCONJ pan_X ._PUNCT )_PUNCT ._PUNCT

B) tokens: Kadangi aplink būna sisteminių ligų požymiai ( karštis , kaklo raumenų standumas , bėrimas ir t . t . ) .
tags: SCONJ ADV VERB ADJ NOUN NOUN PUNCT NOUN PUNCT NOUN NOUN NOUN PUNCT NOUN CCONJ X PUNCT X PUNCT PUNCT PUNCT
tagged_tokens: Kadangi_SCONJ aplink_ADV būna_VERB sisteminių_ADJ ligų_NOUN požymiai_NOUN (_PUNCT karštis_NOUN ,_PUNCT kaklo_NOUN raumenų_NOUN standumas_NOUN ,_PUNCT bėrimas_NOUN ir_CCONJ t_X ._PUNCT t_X ._PUNCT )_PUNCT ._PUNCT

C) tokens: Kai netoli yra sistemos ligos simptomai ( aukšta temperatūra , nugaros raumenų įsitempimas , bėrimas ir panašiai . ) .
tags: SCONJ ADV VERB NOUN NOUN NOUN PUNCT ADJ NOUN PUNCT NOUN NOUN VERB PUNCT NOUN CCONJ ADV PUNCT PUNCT PUNCT
tagged_tokens: Kai_SCONJ netoli_ADV yra_VERB sistemos_NOUN ligos_NOUN simptomai_NOUN (_PUNCT aukšta_ADJ temperatūra_NOUN ,_PUNCT nugaros_NOUN raumenų_NOUN įsitempimas_VERB ,_PUNCT bėrimas_NOUN ir_CCONJ panašiai_ADV ._PUNCT )_PUNCT ._PUNCTD) tokens: Jeigu greta yra sisteminės ligos požymių ( karščiavimas , sprando raumenų rigidiškumas , bėrimas ir kt . ) .
tags: SCONJ ADV VERB ADJ NOUN NOUN PUNCT NOUN PUNCT NOUN NOUN NOUN PUNCT NOUN CCONJ X PUNCT PUNCT PUNCT
tagged_tokens: Jeigu_SCONJ greta_ADV yra_VERB sisteminės_ADJ ligos_NOUN požymių_NOUN (_PUNCT karščiavimas_NOUN ,_PUNCT sprando_NOUN raumenų_NOUN rigidiškumas_NOUN ,_PUNCT bėrimas_NOUN ir_CCONJ kt_X ._PUNCT )_PUNCT ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Pavojaus signalai , kada reikia pacientą nusiųsti pas specialistą :
tags: NOUN NOUN PUNCT SCONJ VERB NOUN VERB ADP NOUN PUNCT
tagged_tokens: Pavojaus_NOUN signalai_NOUN ,_PUNCT kada_SCONJ reikia_VERB pacientą_NOUN nusiųsti_VERB pas_ADP specialistą_NOUN :_PUNCT

B) tokens: Pavojaus požymiai , kai reikia pacientą pergabenti pas specialistą :
tags: NOUN NOUN PUNCT SCONJ VERB NOUN VERB ADP NOUN PUNCT
tagged_tokens: Pavojaus_NOUN požymiai_NOUN ,_PUNCT kai_SCONJ reikia_VERB pacientą_NOUN pergabenti_VERB pas_ADP specialistą_NOUN :_PUNCT

C) tokens: Pavojaus indikatoriai , kai reikia pacientą išsiųsti pas specialistą :
tags: NOUN NOUN PUNCT SCONJ VERB NOUN VERB ADP NOUN PUNCT
tagged_tokens: Pavojaus_NOUN indikatoriai_NOUN ,_PUNCT kai_SCONJ reikia_VERB pacientą_NOUN išsiųsti_VERB pas_ADP specialistą_NOUN :_PUNCTD) tokens: Pavojaus ženklai , kai reikia pacientą siųsti pas specialistą :
tags: NOUN NOUN PUNCT SCONJ VERB NOUN VERB ADP NOUN PUNCT
tagged_tokens: Pavojaus_NOUN ženklai_NOUN ,_PUNCT kai_SCONJ reikia_VERB pacientą_NOUN siųsti_VERB pas_ADP specialistą_NOUN :_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Jeigu visą galvą žvelgia – sloga , padidėjęs kūno jautrumas , užkrečiamos ligos .
tags: SCONJ DET NOUN VERB – NOUN , ADJ NOUN NOUN , ADJ NOUN PUNCT
tagged_tokens: Jeigu_SCONJ visą_DET galvą_NOUN žvelgia_VERB –_PUNCT sloga_NOUN ,_PUNCT padidėjęs_ADJ kūno_NOUN jautrumas_NOUN ,_PUNCT užkrečiamos_ADJ ligos_NOUN ._PUNCT

B) tokens: Jeigu galva skauda visa – rinitas , aukšta temperatūra , infekcinės ligos .
tags: SCONJ NOUN VERB DET – NOUN , ADJ NOUN , ADJ NOUN PUNCT
tagged_tokens: Jeigu_SCONJ galva_NOUN skauda_VERB visa_DET –_PUNCT rinitas_NOUN ,_PUNCT aukšta_ADJ temperatūra_NOUN ,_PUNCT infekcinės_ADJ ligos_NOUN ._PUNCT

C) tokens: Jeigu galvą kamuoja visas – snarglys , karštis , užkrečiamos ligos .
tags: SCONJ NOUN VERB DET – NOUN , NOUN , ADJ NOUN PUNCT
tagged_tokens: Jeigu_SCONJ galvą_NOUN kamuoja_VERB visas_DET –_PUNCT snarglys_NOUN ,_PUNCT karštis_NOUN ,_PUNCT užkrečiamos_ADJ ligos_NOUN ._PUNCTD) tokens: Jeigu skauda visą galvą – peršalimas , karščiavimas , infekcinės ligos .
tags: SCONJ VERB DET NOUN PUNCT NOUN PUNCT NOUN PUNCT ADJ NOUN PUNCT
tagged_tokens: Jeigu_SCONJ skauda_VERB visą_DET galvą_NOUN –_PUNCT peršalimas_NOUN ,_PUNCT karščiavimas_NOUN ,_PUNCT infekcinės_ADJ ligos_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Nepatogumas kaktos srityje , prieš akis – akių ligos , netinkamai parinkti akiniai , rinosinusitas .
tags: NOUN NOUN NOUN PUNCT ADP NOUN PUNCT NOUN NOUN PUNCT ADV VERB NOUN PUNCT NOUN PUNCT
tagged_tokens: Nepatogumas_NOUN kaktos_NOUN srityje_NOUN ,_PUNCT prieš_ADP akis_NOUN –_PUNCT akių_NOUN ligos_NOUN ,_PUNCT netinkamai_ADV parinkti_VERB akiniai_NOUN ,_PUNCT rinosinusitas_NOUN ._PUNCT

B) tokens: Skausmingumas kaktos srityje , ties akiduobėmis – akių ligos , klaidingai parinkti akiniai , rinosinusitas .
tags: NOUN NOUN NOUN PUNCT ADP NOUN PUNCT NOUN NOUN PUNCT ADV VERB NOUN PUNCT NOUN PUNCT
tagged_tokens: Skausmingumas_NOUN kaktos_NOUN srityje_NOUN ,_PUNCT ties_ADP akiduobėmis_NOUN –_PUNCT akių_NOUN ligos_NOUN ,_PUNCT klaidingai_ADV parinkti_VERB akiniai_NOUN ,_PUNCT rinosinusitas_NOUN ._PUNCT

C) tokens: Diskomfortas kaktos srityje , ant akiduobių – akių ligos , nesėkmingai parinkti akiniai , rinosinusitas .
tags: NOUN NOUN NOUN PUNCT ADP NOUN PUNCT NOUN NOUN PUNCT ADV VERB NOUN PUNCT NOUN PUNCT
tagged_tokens: Diskomfortas_NOUN kaktos_NOUN srityje_NOUN ,_PUNCT ant_ADP akiduobių_NOUN –_PUNCT akių_NOUN ligos_NOUN ,_PUNCT nesėkmingai_ADV parinkti_VERB akiniai_NOUN ,_PUNCT rinosinusitas_NOUN ._PUNCTD) tokens: Skausmas kaktos srityje , virš akiduobių – akių ligos , blogai parinkti akiniai , rinosinusitas .
tags: NOUN NOUN NOUN PUNCT ADP NOUN PUNCT NOUN NOUN PUNCT ADV VERB NOUN PUNCT NOUN PUNCT
tagged_tokens: Skausmas_NOUN kaktos_NOUN srityje_NOUN ,_PUNCT virš_ADP akiduobių_NOUN –_PUNCT akių_NOUN ligos_NOUN ,_PUNCT blogai_ADV parinkti_VERB akiniai_NOUN ,_PUNCT rinosinusitas_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Rėžiantis kiekvienam smilkiniui sąlytis , be to užpakalio – aukštas kraujospūdis .
tags: VERB PRON NOUN NOUN PUNCT PART NOUN PUNCT ADJ NOUN PUNCT
tagged_tokens: Rėžiantis_VERB kiekvienam_PRON smilkiniui_NOUN sąlytis_NOUN ,_PUNCT be_PART to_X užpakalio_NOUN –_PUNCT aukštas_ADJ kraujospūdis_NOUN ._PUNCT

B) tokens: Dumblintis abiejų smilkinių pojūtis , taipogi galvos gale – padidėjęs spaudimas .
tags: VERB PRON NOUN NOUN PUNCT PART NOUN NOUN PUNCT INCR ADJ NOUN PUNCT
tagged_tokens: Dumblintis_VERB abiejų_PRON smilkinių_NOUN pojūtis_NOUN ,_PUNCT taipogi_PART galvos_NOUN gale_NOUN –_PUNCT padidėjęs_INCR spaudimas_ADJ ._PUNCT

C) tokens: Žviebia obuolys smilkinių malonumas , taip pat kaukolės apačioje – sutrikusi kraujotaka .
tags: VERB PRON NOUN NOUN PUNCT PART NOUN POS PUNCT VERB NOUN PUNCT
tagged_tokens: Žviebia_VERB obuolys_PRON smilkinių_NOUN malonumas_NOUN ,_PUNCT taip_PART pat_X kaukolės_NOUN apačioje_POS –_PUNCT sutrikusi_VERB kraujotaka_NOUN ._PUNCTD) tokens: Pulsuojantis abiejų smilkinių skausmas , taip pat pakaušio – hipertonija .
tags: VERB PRON NOUN NOUN PUNCT PART X NOUN PUNCT NOUN PUNCT
tagged_tokens: Pulsuojantis_VERB abiejų_PRON smilkinių_NOUN skausmas_NOUN ,_PUNCT taip_PART pat_X pakaušio_NOUN –_PUNCT hipertonija_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Degantis jausmas , slinkantis pro šventykles , šventyklas , pakaušio srityje – nervų sistemos apkrova .
tags: VERB NOUN PUNCT VERB ADP NOUN PUNCT NOUN PUNCT NOUN NOUN PUNCT ADJ NOUN NOUN PUNCT
tagged_tokens: Degantis_VERB jausmas_NOUN ,_PUNCT slinkantis_VERB pro_ADP šventykles_NOUN ,_PUNCT šventyklas_NOUN ,_PUNCT pakaušio_NOUN srityje_NOUN –_PUNCT nervų_ADJ sistemos_NOUN apkrova_NOUN ._PUNCT

B) tokens: Sprogdintis skausmingumas , skriejantis nuo kaktos , smilkčių , pakaušio gale – nervinio nuovargio požymis .
tags: VERB NOUN PUNCT VERB ADP NOUN PUNCT NOUN PUNCT NOUN NOUN PUNCT ADJ NOUN NOUN PUNCT
tagged_tokens: Sprogdintis_VERB skausmingumas_NOUN ,_PUNCT skriejantis_VERB nuo_ADP kaktos_NOUN ,_PUNCT smilkčių_NOUN ,_PUNCT pakaušio_NOUN gale_NOUN –_PUNCT nervinio_ADJ nuovargio_NOUN požymis_NOUN ._PUNCT

C) tokens: Žnybtelėjęs diskomfortas , plintantis per galvos viršų , smilkinį , pakaušio platumą – nervų įtempimo padarinys .
tags: VERB NOUN PUNCT VERB ADP NOUN NOUN PUNCT NOUN PUNCT NOUN NOUN PUNCT ADJ NOUN NOUN PUNCT
tagged_tokens: Žnybtelėjęs_VERB diskomfortas_NOUN ,_PUNCT plintantis_VERB per_ADP galvos_NOUN viršų_NOUN ,_PUNCT smilkinį_NOUN ,_PUNCT pakaušio_NOUN platumą_NOUN –_PUNCT nervų_ADJ įtempimo_NOUN padarinys_NOUN ._PUNCTD) tokens: Skeliantis skausmas , einantis per kaktą , smilkinius , pakaušį – nervinės įtampos išraiška .
tags: VERB NOUN PUNCT VERB ADP NOUN PUNCT NOUN PUNCT NOUN PUNCT ADJ NOUN NOUN PUNCT
tagged_tokens: Skeliantis_VERB skausmas_NOUN ,_PUNCT einantis_VERB per_ADP kaktą_NOUN ,_PUNCT smilkinius_NOUN ,_PUNCT pakaušį_NOUN –_PUNCT nervinės_ADJ įtampos_NOUN išraiška_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Žirginėja po klausos organo ( nuo šonkaulio ) , dantis – dantų raidos sutrikimai arba ausies uždegimas .
tags: VERB ADP NOUN PUNCT ADP NOUN PUNCT PUNCT NOUN PUNCT NOUN PARENT PUNCT CCONJ NOUN PUNCT
tagged_tokens: Žirginėja_VERB po_ADP klausos_NOUN organo_NOUN (_PUNCT nuo_ADP šonkaulio_NOUN )_PUNCT ,_PUNCT dantis_NOUN –_PUNCT dantų_NOUN raidos_NOUN sutrikimai_NOUN arba_CCONJ ausies_NOUN uždegimas_NOUN ._PUNCT

B) tokens: Puola ant klausytojo ( iš šalies ) , žandikaulį – stomatologinės ligos arba vidurinės ausies užsikrėtimas .
tags: VERB ADP NOUN PUNCT ADP NOUN PUNCT PUNCT NOUN PUNCT ADJ NOUN CCONJ NOUN PUNCT
tagged_tokens: Puola_VERB ant_ADP klausytojo_NOUN (_PUNCT iš_ADP šalies_NOUN )_PUNCT ,_PUNCT žandikaulį_NOUN –_PUNCT stomatologinės_ADJ ligos_NOUN arba_CCONJ vidurinės_ADJ ausies_NOUN užsikrėtimas_NOUN ._PUNCT

C) tokens: Degina už balsio aparato ( nuo krašto ) , lūžinį – burnos raidos anomalijos arba vidinės ausies infekcija .
tags: VERB ADP NOUN PUNCT ADP NOUN PUNCT PUNCT NOUN PUNCT NOUN PARENT PUNCT CCONJ NOUN PUNCT
tagged_tokens: Degina_VERB už_ADP balsio_NOUN aparato_NOUN (_PUNCT nuo_ADP krašto_NOUN )_PUNCT ,_PUNCT lūžinį_NOUN –_PUNCT burnos_NOUN raidos_NOUN anomalijos_NOUN arba_CCONJ vidinės_ADJ ausies_NOUN infekcija_NOUN ._PUNCTD) tokens: Skauda už ausies ( iš vienos pusės ) , smilkinį – odontologinės problemos arba otitas .
tags: VERB ADP NOUN PUNCT ADP PRON NOUN PUNCT PUNCT NOUN PUNCT ADJ NOUN CCONJ NOUN PUNCT
tagged_tokens: Skauda_VERB už_ADP ausies_NOUN (_PUNCT iš_ADP vienos_PRON pusės_NOUN )_PUNCT ,_PUNCT smilkinį_NOUN –_PUNCT odontologinės_ADJ problemos_NOUN arba_CCONJ otitas_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Veido skausmai ( kairėje ) – migrena .
tags: NOUN NOUN PUNCT ADJ PUNCT PUNCT NOUN PUNCT
tagged_tokens: Veido_NOUN skausmai_NOUN (_PUNCT kairėje_ADJ )_PUNCT –_PUNCT migrena_NOUN ._PUNCT

B) tokens: Galvos skauda ( šalin ) – migrena .
tags: NOUN VERB PUNCT ADV PUNCT PUNCT NOUN PUNCT
tagged_tokens: Galvos_NOUN skauda_VERB (_PUNCT šalin_ADV )_PUNCT –_PUNCT migrena_NOUN ._PUNCT

C) tokens: Smilkinis bada ( dešinėje ) – migrena .
tags: NOUN NOUN PUNCT ADJ PUNCT PUNCT NOUN PUNCT
tagged_tokens: Smilkinis_NOUN bada_NOUN (_PUNCT dešinėje_ADJ )_PUNCT –_PUNCT migrena_NOUN ._PUNCTD) tokens: Smilkinio skausmas ( vienos pusės ) – migrena .
tags: NOUN NOUN PUNCT PRON NOUN PUNCT PUNCT NOUN PUNCT
tagged_tokens: Smilkinio_NOUN skausmas_NOUN (_PUNCT vienos_PRON pusės_NOUN )_PUNCT –_PUNCT migrena_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Galite nuslopinti galvos skausmus :
tags: VERB VERB NOUN NOUN PUNCT
tagged_tokens: Galite_VERB nuslopinti_VERB galvos_NOUN skausmus_NOUN :_PUNCT

B) tokens: Jūs galite praskalbti galvos skausmus :
tags: PRON VERB VERB NOUN NOUN PUNCT
tagged_tokens: Jūs_PRON galite_VERB praskalbti_VERB galvos_NOUN skausmus_NOUN :_PUNCT

C) tokens: Galėtumėte pašalinti galvos skausmus :
tags: VERB VERB NOUN NOUN PUNCT
tagged_tokens: Galėtumėte_VERB pašalinti_VERB galvos_NOUN skausmus_NOUN :_PUNCTD) tokens: Jūs galite numalšinti galvos skausmus :
tags: PRON VERB VERB NOUN NOUN PUNCT
tagged_tokens: Jūs_PRON galite_VERB numalšinti_VERB galvos_NOUN skausmus_NOUN :_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: nusistatydami priežastis , kurios lemia galvos skausmą ir jų šalinti ;
tags: VERB NOUN PUNCT DET VERB NOUN NOUN CCONJ PRON VERB PUNCT
tagged_tokens: nusistatydami_VERB priežastis_NOUN ,_PUNCT kurios_DET lemia_VERB galvos_NOUN skausmą_NOUN ir_CCONJ jų_PRON šalinti_VERB ;_PUNCT

B) tokens: apibrėždami faktorius , kurie sukelia galvos skausmą ir jų apeiti ;
tags: VERB NOUN PUNCT DET VERB NOUN NOUN CCONJ PRON VERB PUNCT
tagged_tokens: apibrėždami_VERB faktorius_NOUN ,_PUNCT kurie_DET sukelia_VERB galvos_NOUN skausmą_NOUN ir_CCONJ jų_PRON apeiti_VERB ;_PUNCT

C) tokens: išsiaiškindami dėmenis , kurie sukelia galvos skausmą ir jų išvengti ;
tags: VERB NOUN PUNCT DET VERB NOUN NOUN CCONJ PRON VERB PUNCT
tagged_tokens: išsiaiškindami_VERB dėmenis_NOUN ,_PUNCT kurie_DET sukelia_VERB galvos_NOUN skausmą_NOUN ir_CCONJ jų_PRON išvengti_VERB ;_PUNCTD) tokens: nustatydami veiksnius , kurie sukelia galvos skausmą ir jų vengti ;
tags: VERB NOUN PUNCT DET VERB NOUN NOUN CCONJ PRON VERB PUNCT
tagged_tokens: nustatydami_VERB veiksnius_NOUN ,_PUNCT kurie_DET sukelia_VERB galvos_NOUN skausmą_NOUN ir_CCONJ jų_PRON vengti_VERB ;_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: gerdami daug skysčių ( bent 6 stiklines per dieną ) ir sekdami mitybos planą ;
tags: VERB ADV NOUN PUNCT PART NUM NOUN ADP NOUN PUNCT CCONJ VERB NOUN PUNCT
tagged_tokens: gerdami_VERB daug_ADV skysčių_NOUN (_PUNCT bent_PART 6_NUM stiklines_NOUN per_ADP dieną_NOUN )_PUNCT ir_CCONJ sekdami_VERB mitybos_NOUN planą_NOUN ;_PUNCT

B) tokens: gerdami daug vandens ( bent 6 puodelius per dieną ) ir laikydami mitybos režimą ;
tags: VERB ADV NOUN PUNCT PART NUM NOUN ADP NOUN PUNCT CCONJ VERB NOUN PUNCT
tagged_tokens: gerdami_VERB daug_ADV vandens_NOUN (_PUNCT bent_PART 6_NUM puodelius_NOUN per_ADP dieną_NOUN )_PUNCT ir_CCONJ laikydami_VERB mitybos_NOUN režimą_NOUN ;_PUNCT

C) tokens: gerdami daug skysčių ( bent 6 puodelius per dieną ) ir vykdydami dietos taisykles ;
tags: VERB ADV NOUN PUNCT PART NUM NOUN ADP NOUN PUNCT CCONJ VERB NOUN PUNCT
tagged_tokens: gerdami_VERB daug_ADV skysčių_NOUN (_PUNCT bent_PART 6_NUM puodelius_NOUN per_ADP dieną_NOUN )_PUNCT ir_CCONJ vykdydami_VERB dietos_NOUN taisykles_NOUN ;_PUNCTD) tokens: gerdami daug vandens ( bent 6 stiklines per dieną ) ir laikydamiesi dietos ;
tags: VERB ADV NOUN PUNCT PART NUM NOUN ADP NOUN PUNCT CCONJ VERB NOUN PUNCT
tagged_tokens: gerdami_VERB daug_ADV vandens_NOUN (_PUNCT bent_PART 6_NUM stiklines_NOUN per_ADP dieną_NOUN )_PUNCT ir_CCONJ laikydamiesi_VERB dietos_NOUN ;_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: reguliariai būnę pradingusiame ore ;
tags: ADV VERB ADJ NOUN PUNCT
tagged_tokens: reguliariai_ADV būnę_VERB pradingusiame_ADJ ore_NOUN ;_PUNCT

B) tokens: dažnai esantys tyrime ore ;
tags: ADV VERB ADJ NOUN PUNCT
tagged_tokens: dažnai_ADV esantys_VERB tyrime_ADJ ore_NOUN ;_PUNCT

C) tokens: kartinai būdamiesi švariame ore ;
tags: ADV VERB ADJ NOUN PUNCT
tagged_tokens: kartinai_ADV būdamiesi_VERB švariame_ADJ ore_NOUN ;_PUNCTD) tokens: periodiškai būdami gryname ore ;
tags: ADV VERB ADJ NOUN PUNCT
tagged_tokens: periodiškai_ADV būdami_VERB gryname_ADJ ore_NOUN ;_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: pastoviai pratybų darydami ;
tags: ADV VERB VERB PUNCT
tagged_tokens: pastoviai_ADV pratybų_VERB darydami_VERB ;_PUNCT

B) tokens: nuolat pratimų atliekantys ;
tags: ADV NOUN VERB PUNCT
tagged_tokens: nuolat_ADV pratimų_NOUN atliekantys_VERB ;_PUNCT

C) tokens: stabiliai užsiėmimų vykdantys ;
tags: ADV NOUN VERB PUNCT
tagged_tokens: stabiliai_ADV užsiėmimų_NOUN vykdantys_VERB ;_PUNCTD) tokens: reguliariai mankštindamiesi ;
tags: ADV VERB PUNCT
tagged_tokens: reguliariai_ADV mankštindamiesi_VERB ;_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: gerai poilsiaudami ir išsimiegoję ;
tags: ADV VERB CCONJ VERB PUNCT
tagged_tokens: gerai_ADV poilsiaudami_VERB ir_CCONJ išsimiegoję_VERB ;_PUNCT

B) tokens: puikiai atsipalaidavę ir pasimiegę ;
tags: ADV VERB CCONJ VERB PUNCT
tagged_tokens: puikiai_ADV atsipalaidavę_VERB ir_CCONJ pasimiegę_VERB ;_PUNCT

C) tokens: teisingai rekreuodamiesi ir gaudamiesi miego ;
tags: ADV VERB CCONJ VERB PUNCT
tagged_tokens: teisingai_ADV rekreuodamiesi_VERB ir_CCONJ gaudamiesi_VERB miego_NOUN ;_PUNCTD) tokens: tinkamai ilsėdamiesi ir išsimiegodami ;
tags: ADV VERB CCONJ VERB PUNCT
tagged_tokens: tinkamai_ADV ilsėdamiesi_VERB ir_CCONJ išsimiegodami_VERB ;_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: nuosekliai maitindamiesi sveiką mitybą ;
tags: ADV VERB VERB NOUN PUNCT
tagged_tokens: nuosekliai_ADV maitindamiesi_VERB sveiką_VERB mitybą_NOUN ;_PUNCT

B) tokens: pastoviai žindydami harmoningą dietą ;
tags: ADV VERB VERB NOUN PUNCT
tagged_tokens: pastoviai_ADV žindydami_VERB harmoningą_VERB dietą_NOUN ;_PUNCT

C) tokens: tolygiai aprūpinant save prasmingu užkandžiu ;
tags: ADV VERB VERB NOUN PUNCT
tagged_tokens: tolygiai_ADV aprūpinant_VERB save_VERB prasmingu_VERB užkandžiu_NOUN ;_PUNCTD) tokens: reguliariai valgydami subalansuotą maistą ;
tags: ADV VERB VERB NOUN PUNCT
tagged_tokens: reguliariai_ADV valgydami_VERB subalansuotą_VERB maistą_NOUN ;_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: darydami poilsinę pratimų seansą ir garsiai įkvepiant , jog nuramintumėte stresą ;
tags: VERB VERB NOUN NOUN CCONJ ADV VERB PUNCT SCONJ VERB NOUN PUNCT
tagged_tokens: darydami_VERB poilsinę_VERB pratimų_NOUN seansą_NOUN ir_CCONJ garsiai_ADV įkvepiant_VERB ,_PUNCT jog_SCONJ nuramintumėte_VERB stresą_NOUN ;_PUNCT

B) tokens: vykdydami atgautinę kūno lavinimo sesiją ir stipriai įtraukiant , kad apeiti nervinį apkrovimą ;
tags: VERB VERB NOUN NOUN NOUN CCONJ ADV VERB PUNCT SCONJ VERB NOUN NOUN PUNCT
tagged_tokens: vykdydami_VERB atgautinę_VERB kūno_NOUN lavinimo_NOUN sesiją_NOUN ir_CCONJ stipriai_ADV įtraukiant_VERB ,_PUNCT kad_SCONJ apeiti_VERB nervinį_NOUN apkrovimą_NOUN ;_PUNCT

C) tokens: atsiliepdami palengvinančią fizinę veiklą ir sodriai įkvėpdami , jog pašalintumėte įsitempimą ;
tags: VERB VERB NOUN NOUN CCONJ ADV VERB PUNCT SCONJ VERB NOUN PUNCT
tagged_tokens: atsiliepdami_VERB palengvinančią_VERB fizinę_NOUN veiklą_NOUN ir_CCONJ sodriai_ADV įkvėpdami_VERB ,_PUNCT jog_SCONJ pašalintumėte_VERB įsitempimą_NOUN ;_PUNCTD) tokens: atlikdami atpalaiduojamąją mankštą ir giliai kvėpuodami , kad sumažintumėte įtampą ;
tags: VERB VERB NOUN CCONJ ADV VERB PUNCT SCONJ VERB NOUN PUNCT
tagged_tokens: atlikdami_VERB atpalaiduojamąją_VERB mankštą_NOUN ir_CCONJ giliai_ADV kvėpuodami_VERB ,_PUNCT kad_SCONJ sumažintumėte_VERB įtampą_NOUN ;_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: mažindami įtampą , įsidėmėdami įtampos suvaldymo būdų .
tags: VERB NOUN PUNCT VERB NOUN NOUN NOUN PUNCT
tagged_tokens: mažindami_VERB įtampą_NOUN ,_PUNCT įsidėmėdami_VERB įtampos_NOUN suvaldymo_NOUN būdų_NOUN ._PUNCT

B) tokens: atlaisvindami nervus , mokydamiesi nervų reguliavimo metodikų .
tags: VERB NOUN PUNCT VERB + DEV NOUN NOUN NOUN PUNCT
tagged_tokens: atlaisvindami_VERB nervus_NOUN ,_PUNCT mokydamiesi_VERB nervų_NOUN reguliavimo_NOUN metodikų_NOUN ._PUNCT

C) tokens: sumažinę spaudimą , priimdami spaudimo kontrolės priemones .
tags: VERB + PRT NOUN PUNCT VERB NOUN NOUN NOUN PUNCT
tagged_tokens: sumažinę_VERB + PRT spaudimą_NOUN ,_PUNCT priimdami_VERB spaudimo_NOUN kontrolės_NOUN priemones_NOUN ._PUNCTD) tokens: sumažindami stresą , išmokdami streso valdymo metodų .
tags: VERB NOUN PUNCT VERB NOUN NOUN NOUN PUNCT
tagged_tokens: sumažindami_VERB stresą_NOUN ,_PUNCT išmokdami_VERB streso_NOUN valdymo_NOUN metodų_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Četras dienas milžiniškame eksponatų centre „ ExCel “ įvyko tarptautinė kelionių pramonės paroda , kur žuvo 250 šalių .
tags: NUM NOUN ADJ NOUN NOUN PUNCT X PUNCT VERB ADJ NOUN NOUN VERB NOUN PUNCT DET VERB NUM NOUN PUNCT
tagged_tokens: Četras_NUM dienas_NOUN milžiniškame_ADJ eksponatų_NOUN centre_NOUN „_PUNCT ExCel_X “_PUNCT įvyko_VERB tarptautinė_ADJ kelionių_NOUN pramonės_NOUN paroda_VERB ,_PUNCT kur_DET žuvo_VERB 250_NUM šalių_NOUN ._PUNCT

B) tokens: Ketverias dienas didželėje rodinių rūmuose „ ExCel “ buvo pasaulio kelionės industrijos paroda , kuriose sudalyvavo 250 valstybių .
tags: NUM NOUN ADJ NOUN NOUN PUNCT X PUNCT VERB ADJ NOUN NOUN VERB NOUN PUNCT DET VERB NUM NOUN PUNCT
tagged_tokens: Ketverias_NUM dienas_NOUN didželėje_ADJ rodinių_NOUN rūmuose_NOUN „_PUNCT ExCel_X “_PUNCT buvo_VERB pasaulio_ADJ kelionės_NOUN industrijos_NOUN paroda_VERB ,_PUNCT kuriose_DET sudalyvavo_VERB 250_NUM valstybių_NOUN ._PUNCT

C) tokens: Keturioms dienoms didingame pristatymų arenoje „ ExCel “ įsivyrauvo globalinė turizmo verslo paroda , kur dalyvaujo 250 šalių .
tags: NUM NOUN ADJ NOUN NOUN PUNCT X PUNCT VERB ADJ NOUN NOUN VERB NOUN PUNCT DET VERB NUM NOUN PUNCT
tagged_tokens: Keturioms_NUM dienoms_NOUN didingame_ADJ pristatymų_NOUN arenoje_NOUN „_PUNCT ExCel_X “_PUNCT įsivyrauvo_VERB globalinė_ADJ turizmo_NOUN verslo_NOUN paroda_VERB ,_PUNCT kur_DET dalyvaujo_VERB 250_NUM šalių_NOUN ._PUNCTD) tokens: Keturias dienas didžiuliame parodų komplekse „ ExCel “ vyko pasaulinė turizmo industrijai skirta paroda , kurioje dalyvavo 250 valstybių .
tags: NUM NOUN ADJ NOUN NOUN PUNCT X PUNCT VERB ADJ NOUN NOUN VERB NOUN PUNCT DET VERB NUM NOUN PUNCT
tagged_tokens: Keturias_NUM dienas_NOUN didžiuliame_ADJ parodų_NOUN komplekse_NOUN „_PUNCT ExCel_X “_PUNCT vyko_VERB pasaulinė_ADJ turizmo_NOUN industrijai_NOUN skirta_VERB paroda_NOUN ,_PUNCT kurioje_DET dalyvavo_VERB 250_NUM valstybių_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""A""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Viena iš jų - Lietuva patrauklios šviesios spalvos pastate pristatė savo kelioninius variantus ir Vilnių - 2009-ųjų Europos kultūros sostinę .
tags: PRON ADP PRON PUNCT PROPN ADJ ADJ NOUN NOUN VERB PRON ADJ NOUN CCONJ PROPN PUNCT NUM PROPN NOUN NOUN PUNCT
tagged_tokens: Viena_PRON iš_ADP jų_PRON -_PUNCT Lietuva_PROPN patrauklios_ADJ šviesios_ADJ spalvos_NOUN pastate_NOUN pristatė_VERB savo_PRON kelioninius_ADJ variantus_NOUN ir_CCONJ Vilnių_PROPN -_PUNCT 2009-ųjų_NUM Europos_PROPN kultūros_NOUN sostinę_NOUN ._PUNCT

B) tokens: Viena tarp jų - Lietuva žavingos jautros spalvos name pristatė mūsų kelionių galimybes ir Vilnių - 2009-ųjų Europos kultūros sostinę .
tags: PRON ADP PRON PUNCT PROPN ADJ ADJ NOUN NOUN VERB PRON ADJ NOUN CCONJ PROPN PUNCT NUM PROPN NOUN NOUN PUNCT
tagged_tokens: Viena_PRON tarp_ADP jų_PRON -_PUNCT Lietuva_PROPN žavingos_ADJ jautros_ADJ spalvos_NOUN name_NOUN pristatė_VERB mūsų_PRON kelionių_ADJ galimybes_NOUN ir_CCONJ Vilnių_PROPN -_PUNCT 2009-ųjų_NUM Europos_PROPN kultūros_NOUN sostinę_NOUN ._PUNCT

C) tokens: Viena po jų - Lietuva traukios ryškios spalvos pylonėje pristatė savo turizmo variantus ir Vilnių - 2009-ųjų Europos kultūros sostinę .
tags: PRON ADP PRON PUNCT PROPN ADJ ADJ NOUN NOUN VERB PRON ADJ NOUN CCONJ PROPN PUNCT NUM PROPN NOUN NOUN PUNCT
tagged_tokens: Viena_PRON po_ADP jų_PRON -_PUNCT Lietuva_PROPN traukios_ADJ ryškios_ADJ spalvos_NOUN pylonėje_NOUN pristatė_VERB savo_PRON turizmo_ADJ variantus_NOUN ir_CCONJ Vilnių_PROPN -_PUNCT 2009-ųjų_NUM Europos_PROPN kultūros_NOUN sostinę_NOUN ._PUNCTD) tokens: Viena jų - Lietuva malonios žalios spalvos paviljone pristatė mūsų turistines galimybes ir Vilnių - 2009-ųjų Europos kultūros sostinę .
tags: PRON PRON PUNCT PROPN ADJ ADJ NOUN NOUN VERB PRON ADJ NOUN CCONJ PROPN PUNCT NUM PROPN NOUN NOUN PUNCT
tagged_tokens: Viena_PRON jų_PRON -_PUNCT Lietuva_PROPN malonios_ADJ žalios_ADJ spalvos_NOUN paviljone_NOUN pristatė_VERB mūsų_PRON turistines_ADJ galimybes_NOUN ir_CCONJ Vilnių_PROPN -_PUNCT 2009-ųjų_NUM Europos_PROPN kultūros_NOUN sostinę_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""A""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Į ribotą ritmą susirinko vertingi Lietuvai asmenys : ambasadorius Vygaudas Ušackas su žmona , Ūkio ministerijos sekretorius Gediminas Miškinis , skirtingų agentūrų vadovai .
tags: ADP ADJ NOUN VERB ADJ PROPN NOUN PUNCT NOUN PROPN PROPN ADP NOUN PUNCT NOUN NOUN NOUN PROPN PROPN PUNCT ADJ NOUN NOUN PUNCT
tagged_tokens: Į_ADP ribotą_ADJ ritmą_NOUN susirinko_VERB vertingi_ADJ Lietuvai_PROPN asmenys_NOUN :_PUNCT ambasadorius_NOUN Vygaudas_PROPN Ušackas_PROPN su_ADP žmona_NOUN ,_PUNCT Ūkio_NOUN ministerijos_NOUN sekretorius_NOUN Gediminas_PROPN Miškinis_PROPN ,_PUNCT skirtingų_ADJ agentūrų_NOUN vadovai_NOUN ._PUNCT

B) tokens: Į slaptą garsą atvyko brangūs Lietuvai piliečiai : ambasadorius Vygaudas Ušackas su žmona , Ūkio ministerijos sekretorius Gediminas Miškinis , įvairios agentūrų vadai .
tags: ADP ADJ NOUN VERB ADJ PROPN NOUN PUNCT NOUN PROPN PROPN ADP NOUN PUNCT NOUN NOUN NOUN PROPN PROPN PUNCT ADJ NOUN NOUN PUNCT
tagged_tokens: Į_ADP slaptą_ADJ garsą_NOUN atvyko_VERB brangūs_ADJ Lietuvai_PROPN piliečiai_NOUN :_PUNCT ambasadorius_NOUN Vygaudas_PROPN Ušackas_PROPN su_ADP žmona_NOUN ,_PUNCT Ūkio_NOUN ministerijos_NOUN sekretorius_NOUN Gediminas_PROPN Miškinis_PROPN ,_PUNCT įvairios_ADJ agentūrų_NOUN vadai_NOUN ._PUNCT

C) tokens: Į paslaptį sugalvojo vertini Lietuvai gyventojai : ambasadorius Vygaudas Ušackas su žmona , Ūkio ministerijos sekretorius Gediminas Miškinis , skirtingos agentūrų lyderiai .
tags: ADP NOUN VERB ADJ PROPN NOUN PUNCT NOUN PROPN PROPN ADP NOUN PUNCT NOUN NOUN NOUN PROPN PROPN PUNCT ADJ NOUN NOUN PUNCT
tagged_tokens: Į_ADP paslaptį_NOUN sugalvojo_VERB vertini_ADJ Lietuvai_PROPN gyventojai_NOUN :_PUNCT ambasadorius_NOUN Vygaudas_PROPN Ušackas_PROPN su_ADP žmona_NOUN ,_PUNCT Ūkio_NOUN ministerijos_NOUN sekretorius_NOUN Gediminas_PROPN Miškinis_PROPN ,_PUNCT skirtingos_ADJ agentūrų_NOUN lyderiai_NOUN ._PUNCTD) tokens: Į uždarą rytmetį buvo pakviesti svarbūs Lietuvai žmonės : ambasadorius Vygaudas Ušackas su žmona , Ūkio ministerijos sekretorius Gediminas Miškinis , įvairių agentūrų vadovai .
tags: ADP ADJ NOUN AUX VERB ADJ PROPN NOUN PUNCT NOUN PROPN PROPN ADP NOUN PUNCT NOUN NOUN NOUN PROPN PROPN PUNCT ADJ NOUN NOUN PUNCT
tagged_tokens: Į_ADP uždarą_ADJ rytmetį_NOUN buvo_AUX pakviesti_VERB svarbūs_ADJ Lietuvai_PROPN žmonės_NOUN :_PUNCT ambasadorius_NOUN Vygaudas_PROPN Ušackas_PROPN su_ADP žmona_NOUN ,_PUNCT Ūkio_NOUN ministerijos_NOUN sekretorius_NOUN Gediminas_PROPN Miškinis_PROPN ,_PUNCT įvairių_ADJ agentūrų_NOUN vadovai_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""A""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Ryto_NOUN ritmu_ADV su_ADP saksofonisto_NOUN Petri_PROPN Vyšniauski_PROPN ,_PUNCT grojome_VERB savo_PRON ir_CCONJ animacininko_NOUN Egidijaus_PROPN Vaškevičiaus_PROPN kūrė_VERB audiovizualinę_ADJ programą_NOUN „_PUNCT Pasaulio_NOUN sutvėrimas_NOUN XXI_NUM amžiaus_NOUN pradžiai_NOUN “_PUNCT remdamiesi_VERB M_X ._PUNCT K_X ._PUNCT Čiurlionio_PROPN darbais_NOUN ._PUNCT
tags: NOUN ADV ADP NOUN PROPN PROPN PUNCT VERB PRON CCONJ NOUN PROPN PROPN VERB ADJ NOUN PUNCT NOUN NOUN NUM NOUN NOUN PUNCT VERB X PUNCT X PUNCT PROPN NOUN PUNCT
tagged_tokens: Ryto_NOUN ritmu_ADV su_ADP saksofonisto_NOUN Petri_PROPN Vyšniauski_PROPN ,_PUNCT grojome_VERB savo_PRON ir_CCONJ animacininko_NOUN Egidijaus_PROPN Vaškevičiaus_PROPN kūrė_VERB audiovizualinę_ADJ programą_NOUN „_PUNCT Pasaulio_NOUN sutvėrimas_NOUN XXI_NUM amžiaus_NOUN pradžiai_NOUN “_PUNCT remdamiesi_VERB M_X ._PUNCT K_X ._PUNCT Čiurlionio_PROPN darbais_NOUN ._PUNCT

B) tokens: Rytaus_NOUN ritme_ADV su_ADP saksofonu_NOUN Petras_PROPN Vyšniauskas_PROPN ,_PUNCT skambinome_VERB mūsų_PRON ir_CCONJ animatoriaus_NOUN Egidijaus_PROPN Vaškevičiaus_PROPN padarė_VERB audiovizualų_ADJ spektaklį_NOUN „_PUNCT Pasaulio_NOUN sutvėrimas_NOUN XXI_NUM amžiaus_NOUN pradžiai_NOUN “_PUNCT pasitelkę_VERB M_X ._PUNCT K_X ._PUNCT Čiurlionio_PROPN kūrinius_NOUN ._PUNCT
tags: NOUN ADV ADP NOUN PROPN PROPN PUNCT VERB PRON CCONJ NOUN PROPN PROPN VERB ADJ NOUN PUNCT NOUN NOUN NUM NOUN NOUN PUNCT VERB X PUNCT X PUNCT PROPN NOUN PUNCT
tagged_tokens: Rytaus_NOUN ritme_ADV su_ADP saksofonu_NOUN Petras_PROPN Vyšniauskas_PROPN ,_PUNCT skambinome_VERB mūsų_PRON ir_CCONJ animatoriaus_NOUN Egidijaus_PROPN Vaškevičiaus_PROPN padarė_VERB audiovizualų_ADJ spektaklį_NOUN „_PUNCT Pasaulio_NOUN sutvėrimas_NOUN XXI_NUM amžiaus_NOUN pradžiai_NOUN “_PUNCT pasitelkę_VERB M_X ._PUNCT K_X ._PUNCT Čiurlionio_PROPN kūrinius_NOUN ._PUNCT

C) tokens: Ryto_NOUN metu_ADV su_ADP saksofonu_NOUN Petriu_PROPN Vyšniausku_PROPN ,_PUNCT vedžiojome_VERB aš_PRON ir_CCONJ animacijos_NOUN Egidijaus_PROPN Vaškevičiaus_PROPN sukūrė_VERB audiovizualinį_ADJ etiudą_NOUN „_PUNCT Pasaulio_NOUN sutvėrimas_NOUN XXI_NUM amžiaus_NOUN pradžiai_NOUN “_PUNCT naudodamiesi_VERB M_X ._PUNCT K_X ._PUNCT Čiurlionio_PROPN piešiniais_NOUN ._PUNCT
tags: NOUN ADV ADP NOUN PROPN PROPN PUNCT VERB PRON CCONJ NOUN PROPN PROPN VERB ADJ NOUN PUNCT NOUN NOUN NUM NOUN NOUN PUNCT VERB X PUNCT X PUNCT PROPN NOUN PUNCT
tagged_tokens: Ryto_NOUN metu_ADV su_ADP saksofonu_NOUN Petriu_PROPN Vyšniausku_PROPN ,_PUNCT vedžiojome_VERB aš_PRON ir_CCONJ animacijos_NOUN Egidijaus_PROPN Vaškevičiaus_PROPN sukūrė_VERB audiovizualinį_ADJ etiudą_NOUN „_PUNCT Pasaulio_NOUN sutvėrimas_NOUN XXI_NUM amžiaus_NOUN pradžiai_NOUN “_PUNCT naudodamiesi_VERB M_X ._PUNCT K_X ._PUNCT Čiurlionio_PROPN piešiniais_NOUN ._PUNCTD) tokens: Rytmetį pradėjome kartu su saksofonininku Petru Vyšniausku , atlikdami mano ir animatoriaus Egidijaus Vaškevičiaus sukurtą audiovizualinį projektą „ Pasaulio sutvėrimas XXI amžiaus pradžiai “ pagal M . K . Čiurlionio paveikslus .
tags: NOUN VERB ADV ADP NOUN PROPN PROPN PUNCT VERB PRON CCONJ NOUN PROPN PROPN VERB ADJ NOUN PUNCT NOUN NOUN NUM NOUN NOUN PUNCT ADP X PUNCT X PUNCT PROPN NOUN PUNCT
tagged_tokens: Rytmetį_NOUN pradėjome_VERB kartu_ADV su_ADP saksofonininku_NOUN Petru_PROPN Vyšniausku_PROPN ,_PUNCT atlikdami_VERB mano_PRON ir_CCONJ animatoriaus_NOUN Egidijaus_PROPN Vaškevičiaus_PROPN sukurtą_VERB audiovizualinį_ADJ projektą_NOUN „_PUNCT Pasaulio_NOUN sutvėrimas_NOUN XXI_NUM amžiaus_NOUN pradžiai_NOUN “_PUNCT pagal_ADP M_X ._PUNCT K_X ._PUNCT Čiurlionio_PROPN paveikslus_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Nesitikėjome , jog šis darbas sukels tokią aistrą tarp lietuviškų midų ir skilandžių gerbėjų .
tags: VERB PUNCT SCONJ DET NOUN VERB DET NOUN ADP ADJ NOUN CCONJ NOUN NOUN PUNCT
tagged_tokens: Nesitikėjome_VERB ,_PUNCT jog_SCONJ šis_DET darbas_NOUN sukels_VERB tokią_DET aistrą_NOUN tarp_ADP lietuviškų_ADJ midų_NOUN ir_CCONJ skilandžių_NOUN gerbėjų_NOUN ._PUNCT

B) tokens: Neturėjome vilčių , kad šiam darbui pasireikš tokia simpatija tarp mėgstančių lietuviškus midus ir skilandžius .
tags: VERB NOUN PUNCT SCONJ DET NOUN VERB DET NOUN ADP VERB ADJ NOUN CCONJ NOUN PUNCT
tagged_tokens: Neturėjome_VERB vilčių_NOUN ,_PUNCT kad_SCONJ šiam_DET darbui_NOUN pasireikš_VERB tokia_DET simpatija_NOUN tarp_ADP mėgstančių_VERB lietuviškus_ADJ midus_NOUN ir_CCONJ skilandžius_NOUN ._PUNCT

C) tokens: Neįtikėjome , kad šiai sričiai atsiradus tokį susižavėjimą tarp ruošiančių lietuvišką midų ir skilandžių patiekalą .
tags: VERB PUNCT SCONJ DET NOUN VERB DET NOUN ADP VERB ADJ NOUN CCONJ NOUN NOUN PUNCT
tagged_tokens: Neįtikėjome_VERB ,_PUNCT kad_SCONJ šiai_DET sričiai_NOUN atsiradus_VERB tokį_DET susižavėjimą_NOUN tarp_ADP ruošiančių_VERB lietuvišką_ADJ midų_NOUN ir_CCONJ skilandžių_NOUN patiekalą_NOUN ._PUNCTD) tokens: Netikėjome , kad šiuo darbu bus susidomėta ne ką mažiau nei lietuvišku midumi ar skilandžiais .
tags: VERB PUNCT SCONJ DET NOUN AUX VERB PART PRON ADV SCONJ ADJ NOUN CCONJ NOUN PUNCT
tagged_tokens: Netikėjome_VERB ,_PUNCT kad_SCONJ šiuo_DET darbu_NOUN bus_AUX susidomėta_VERB ne_PART ką_PRON mažiau_ADV nei_SCONJ lietuvišku_ADJ midumi_NOUN ar_CCONJ skilandžiais_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Sekančią dieną vienas Didžiojo Miesto laikraštis tą įvykį paskelbė „ Lietuva ant padėklo “ .
tags: PRON NOUN PRON ADJ NOUN NOUN DET NOUN VERB PUNCT PROPN ADP NOUN PUNCT PUNCT
tagged_tokens: Sekančią_PRON dieną_NOUN vienas_PRON Didžiojo_ADJ Miesto_NOUN laikraštis_NOUN tą_DET įvykį_NOUN paskelbė_VERB „_PUNCT Lietuva_PROPN ant_ADP padėklo_NOUN “_PUNCT ._PUNCT

B) tokens: Poryt vienas Anglijos spauda tą apektą pateikė „ Lietuva ant disko “ .
tags: NOUN PRON PROPN NOUN DET NOUN VERB PUNCT PROPN ADP NOUN PUNCT PUNCT
tagged_tokens: Poryt_NOUN vienas_PRON Anglijos_PROPN spauda_NOUN tą_DET apektą_NOUN pateikė_VERB „_PUNCT Lietuva_PROPN ant_ADP disko_NOUN “_PUNCT ._PUNCT

C) tokens: Kitos dienos vienas Sostinės žurnalas tą forumą paminėjo „ Lietuva ant išklotinės “ .
tags: ADJ NOUN PRON PROPN NOUN DET NOUN VERB PUNCT PROPN ADP NOUN PUNCT PUNCT
tagged_tokens: Kitos_ADJ dienos_NOUN vienas_PRON Sostinės_PROPN žurnalas_NOUN tą_DET forumą_NOUN paminėjo_VERB „_PUNCT Lietuva_PROPN ant_ADP išklotinės_NOUN “_PUNCT ._PUNCTD) tokens: Kitą dieną vienas Londono dienraštis tą renginį pavadino „ Lietuva ant lėkštelės “ .
tags: PRON NOUN PRON PROPN NOUN DET NOUN VERB PUNCT PROPN ADP NOUN PUNCT PUNCT
tagged_tokens: Kitą_PRON dieną_NOUN vienas_PRON Londono_PROPN dienraštis_NOUN tą_DET renginį_NOUN pavadino_VERB „_PUNCT Lietuva_PROPN ant_ADP lėkštelės_NOUN “_PUNCT ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Puosnus pokalbis Lietuvos atstovybėje įvyko našiai ir net prasmingai .
tags: ADJ NOUN PROPN NOUN VERB ADV CCONJ PART ADV PUNCT
tagged_tokens: Puosnus_ADJ pokalbis_NOUN Lietuvos_PROPN atstovybėje_NOUN įvyko_VERB našiai_ADV ir_CCONJ net_PART prasmingai_ADV ._PUNCT

B) tokens: Smagus bendravimas Lietuvos rezidencijoje pasirodė vertingas ir net svarbus .
tags: ADJ NOUN PROPN NOUN VERB ADJ CCONJ PART ADJ PUNCT
tagged_tokens: Smagus_ADJ bendravimas_NOUN Lietuvos_PROPN rezidencijoje_NOUN pasirodė_VERB vertingas_ADJ ir_CCONJ net_PART svarbus_ADJ ._PUNCT

C) tokens: Įdomus susitikimas Lietuvos delegacijoje vyko pelningai ir net lemtingai .
tags: ADJ NOUN PROPN NOUN VERB ADV CCONJ PART ADJ PUNCT
tagged_tokens: Įdomus_ADJ susitikimas_NOUN Lietuvos_PROPN delegacijoje_NOUN vyko_VERB pelningai_ADV ir_CCONJ net_PART lemtingai_ADJ ._PUNCTD) tokens: Malonus pabendravimas Lietuvos ambasadoje buvo naudingas ir net reikšmingas .
tags: ADJ NOUN PROPN NOUN VERB ADJ CCONJ PART ADJ PUNCT
tagged_tokens: Malonus_ADJ pabendravimas_NOUN Lietuvos_PROPN ambasadoje_NOUN buvo_VERB naudingas_ADJ ir_CCONJ net_PART reikšmingas_ADJ ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""A""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Ieškojau mūsų spaudos reakcijų į tą rytmetį , bet pranešimai iš Londono būdavo kiti - kiekvienas laikraštis skelbė apie kokį nors Anglijoje įsilaužusį incidentą .
tags: VERB PRON NOUN NOUN ADP DET NOUN PUNCT CCONJ NOUN ADP PROPN AUX PRON PUNCT DET NOUN VERB ADP PRON PROPN VERB NOUN PUNCT
tagged_tokens: Ieškojau_VERB mūsų_PRON spaudos_NOUN reakcijų_NOUN į_ADP tą_DET rytmetį_NOUN ,_PUNCT bet_CCONJ pranešimai_NOUN iš_ADP Londono_PROPN būdavo_AUX kiti_PRON -_PUNCT kiekvienas_DET laikraštis_NOUN skelbė_VERB apie_ADP kokį_PRON nors_AuxPRT Anglijoje_PROPN įsilaužusį_VERB incidentą_NOUN ._PUNCT

B) tokens: Ieškojau mūsų žurnalistikos atgarsio dėl to rytmečio , o naujienos iš Londono darėsi kitos - visiškai laikraščiai rašinėjo apie tam tikrą Anglijoje susiklosčiusią situaciją .
tags: VERB PRON NOUN NOUN ADP DET NOUN PUNCT CCONJ NOUN ADP PROPN AUX PRON PUNCT DET NOUN VERB ADP DET PROPN VERB NOUN PUNCT
tagged_tokens: Ieškojau_VERB mūsų_PRON žurnalistikos_NOUN atgarsio_NOUN dėl_ADP to_DET rytmečio_NOUN ,_PUNCT o_CCONJ naujienos_NOUN iš_ADP Londono_PROPN darėsi_AUX kitos_PRON -_PUNCT visiškai_DET laikraščiai_NOUN rašinėjo_VERB apie_ADP tam_DET tikrą_PROPN Anglijoje_PROPN susiklosčiusią_VERB situaciją_NOUN ._PUNCT

C) tokens: Ieškojau mūsų informacijos atmečio apie tą rytmečio , tačiau žinutaės iš Londono keisdavosi kitos - ne vienas laikraštis kalbėjo apie kokią nors Anglijoje įsitraukusią aibę .
tags: VERB PRON NOUN NOUN ADP DET NOUN PUNCT CCONJ NOUN ADP PROPN AUX PRON PUNCT NEG DET NOUN VERB ADP PRON PROPN VERB NOUN PUNCT
tagged_tokens: Ieškojau_VERB mūsų_PRON informacijos_NOUN atmečio_NOUN apie_ADP tą_DET rytmečio_NOUN ,_PUNCT tačiau_CCONJ žinutaės_NOUN iš_ADP Londono_PROPN keisdavosi_AUX kitos_PRON -_PUNCT ne_NEG vienas_DET laikraštis_NOUN kalbėjo_VERB apie_ADP kokią_PRON nors_AuxPRT Anglijoje_PROPN įsitraukusią_VERB aibę_NOUN ._PUNCTD) tokens: Ieškojau mūsų žiniasklaidoje atgarsių apie tą rytmetį , tačiau žinios iš Londono buvo kitokios - visi laikraščiai rašė apie kažkokią Anglijoje įvykusią avariją .
tags: VERB PRON NOUN NOUN ADP DET NOUN PUNCT CCONJ NOUN ADP PROPN AUX PRON PUNCT DET NOUN VERB ADP PRON PROPN VERB NOUN PUNCT
tagged_tokens: Ieškojau_VERB mūsų_PRON žiniasklaidoje_NOUN atgarsių_NOUN apie_ADP tą_DET rytmetį_NOUN ,_PUNCT tačiau_CCONJ žinios_NOUN iš_ADP Londono_PROPN buvo_AUX kitokios_PRON -_PUNCT visi_DET laikraščiai_NOUN rašė_VERB apie_ADP kažkokią_PRON Anglijoje_PROPN įvykusią_VERB avariją_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Tarsi jokio kito renginio , susiejo Lietuvą su Londonu , neįvyktų .
tags: PART PRON PRON NOUN PUNCT VERB PROPN ADP PROPN PUNCT PART_VERB PUNCT
tagged_tokens: Tarsi_PART jokio_PRON kito_PRON renginio_NOUN ,_PUNCT susiejo_VERB Lietuvą_PROPN su_ADP Londonu_PROPN ,_PUNCT neįvyktų_PART_VERB ._PUNCT

B) tokens: Taip lyg visai kitų įvykių , siejančių Londoną su Lietuva , nebūtų .
tags: ADV PART ADJ PRON NOUN PUNCT VERB PROPN ADP PROPN PUNCT PART_VERB PUNCT
tagged_tokens: Taip_ADV lyg_PART visai_ADJ kitų_PRON įvykių_NOUN ,_PUNCT siejančių_VERB Londoną_PROPN su_ADP Lietuva_PROPN ,_PUNCT nebūtų_PART_VERB ._PUNCT

C) tokens: Nors kitokių reikalų , jungiančių Lietuvą ir Londoną , nebūna .
tags: SCONJ ADJ PRON PUNCT VERB PROPN CONJ PROPN PUNCT PART_VERB PUNCT
tagged_tokens: Nors_SCONJ kitokių_ADJ reikalų_PRON ,_PUNCT jungiančių_VERB Lietuvą_PROPN ir_CONJ Londoną_PROPN ,_PUNCT nebūna_PART_VERB ._PUNCTD) tokens: Lyg nieko kito Londone , susijusio su Lietuva , nevyktų .
tags: PART PRON PRON PROPN PUNCT VERB ADP PROPN PUNCT VERB PUNCT
tagged_tokens: Lyg_PART nieko_PRON kito_PRON Londone_PROPN ,_PUNCT susijusio_VERB su_ADP Lietuva_PROPN ,_PUNCT nevyktų_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Daugiau apstulbino , kai į kokias nors nuotykius atsidūręs žmogus , suklaidinęs mano sūnų , pritraukė įgrįstų paparacų smalsumą dėl manęs .
tags: ADV VERB PUNCT SCONJ ADP DET NOUN VERB NOUN PUNCT VERB PRON NOUN PUNCT VERB ADJ NOUN NOUN PRON PUNCT
tagged_tokens: Daugiau_ADV apstulbino_VERB ,_PUNCT kai_SCONJ į_ADP kokias nors_DET nuotykius_NOUN atsidūręs_VERB žmogus_NOUN ,_PUNCT suklaidinęs_VERB mano_PRON sūnų_NOUN ,_PUNCT pritraukė_VERB įgrįstų_ADJ paparacų_NOUN smalsumą_NOUN dėl_PRON manęs_NOUN ._PUNCT

B) tokens: Gerokai sukrėtė , kai į vienokias ar kitokias bėdas patekęs asmuo , klaidžiai prisistatęs mano sūnaus vardu , sukėlė nepaliaujamų paparacų susidomėjimą man .
tags: ADV VERB PUNCT SCONJ ADP ADJ CONJ ADJ NOUN VERB NOUN PUNCT ADV VERB PRON NOUN GEN PUNCT VERB ADJ NOUN NOUN PRON PUNCT
tagged_tokens: Gerokai_ADV sukrėtė_VERB ,_PUNCT kai_SCONJ į_ADP vienokias_ADJ ar_CONJ kitokias_ADJ bėdas_NOUN patekęs_VERB asmuo_NOUN ,_PUNCT klaidžiai_ADV prisistatęs_VERB mano_PRON sūnaus_NOUN vardu_NOUN ,_PUNCT sukėlė_VERB nepaliaujamų_ADJ paparacų_NOUN susidomėjimą_NOUN man_PRON ._PUNCT

C) tokens: Stipriai nustebino , kai į  tam tikras problemas įkliuvęs gyventojas , nemeliškai pavadinęs mano sūnumi , sprogdino gudrių paparacų žingeidumą tarpusavyje .
tags: ADV VERB PUNCT SCONJ ADP DET NOUN VERB NOUN PUNCT ADV VERB PRON NOUN INS PUNCT VERB ADJ NOUN NOUN PRON PUNCT
tagged_tokens: Stipriai_ADV nustebino_VERB ,_PUNCT kai_SCONJ į_ADP tam_DET tikras_NOUN problemas_NOUN įkliuvęs_VERB gyventojas_NOUN ,_PUNCT nemeliškai_ADV pavadinęs_VERB mano_PRON sūnumi_NOUN ,_PUNCT sprogdino_VERB gudrių_ADJ paparacų_NOUN žingeidumą_NOUN tarpusavyje_PRON ._PUNCTD) tokens: Dar labiau pribloškė , kai į kažkokias peripetijas papuolęs pilietis , klaidinančiai pasivadinęs mano sūnėnu , sukėlė įkyrų paparacų domėjimąsi manimi .
tags: PART ADV VERB PUNCT SCONJ ADP PRON NOUN VERB NOUN PUNCT ADV VERB PRON NOUN PUNCT VERB ADJ NOUN NOUN PRON PUNCT
tagged_tokens: Dar_PART labiau_ADV pribloškė_VERB ,_PUNCT kai_SCONJ į_ADP kažkokias_PRON peripetijas_NOUN papuolęs_VERB pilietis_NOUN ,_PUNCT klaidinančiai_ADV pasivadinęs_VERB mano_PRON sūnėnu_NOUN ,_PUNCT sukėlė_VERB įkyrų_ADJ paparacų_NOUN domėjimąsi_NOUN manimi_PRON ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Nevienas iš šitų žmonių nė neklausė , ką aš darau Londone .
tags: PRON X ADP DET NOUN PART PART VERB PUNCT PRON PRON VERB PROPN PUNCT
tagged_tokens: Nevienas_PRON iš_X šitų_ADP žmonių_DET nė_PART neklausė_VERB ,_PUNCT ką_PRON aš_PRON darau_VERB Londone_PROPN ._PUNCT

B) tokens: Nėra nė vieno iš tų asmenų , kuris bent paklaustų , ką aš atlieku Londone .
tags: AUX PART NUM ADP DET NOUN PUNCT PRON ADV VERB PUNCT PRON PRON VERB PROPN PUNCT
tagged_tokens: Nėra_AUX nė_PART vieno_NUM iš_ADP tų_DET asmenų_NOUN ,_PUNCT kuris_PRON bent_ADV paklaustų_VERB ,_PUNCT ką_PRON aš_PRON atlieku_VERB Londone_PROPN ._PUNCT

C) tokens: Nė vienam iš tų pašnekovų nesirūpėjo , ką aš užsiimu Londone .
tags: PRON NUM ADP DET NOUN PART VERB PUNCT PRON PRON VERB PROPN PUNCT
tagged_tokens: Nė_PRON vienam_NUM iš_ADP tų_DET pašnekovų_NOUN nesirūpėjo_PART VERB ,_PUNCT ką_PRON aš_PRON užsiimu_VERB Londone_PROPN ._PUNCTD) tokens: Nė vienas iš tų skambinusiųjų net nepasidomėjo , ką aš veikiu Londone .
tags: PRON X ADP DET VERB PART VERB PUNCT PRON PRON VERB PROPN PUNCT
tagged_tokens: Nė_PRON vienas_X iš_ADP tų_DET skambinusiųjų_VERB net_PART nepasidomėjo_VERB ,_PUNCT ką_PRON aš_PRON veikiu_VERB Londone_PROPN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""A""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Todėl , matant iš Londono mūsų egzistencija yra toks kraštas su kiekvieną dieną skaitytomis tomis pat žiniomis ir vardais , kad , sąžiningai kalbant , ima vis labiau suprantu iš čia išsikraustančius .
tags: PART PUNCT VERB ADP PROPN PRON NOUN AUX DET NOUN ADP ADV ADV VERB DET X NOUN CCONJ NOUN PUNCT PUNCT PUNCT ADV VERB PUNCT VERB ADV ADV VERB ADP ADV VERB PUNCT
tagged_tokens: Todėl_PART ,_PUNCT matant_VERB iš_ADP Londono_PROPN mūsų_PRON egzistencija_NOUN yra_AUX toks_DET kraštas_NOUN su_ADP kiekvieną_ADV skaitytomis_ADV tomis_DET pat_X žiniomis_NOUN ir_CCONJ vardais_NOUN ,_PUNCT kad_PUNCT ,_PUNCT sąžiningai_ADV kalbant_VERB ,_PUNCT ima_VERB vis_ADV labiau_ADV suprantu_VERB iš_ADP čia_ADV išsikraustančius_VERB ._PUNCT

B) tokens: Vadinasi , stebint iš Londono visa mūsų būvis yra toks apylinkė su kasdien šalomis tomis pačiomis žiniomis ir pavardėmis , kad , tiesiai šviesiai sakant , pradedu vis labiau priimti iš čia pasitraukiančius .
tags: PART PUNCT VERB ADP PROPN DET PRON NOUN AUX DET NOUN ADP ADV VERB DET X NOUN CCONJ NOUN PUNCT PUNCT PUNCT ADV VERB PUNCT VERB ADV ADV VERB ADP ADV VERB PUNCT
tagged_tokens: Vadinasi_PART ,_PUNCT stebint_VERB iš_ADP Londono_PROPN visa_DET mūsų_PRON būvis_NOUN yra_AUX toks_DET apylinkė_NOUN su_ADP kasdien_ADV šalomis_VERB tomis_DET pačiomis_X žiniomis_NOUN ir_CCONJ pavardėmis_NOUN ,_PUNCT kad_PUNCT ,_PUNCT tiesiai_ADV šviesiai_ADV sakant_VERB ,_PUNCT pradedu_VERB vis_ADV labiau_ADV priimti_VERB iš_ADP čia_ADV pasitraukiančius_VERB ._PUNCT

C) tokens: Taip , regint iš Londono visos mūsų realybė yra toks regionas su kasdien rutininėmis tomis pačiomis žiniomis ir pavardėmis , kad , nuoširdžiai sakant , ima vis labiau gerbti iš čia iškeliaujančius .
tags: PART PUNCT VERB ADP PROPN DET PRON NOUN AUX DET NOUN ADP ADV ADJ DET X NOUN CCONJ NOUN PUNCT PUNCT PUNCT ADV VERB PUNCT VERB ADV ADV VERB ADP ADV VERB PUNCT
tagged_tokens: Taip_PART ,_PUNCT regint_VERB iš_ADP Londono_PROPN visos_DET mūsų_PRON realybė_NOUN yra_AUX toks_DET regionas_NOUN su_ADP kasdien_ADV rutininėmis_ADJ tomis_DET pačiomis_X žiniomis_NOUN ir_CCONJ pavardėmis_NOUN ,_PUNCT kad_PUNCT ,_PUNCT nuoširdžiai_ADV sakant_VERB ,_PUNCT ima_VERB vis_ADV labiau_ADV gerbti_VERB iš_ADP čia_ADV iškeliaujančius_VERB ._PUNCTD) tokens: Taigi , žvelgiant iš Londono visas mūsų gyvenimėlis yra tokia provincija su kasdien malamomis tomis pačiomis žiniomis ir pavardėmis , kad , atvirai sakant , pradedu visiškai toleruoti iš čia išvažiuojančiuosius .
tags: PART PUNCT VERB ADP PROPN DET PRON NOUN AUX DET NOUN ADP ADV VERB DET X NOUN CCONJ NOUN PUNCT PUNCT PUNCT ADV VERB PUNCT VERB ADV VERB ADP ADV VERB PUNCT
tagged_tokens: Taigi_PART ,_PUNCT žvelgiant_VERB iš_ADP Londono_PROPN visas_DET mūsų_PRON gyvenimėlis_NOUN yra_AUX tokia_DET provincija_NOUN su_ADP kasdien_ADV malamomis_VERB tomis_DET pačiomis_X žiniomis_NOUN ir_CCONJ pavardėmis_NOUN ,_PUNCT kad_PUNCT ,_PUNCT atvirai_ADV sakant_VERB ,_PUNCT pradedu_VERB visiškai_ADV toleruoti_VERB iš_ADP čia_ADV išvažiuojančiuosius_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""A""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Jie , parinkę vakarėlių šalis , vis dėlto turi galimybių žengti į priekį , nutolti nuo senamadiško ir neretai durno lietuvių mąstymo , tinginystės , šlykštumo , nešvankumo , nepaprastų mastų kyšininkavimo ir siaučiančio alkoholizmo .
tags: PRON PUNCT VERB NOUN NOUN PUNCT ADV PART VERB NOUN VERB ADP ADV PUNCT VERB ADP ADJ CCONJ ADV ADJ NOUN NOUN PUNCT NOUN PUNCT NOUN PUNCT NOUN PUNCT VERB NOUN NOUN CCONJ VERB NOUN PUNCT
tagged_tokens: Jie_PRON ,_PUNCT parinkę_VERB vakarėlių_NOUN šalis_NOUN ,_PUNCT vis_ADV dėlto_PART turi_VERB galimybių_NOUN žengti_VERB į_ADP priekį_ADV ,_PUNCT nutolti_VERB nuo_ADP senamadiško_ADJ ir_CCONJ neretai_ADV durno_ADJ lietuvių_NOUN mąstymo_NOUN ,_PUNCT tinginystės_NOUN ,_PUNCT šlykštumo_NOUN ,_PUNCT nešvankumo_NOUN ,_PUNCT nepaprastų_VERB mastų_NOUN kyšininkavimo_NOUN ir_CCONJ siaučiančio_VERB alkoholizmo_NOUN ._PUNCT

B) tokens: Jie , išsirinkę vakarines sritis , vis tiek turi progų stumtis tolyn , nusileisti nuo atgyvenusio ir dažniausiai kvailo lietuvinio požiūrio , neaktyvumo , primitivumo , bjaurumo , milžiniškų dydžių sukčiavimo ir besitęsiančio degtinės gėrimo .
tags: PRON PUNCT VERB ADJ NOUN PUNCT ADV PART VERB NOUN VERB ADV PUNCT VERB ADP ADJ CCONJ ADV ADJ ADJ NOUN PUNCT NOUN PUNCT NOUN PUNCT NOUN PUNCT DIDELIŲ_VERB dydžių_NOUN sukčiavimo_NOUN ir_CCONJ besitęsiančio_VERB degtinės_NOUN gėrimo_NOUN ._PUNCT
tagged_tokens: Jie_PRON ,_PUNCT išsirinkę_VERB vakarines_ADJ sritis_NOUN ,_PUNCT vis_ADV tiek_PART turi_VERB progų_NOUN stumtis_VERB tolyn_ADV ,_PUNCT nusileisti_VERB nuo_ADP atgyvenusio_ADJ ir_CCONJ dažniausiai_ADV kvailo_ADJ lietuvinio_ADJ požiūrio_NOUN ,_PUNCT neaktyvumo_NOUN ,_PUNCT primitivumo_NOUN ,_PUNCT bjaurumo_NOUN ,_PUNCT milžiniškų_VERB dydžių_NOUN sukčiavimo_NOUN ir_CCONJ besitęsiančio_VERB degtinės_NOUN gėrimo_NOUN ._PUNCT

C) tokens: Jie , nusprendę vakariškas teritorijas , vis vien turi galimybių judėti aukštyn , atsiriboti nuo nusistovėjusio ir dažnai muilo lietuviško požiūrio , tingumo , nemandagumo , šiukšlumo , nesuprantamų mastų vagystės ir įsibėgėjusio alko vartojimo .
tags: PRON PUNCT VERB ADJ NOUN PUNCT ADV PART VERB NOUN VERB ADV PUNCT VERB ADP ADJ CCONJ ADV NOUN ADJ NOUN PUNCT NOUN PUNCT NOUN PUNCT NOUN PUNCT VERB NOUN NOUN CCONJ VERB NOUN NOUN PUNCT
tagged_tokens: Jie_PRON ,_PUNCT nusprendę_VERB vakariškas_ADJ teritorijas_NOUN ,_PUNCT vis_ADV vien_PART turi_VERB galimybių_NOUN judėti_VERB aukštyn_ADV ,_PUNCT atsiriboti_VERB nuo_ADP nusistovėjusio_ADJ ir_CCONJ dažnai_ADV muilo_NOUN lietuviško_ADJ požiūrio_NOUN ,_PUNCT tingumo_NOUN ,_PUNCT nemandagumo_NOUN ,_PUNCT šiukšlumo_NOUN ,_PUNCT nesuprantamų_VERB mastų_NOUN vagystės_NOUN ir_CCONJ įsibėgėjusio_VERB alko_NOUN vartojimo_NOUN ._PUNCTD) tokens: Jie , pasirinkę vakarietiškus kraštus , bent jau turi šansų eiti pirmyn , tolti nuo konservatyvaus ir dažnai buko lietuviško mentaliteto , neveiklumo , chamizmo , vulgarumo , nesuvokiamų dydžių korupcijos ir klestinčio girtuokliavimo .
tags: PRON PUNCT VERB ADJ NOUN PUNCT PART PART VERB NOUN VERB ADV PUNCT VERB ADP ADJ CCONJ ADV NOUN ADJ NOUN PUNCT NOUN PUNCT NOUN PUNCT NOUN PUNCT VERB NOUN NOUN CCONJ VERB NOUN PUNCT
tagged_tokens: Jie_PRON ,_PUNCT pasirinkę_VERB vakarietiškus_ADJ kraštus_NOUN ,_PUNCT bent_PART jau_PART turi_VERB šansų_NOUN eiti_VERB pirmyn_ADV ,_PUNCT tolti_VERB nuo_ADP konservatyvaus_ADJ ir_CCONJ dažnai_ADV buko_NOUN lietuviško_ADJ mentaliteto_NOUN ,_PUNCT neveiklumo_NOUN ,_PUNCT chamizmo_NOUN ,_PUNCT vulgarumo_NOUN ,_PUNCT nesuvokiamų_VERB dydžių_NOUN korupcijos_NOUN ir_CCONJ klestinčio_VERB girtuokliavimo_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Kokio_NOUN meno_NOUN galėtume_VERB imtis_VERB ,_PUNCT jei_SCONJ net_PART antstolio_NOUN D_X ._PUNCT Dolskio_PROPN statinys_NOUN paverčiamas_VERB vien_PRON sąskaitynės_NOUN aikštėle_NOUN tarp_ADP „_PUNCT geri_ADV “_PUNCT ir_CCONJ „_PUNCT blogi_ADV “_PUNCT saviečių_NOUN ._PUNCT
tags: DET NOUN VERB VERB PUNCT SCONJ PART NOUN X PUNCT PROPN NOUN VERB PRON NOUN NOUN ADP PUNCT ADV PUNCT CCONJ PUNCT ADV PUNCT NOUN PUNCT
tagged_tokens: Kokio_DET meno_NOUN galėtume_VERB imtis_VERB ,_PUNCT jei_SCONJ net_PART antstolio_NOUN D_X ._PUNCT Dolskio_PROPN statinys_NOUN paverčiamas_VERB vien_PRON sąskaitynės_NOUN aikštėle_NOUN tarp_ADP „_PUNCT geri_ADV “_PUNCT ir_CCONJ „_PUNCT blogi_ADV “_PUNCT saviečių_NOUN ._PUNCT

B) tokens: Apie_ADP ką_DET meninę_NOUN veiklą_NOUN turime_VERB tartis_VERB ,_PUNCT jeigu_SCONJ net_PART paminklas_NOUN D_X ._PUNCT Dolskiam_PROPN taps_VERB tam_PRON skaičių_NOUN suderinimui_NOUN tarp_ADP „_PUNCT puikūs_ADV “_PUNCT ir_CCONJ „_PUNCT prastūs_ADV “_PUNCT pačių_NOUN ._PUNCT
tags: ADP DET ADJ NOUN VERB VERB PUNCT SCONJ PART NOUN X PUNCT PROPN VERB PRON NOUN NOUN ADP PUNCT ADV PUNCT CCONJ PUNCT ADV PUNCT NOUN PUNCT
tagged_tokens: Apie_ADP ką_DET meninę_ADJ veiklą_NOUN turime_VERB tartis_VERB ,_PUNCT jeigu_SCONJ net_PART paminklas_NOUN D_X ._PUNCT Dolskiam_PROPN taps_VERB tam_PRON skaičių_NOUN suderinimui_NOUN tarp_ADP „_PUNCT puikūs_ADV “_PUNCT ir_CCONJ „_PUNCT prastūs_ADV “_PUNCT pačių_NOUN ._PUNCT

C) tokens: Koks_DET meno_NOUN užsiėmimas_NOUN mums_PRON belieka_VERB aptarti_VERB ,_PUNCT kada_SCONJ net_PART paminklo_NOUN D_X ._PUNCT Dolskyje_PROPN įrengimas_NOUN virsta_VERB tik_PRON skaitmenų_NOUN sudėliojimu_NOUN tarp_ADP „_PUNCT šaunūs_ADV “_PUNCT ir_CCONJ „_PUNCT silpni_ADV “_PUNCT savininkų_NOUN ._PUNCT
tags: DET NOUN NOUN PRON VERB VERB PUNCT SCONJ PART NOUN X PUNCT PROPN NOUN VERB PRON NOUN NOUN ADP PUNCT ADV PUNCT CCONJ PUNCT ADV PUNCT NOUN PUNCT
tagged_tokens: Koks_DET meno_NOUN užsiėmimas_NOUN mums_PRON belieka_VERB aptarti_VERB ,_PUNCT kada_SCONJ net_PART paminklo_NOUN D_X ._PUNCT Dolskyje_PROPN įrengimas_NOUN virsta_VERB tik_PRON skaitmenų_NOUN sudėliojimu_NOUN tarp_ADP „_PUNCT šaunūs_ADV “_PUNCT ir_CCONJ „_PUNCT silpni_ADV “_PUNCT savininkų_NOUN ._PUNCTD) tokens: Apie kokį meną galime kalbėti , kai net paminklėlio D . Dolskiui statyba tampa kažkokių sąskaitų suvedinėjimu tarp „ labai “ ir „ nelabai “ savų .
tags: ADP DET NOUN VERB VERB PUNCT SCONJ PART NOUN X PUNCT PROPN NOUN VERB PRON NOUN NOUN ADP PUNCT ADV PUNCT CCONJ PUNCT ADV PUNCT NOUN PUNCT
tagged_tokens: Apie_ADP kokį_DET meną_NOUN galime_VERB kalbėti_VERB ,_PUNCT kai_SCONJ net_PART paminklėlio_NOUN D_X ._PUNCT Dolskiui_PROPN statyba_NOUN tampa_VERB kažkokių_PRON sąskaitų_NOUN suvedinėjimu_NOUN tarp_ADP „_PUNCT labai_ADV “_PUNCT ir_CCONJ „_PUNCT nelabai_ADV “_PUNCT savų_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""A""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Pagarba , vienijanti įvairios kilmės žmones , mūsų krašte yra tik lūkesčiai iš svetimiems savo , nesąlyginai ir įsipareigojimo pojūčio požiūriu .
tags: NOUN PUNCT VERB ADJ NOUN NOUN PUNCT PRON NOUN VERB PART NOUN ADP ADJ PRON PUNCT ADV CCONJ NOUN NOUN ADP PUNCT
tagged_tokens: Pagarba_NOUN ,_PUNCT vienijanti_VERB įvairios_ADJ kilmės_NOUN žmones_NOUN ,_PUNCT mūsų_PRON krašte_NOUN yra_VERB tik_PART lūkesčiai_NOUN iš_ADP svetimiems_ADJ savo_PRON ,_PUNCT nesąlyginai_ADV ir_CCONJ įsipareigojimo_NOUN pojūčio_NOUN požiūriu_ADP ._PUNCT

B) tokens: Įtampa , skatinanti dalyvauti veikloje , kuri apima skirtingos tautos piliečius , mūsų šalyje būna vien savanaudiški reikalai nuo kitus sau , be atsakomybinio ir etinio poelgio kitiems .
tags: NOUN PUNCT VERB VERB NOUN PUNCT DET VERB ADJ NOUN NOUN PUNCT PRON NOUN VERB PART ADJ NOUN ADP PRON PRON PUNCT ADP ADJ CCONJ NOUN NOUN PRON PUNCT
tagged_tokens: Įtampa_NOUN ,_PUNCT skatinanti_VERB dalyvauti_VERB veikloje_NOUN ,_PUNCT kuri_DET apima_VERB skirtingos_ADJ tautos_NOUN piliečius_NOUN ,_PUNCT mūsų_PRON šalyje_NOUN būna_VERB vien_PART savanaudiški_ADJ reikalai_NOUN nuo_ADP kitus_PRON sau_PRON ,_PUNCT be_ADP atsakomybinio_ADJ ir_CCONJ etinio_ADJ poelgio_NOUN kitiems_PRON ._PUNCT

C) tokens: Nuosaikumas , kuris leidžia bendrauti įvairaus pobūdžio bendruomenėse , mūsų taryboje yra vien laukimai iš svetimkraščių savo , be prisiimant ir moralinio įžvalgumo kitiems .
tags: NOUN PUNCT PRON VERB VERB ADJ NOUN NOUN PUNCT PRON NOUN VERB PART NOUN ADP ADJ PRON PUNCT ADP VERB CCONJ NOUN NOUN PRON PUNCT
tagged_tokens: Nuosaikumas_NOUN ,_PUNCT kuris_PRON leidžia_VERB bendrauti_VERB įvairaus_ADJ pobūdžio_NOUN bendruomenėse_NOUN ,_PUNCT mūsų_PRON taryboje_NOUN yra_VERB vien_PART laukimai_NOUN iš_ADP svetimkraščių_ADJ savo_PRON ,_PUNCT be_ADP prisiimant_VERB ir_CCONJ moralinio_ADJ įžvalgumo_NOUN kitiems_PRON ._PUNCTD) tokens: Tolerancija , kuri dominuoja vakarietiškoje kultūroje , pas mus tėra tik reikalavimai iš kitų sau , be atsakomybės ir pareigos jausmo kitiems .
tags: NOUN PUNCT DET VERB ADJ NOUN PUNCT ADP PRON VERB PART NOUN ADP PRON PRON PUNCT ADP NOUN CCONJ NOUN NOUN PRON PUNCT
tagged_tokens: Tolerancija_NOUN ,_PUNCT kuri_DET dominuoja_VERB vakarietiškoje_ADJ kultūroje_NOUN ,_PUNCT pas_ADP mus_PRON tėra_VERB tik_PART reikalavimai_NOUN iš_ADP kitų_PRON sau_PRON ,_PUNCT be_ADP atsakomybės_NOUN ir_CCONJ pareigos_NOUN jausmo_NOUN kitiems_PRON ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Tarp kitko , kada būsite Londone , išgirskite , kokią muziką skleidžia ten dirbančios radijo stotys .
tags: PART PUNCT ADV VERB PROPN PUNCT VERB PUNCT DET NOUN VERB ADV VERB NOUN NOUN PUNCT
tagged_tokens: Tarp_PART kitko_NOUN ,_PUNCT kada_ADV būsite_VERB Londone_PROPN ,_PUNCT išgirskite_VERB ,_PUNCT kokią_DET muziką_NOUN skleidžia_VERB ten_ADV dirbančios_VERB radijo_NOUN stotys_NOUN ._PUNCT

B) tokens: Šalia to , kai būsite Londone , ausis pasimerkite , kokią muziką pateikia ten funkcionuojančios radijo stotys .
tags: PART PUNCT SCONJ VERB PROPN PUNCT NOUN VERB PUNCT DET NOUN VERB ADV VERB NOUN NOUN PUNCT
tagged_tokens: Šalia_PART to_PRON ,_PUNCT kai_SCONJ būsite_VERB Londone_PROPN ,_PUNCT ausis_NOUN pasimerkite_VERB ,_PUNCT kokią_DET muziką_NOUN pateikia_VERB ten_ADV funkcionuojančios_VERB radijo_NOUN stotys_NOUN ._PUNCT

C) tokens: Be to , kai būsite Londone , paklausykite , kokią muziką rodo ten esančios radijo stotys .
tags: PART PUNCT SCONJ VERB PROPN PUNCT VERB PUNCT DET NOUN VERB ADV VERB NOUN NOUN PUNCT
tagged_tokens: Be_PART to_NOUN ,_PUNCT kai_SCONJ būsite_VERB Londone_PROPN ,_PUNCT paklausykite_VERB ,_PUNCT kokią_DET muziką_NOUN rodo_VERB ten_ADV esančios_VERB radijo_NOUN stotys_NOUN ._PUNCTD) tokens: Beje , kai būsite Londone , pasiklausykite , kokią muziką transliuoja ten veikiančios radijo stotys .
tags: PART PUNCT SCONJ VERB PROPN PUNCT VERB PUNCT DET NOUN VERB ADV VERB NOUN NOUN PUNCT
tagged_tokens: Beje_PART ,_PUNCT kai_SCONJ būsite_VERB Londone_PROPN ,_PUNCT pasiklausykite_VERB ,_PUNCT kokią_DET muziką_NOUN transliuoja_VERB ten_ADV veikiančios_VERB radijo_NOUN stotys_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Neišklausysite giesmių , kur „ ginčijamasi “ , kokios merginos kainodara , - tokios pasigirdo vienoje Kauno kavinėje pietams .
tags: VERB NOUN PUNCT DET PUNCT VERB PUNCT PUNCT DET NOUN NOUN PUNCT PUNCT DET VERB PRON PROPN NOUN NOUN NOUN PUNCT
tagged_tokens: Neišklausysite_VERB giesmių_NOUN ,_PUNCT kur_DET „_PUNCT ginčijamasi_VERB “_PUNCT ,_PUNCT kokios_DET merginos_NOUN kainodara_NOUN ,_PUNCT -_PUNCT tokios_DET pasigirdo_VERB vienoje_PRON Kauno_PROPN kavinėje_NOUN pietams_NOUN ._PUNCT

B) tokens: Neišgirsite melodių , kuriuose „ diskusijos “ , kokia moteris tarifas , - tokį išgirdau vienoje Kauno kavinėje pietų laikas .
tags: VERB NOUN PUNCT DET PUNCT NOUN PUNCT PUNCT DET NOUN NOUN PUNCT PUNCT DET VERB PRON PROPN NOUN NOUN NOUN PUNCT
tagged_tokens: Neišgirsite_VERB melodių_NOUN ,_PUNCT kuriuose_DET „_PUNCT diskusijos_NOUN “_PUNCT ,_PUNCT kokia_DET moteris_NOUN tarifas_NOUN ,_PUNCT -_PUNCT tokį_DET išgirdau_VERB vienoje_PRON Kauno_PROPN kavinėje_NOUN pietų_NOUN laikas_NOUN ._PUNCT

C) tokens: Neišgirsite dainuojamų , kur „ klausimai “ , kokio bordelinės vertė , - tokį išgirdau vienoje Kauno kavinėje pietų metas .
tags: VERB VERB PUNCT DET PUNCT NOUN PUNCT PUNCT DET NOUN NOUN PUNCT PUNCT DET VERB PRON PROPN NOUN NOUN NOUN PUNCT
tagged_tokens: Neišgirsite_VERB dainuojamų_VERB ,_PUNCT kur_DET „_PUNCT klausimai_NOUN “_PUNCT ,_PUNCT kokio_DET bordelinės_NOUN vertė_NOUN ,_PUNCT -_PUNCT tokį_DET išgirdau_VERB vienoje_PRON Kauno_PROPN kavinėje_NOUN pietų_NOUN metas_NOUN ._PUNCTD) tokens: Neišgirsite dainų , kuriose „ diskutuojama “ , kokia prostitutės kaina , - tokią išgirdau vienoje Kauno kavinėje pietų metu .
tags: VERB NOUN PUNCT DET PUNCT VERB PUNCT PUNCT DET NOUN NOUN PUNCT PUNCT DET VERB PRON PROPN NOUN NOUN NOUN PUNCT
tagged_tokens: Neišgirsite_VERB dainų_NOUN ,_PUNCT kuriose_DET „_PUNCT diskutuojama_VERB “_PUNCT ,_PUNCT kokia_DET prostitutės_NOUN kaina_NOUN ,_PUNCT -_PUNCT tokią_DET išgirdau_VERB vienoje_PRON Kauno_PROPN kavinėje_NOUN pietų_NOUN metu_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Mėgstantiems vynelį žmonėms ta giesmė atrodė labai artima .
tags: VERB NOUN NOUN DET NOUN VERB ADV ADJ PUNCT
tagged_tokens: Mėgstantiems_VERB vynelį_NOUN žmonėms_NOUN ta_DET giesmė_NOUN atrodė_VERB labai_ADV artima_ADJ ._PUNCT

B) tokens: Vyno gerėjusiems jaunimui ta melodija pasiskelbė labai savita .
tags: NOUN VERB NOUN DET NOUN VERB ADV ADJ PUNCT
tagged_tokens: Vyno_NOUN gerėjusiems_VERB jaunimui_NOUN ta_DET melodija_NOUN pasiskelbė_VERB labai_ADV savita_ADJ ._PUNCT

C) tokens: Vynučio suėdamiems jauniesiems ta akordų seka pasitvirtino labai tinkama .
tags: NOUN VERB NOUN DET NOUN NOUN VERB ADV ADJ PUNCT
tagged_tokens: Vynučio_NOUN suėdamiems_VERB jauniesiems_NOUN ta_DET akordų_NOUN seka_NOUN pasitvirtino_VERB labai_ADV tinkama_ADJ ._PUNCTD) tokens: Vyną gurkšnojusiems jaunuoliams ta daina pasirodė labai sava .
tags: NOUN VERB NOUN DET NOUN VERB ADV PRON PUNCT
tagged_tokens: Vyną_NOUN gurkšnojusiems_VERB jaunuoliams_NOUN ta_DET daina_NOUN pasirodė_VERB labai_ADV sava_PRON ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Apžiūrėkite , esdami Anglos sostinėje , kokių šviežių fasadų sieneles ir kiek yra gatvėse meno darbų , kurie stovi nepakenkti : vagiliai supranta , kad bus nedelsiant smarkiai nusausinti .
tags: VERB PUNCT VERB PROPN NOUN PUNCT DET ADJ NOUN NOUN CCONJ ADV VERB NOUN NOUN NOUN PUNCT DET VERB VERB ADJ PUNCT NOUN VERB PUNCT SCONJ AUX ADV ADV VERB PUNCT
tagged_tokens: Apžiūrėkite_VERB ,_PUNCT esdami_VERB Anglos_PROPN sostinėje_NOUN ,_PUNCT kokių_DET šviežių_ADJ fasadų_NOUN sieneles_NOUN ir_CCONJ kiek_ADV yra_VERB gatvėse_NOUN meno_NOUN darbų_NOUN ,_PUNCT kurie_DET stovi_VERB nepakenkti_VERB :_PUNCT vagiliai_NOUN supranta_VERB ,_PUNCT kad_SCONJ bus_AUX nedelsiant_ADV smarkiai_ADV nusausinti_VERB ._PUNCT

B) tokens: Peržiūrėkite , gyvendami Britanijos sostinėje , kokių tyrių fasadų sienutes ir kiek yra gatvėse meno veikalų , kurie stovi nesugadinti : niokotojai žino , kad bus tuoj pat griežtai nušluoti .
tags: VERB PUNCT VERB PROPN NOUN PUNCT DET ADJ NOUN NOUN CCONJ ADV VERB NOUN NOUN NOUN PUNCT DET VERB VERB ADJ PUNCT NOUN VERB PUNCT SCONJ AUX ADV ADV VERB PUNCT
tagged_tokens: Peržiūrėkite_VERB ,_PUNCT gyvendami_VERB Britanijos_PROPN sostinėje_NOUN ,_PUNCT kokių_DET tyrių_ADJ fasadų_NOUN sienutes_NOUN ir_CCONJ kiek_ADV yra_VERB gatvėse_NOUN meno_NOUN veikalų_NOUN ,_PUNCT kurie_DET stovi_VERB nesugadinti_VERB :_PUNCT niokotojai_NOUN žino_VERB ,_PUNCT kad_SCONJ bus_AUX tuoj ADV pat_ADV nušluoti_VERB ._PUNCT

C) tokens: Pasižiūrėkite , būnantys Anglijos sostinėje , kokių rūšių fasadų sienelės ir kiek yra gatvėse meno darinių , kurie stovi nenukentėję : barstyteliai suvokia , kad bus akimirksniu griežtai nužudomi .
tags: VERB PUNCT VERB PROPN NOUN PUNCT DET NOUN NOUN NOUN CCONJ ADV VERB NOUN NOUN NOUN PUNCT DET VERB VERB ADJ PUNCT NOUN VERB PUNCT SCONJ AUX ADV ADV VERB PUNCT
tagged_tokens: Pasižiūrėkite_VERB ,_PUNCT būnantys_VERB Anglijos_PROPN sostinėje_NOUN ,_PUNCT kokių_DET rūšių_NOUN fasadų_NOUN sienelės_NOUN ir_CCONJ kiek_ADV yra_VERB gatvėse_NOUN meno_NOUN darinių_NOUN ,_PUNCT kurie_DET stovi_VERB nenukentėję_VERB :_PUNCT barstyteliai_NOUN suvokia_VERB ,_PUNCT kad_SCONJ bus_AUX akimirksniu_ADV griežtai_ADV nužudomi_VERB ._PUNCTD) tokens: Pažvelkite , būdami Anglijos sostinėje , kokios švarios fasadų sienos ir kiek daug gatvėse meno kūrinių , kurie stovi nesužaloti : vandalai žino , kad bus tą pačią minutę griežtai nubausti .
tags: VERB PUNCT VERB PROPN NOUN PUNCT DET ADJ NOUN NOUN CCONJ ADV ADV NOUN NOUN NOUN PUNCT DET VERB VERB PUNCT NOUN VERB PUNCT SCONJ AUX DET X NOUN ADV VERB PUNCT
tagged_tokens: Pažvelkite_VERB ,_PUNCT būdami_VERB Anglijos_PROPN sostinėje_NOUN ,_PUNCT kokios_DET švarios_ADJ fasadų_NOUN sienos_NOUN ir_CCONJ kiek_ADV daug_ADV gatvėse_NOUN meno_NOUN kūrinių_NOUN ,_PUNCT kurie_DET stovi_VERB nesužaloti_VERB :_PUNCT vandalai_NOUN žino_VERB ,_PUNCT kad_SCONJ bus_AUX tą_DET pačią_X minutę_NOUN griežtai_ADV nubausti_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""A""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Taip pat nuobaudos gaus kariuomenė , suprantantys , jog niokojimas egzistuoja , ir civilizacijos ir grindžiamos pradinių taisyklių stokos padarinys .
tags: ADV VERB NOUN VERB PUNCT VERB PUNCT SCONJ NOUN VERB PUNCT CCONJ NOUN CCONJ VPART ADJ NOUN NOUN NOUN PUNCT
tagged_tokens: Taip_ADV pat_VERB nuobaudos_NOUN gaus_VERB ,_PUNCT suprantantys_VERB ,_PUNCT jog_SCONJ niokojimas_NOUN egzistuoja_VERB ,_PUNCT ir_CCONJ civilizacijos_NOUN ir_CCONJ grindžiamos_VPART pradinių_ADJ taisyklių_NOUN stokos_NOUN padarinys_NOUN ._PUNCT

B) tokens: Be to skirs bausmes policininkai , žinantys , kad destrukcija yra , bei kultūriniai ir paremti būtinų normų trūkumo rezultatas .
tags: SCONJ ADV VERB NOUN PUNCT VERB PUNCT SCONJ NOUN VERB PUNCT CCONJ ADJ CCONJ VPART ADJ NOUN NOUN NOUN PUNCT
tagged_tokens: Be_SCONJ to_ADV skirs_VERB bausmes_NOUN ,_PUNCT žinantys_VERB ,_PUNCT kad_SCONJ destrukcija_NOUN yra_VERB ,_PUNCT bei_CCONJ kultūriniai_ADJ ir_CCONJ paremti_VPART būtinų_ADJ normų_NOUN trūkumo_NOUN rezultatas_NOUN ._PUNCT

C) tokens: Dar ir baudžia valdininkai , suvokdami , jog griovimas vyksta , o kultūros ir pagrįsti esminių principų nebuvimo poveikis .
tags: ADV CCONJ VERB NOUN PUNCT VERB PUNCT SCONJ NOUN VERB PUNCT CCONJ NOUN CCONJ VPART ADJ NOUN NOUN NOUN PUNCT
tagged_tokens: Dar_ADV ir_CCONJ baudžia_VERB valdininkai_NOUN ,_PUNCT suvokdami_VERB ,_PUNCT jog_SCONJ griovimas_NOUN vyksta_VERB ,_PUNCT o_CCONJ kultūros_NOUN ir_CCONJ pagrįsti_VPART esminių_ADJ principų_NOUN nebuvimo_NOUN poveikis_NOUN ._PUNCTD) tokens: Ir baus juos pareigūnai , suvokiantys , kad vandalizmas yra , o kultūros ir besiremiančios elementarios tvarkos stygiaus pasekmė .
tags: CCONJ VERB PRON NOUN PUNCT VERB PUNCT SCONJ NOUN VERB PUNCT CCONJ NOUN CCONJ VERB ADJ NOUN NOUN NOUN PUNCT
tagged_tokens: Ir_CCONJ baus_VERB juos_PRON pareigūnai_NOUN ,_PUNCT suvokiantys_VERB ,_PUNCT kad_SCONJ vandalizmas_NOUN yra_VERB ,_PUNCT o_CCONJ kultūros_NOUN ir_CCONJ besiremiančios_VERB elementarios_ADJ tvarkos_NOUN stygiaus_NOUN pasekmė_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""A""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Petro Vaišnora iškeliauja į sceninį žygį Prancūzijoje ir JAV , kuriame su šalies simfoniniais ansambliais elitinėse erdvėse pristatys specialiai sau aranžuotas tradicines M . Ravelio , G . Rosini darbus .
tags: PROPN PROPN VERB ADP ADJ NOUN PROPN CCONJ X PUNCT PRON ADP NOUN ADJ NOUN ADJ NOUN VERB ADV PRON VERB ADJ X PUNCT PROPN PUNCT X PUNCT PROPN NOUN PUNCT
tagged_tokens: Petro_PROPN Vaišnora_PROPN iškeliauja_VERB į_ADP sceninį_ADJ žygį_NOUN Prancūzijoje_PROPN ir_CCONJ JAV_X ,_PUNCT kuriame_PRON su_ADP šalies_NOUN simfoniniais_ADJ ansambliais_NOUN elitinėse_ADJ erdvėse_NOUN pristatys_VERB specialiai_ADV sau_PRON aranžuotas_VERB tradicines_ADJ M_X ._PUNCT Ravelio_PROPN ,_PUNCT G_X ._PUNCT Rosini_PROPN darbus_NOUN ._PUNCT

B) tokens: Petrui Veišnorui išplaukia į scenos kelionę Prancūzijoje ir JAV , kurioje su nacionaliniais simfoniniais kolektyvais garbingose salėse įgarsins specialiai sau paruoštus klasifikuotus M . Ravelio , G . Rosini veikalus .
tags: PROPN PROPN VERB ADP NOUN NOUN PROPN CCONJ X PUNCT PRON ADP ADJ ADJ NOUN ADJ NOUN VERB ADV PRON VERB ADJ X PUNCT PROPN PUNCT X PUNCT PROPN NOUN PUNCT
tagged_tokens: Petrui_PROPN Veišnorui_PROPN išplaukia_VERB į_ADP scenos_NOUN kelionę_NOUN Prancūzijoje_PROPN ir_CCONJ JAV_X ,_PUNCT kurioje_PRON su_ADP nacionaliniais_ADJ simfoniniais_ADJ kolektyvais_NOUN garbingose_ADJ salėse_NOUN įgarsins_VERB specialiai_ADV sau_PRON paruoštus_VERB klasifikuotus_ADJ M_X ._PUNCT Ravelio_PROPN ,_PUNCT G_X ._PUNCT Rosini_PROPN veikalus_NOUN ._PUNCT

C) tokens: Petriui Vaišniūnui išklota į šou kelialapį Prancūzijoje ir JAV , kuriuo su valstybiniais simfoniniais rinkiniais puikiuose ventėse pateiks specialiai sau sudėliotus kategorizuotus M . Ravelio , G . Rosini darinius .
tags: PROPN PROPN VERB ADP NOUN NOUN PROPN CCONJ X PUNCT PRON ADP ADJ ADJ NOUN ADJ NOUN VERB ADV PRON VERB ADJ X PUNCT PROPN PUNCT X PUNCT PROPN NOUN PUNCT
tagged_tokens: Petriui_PROPN Vaišniūnui_PROPN išklota_VERB į_ADP šou_NOUN kelialapį_NOUN Prancūzijoje_PROPN ir_CCONJ JAV_X ,_PUNCT kuriuo_PRON su_ADP valstybiniais_ADJ simfoniniais_ADJ rinkiniais_NOUN puikiuose_ADJ ventėse_NOUN pateiks_VERB specialiai_ADV sau_PRON sudėliotus_VERB kategorizuotus_ADJ M_X ._PUNCT Ravelio_PROPN ,_PUNCT G_X ._PUNCT Rosini_PROPN darinius_NOUN ._PUNCTD) tokens: Petras Vyšniauskas išvyksta į koncertinį turą Prancūzijoje ir JAV , kur su vietiniais simfoniniais orkestrais prestižinėse salėse atliks specialiai jam aranžuotus klasikinius M . Ravelio , G . Rosini kūrinius .
tags: PROPN PROPN VERB ADP ADJ NOUN PROPN CCONJ X PUNCT ADV ADP ADJ ADJ NOUN ADJ NOUN VERB ADV PRON VERB ADJ X PUNCT PROPN PUNCT X PUNCT PROPN NOUN PUNCT
tagged_tokens: Petras_PROPN Vyšniauskas_PROPN išvyksta_VERB į_ADP koncertinį_ADJ turą_NOUN Prancūzijoje_PROPN ir_CCONJ JAV_X ,_PUNCT kur_ADV su_ADP vietiniais_ADJ simfoniniais_ADJ orkestrais_NOUN prestižinėse_ADJ salėse_NOUN atliks_VERB specialiai_ADV jam_PRON aranžuotus_VERB klasikinius_ADJ M_X ._PUNCT Ravelio_PROPN ,_PUNCT G_X ._PUNCT Rosini_PROPN kūrinius_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Dvi dilemos dėl to man kankina sąžinę : ar bus skelbiama apie tai ant pirmųjų lietuvių laikraščių lapų , kaip buvo skelbiama Londone po mūsų kuklaus pasirodymo parodoje , ir ar tas koncertas bus kartais atkartotas bent jau Vilniuje ?
tags: NUM NOUN ADP DET PRON VERB NOUN PUNCT SCONJ AUX VERB ADP DET ADP NUM ADJ NOUN NOUN PUNCT SCONJ AUX VERB PROPN ADP PRON ADJ NOUN NOUN PUNCT CCONJ SCONJ DET NOUN AUX ADV VERB PART PART PROPN PUNCT
tagged_tokens: Dvi_NUM dilemos_NOUN dėl_ADP to_DET man_PRON kankina_VERB sąžinę_NOUN :_PUNCT ar_SCONJ bus_AUX skelbiama_VERB apie_ADP tai_DET ant_ADP pirmųjų_NUM lietuvių_ADJ laikraščių_NOUN lapų_NOUN ,_PUNCT kaip_SCONJ buvo_AUX skelbiama_VERB Londone_PROPN po_ADP mūsų_PRON kuklaus_ADJ pasirodymo_NOUN parodoje_NOUN ,_PUNCT ir_CCONJ ar_SCONJ tas_DET koncertas_NOUN bus_AUX kartais_ADV atkartotas_VERB bent_PART jau_PART Vilniuje_PROPN ?_PUNCT

B) tokens: Du uždaviniai ta proga man trikdo ramybę : ar bus rašoma apie tai virš lietuvių spaudos pirmųjų lapų , kaip buvo rašoma Londone po mūsų kuklaus pasirodymo parodoje , ir ar tas koncertas bus kada nors pristatytas bent jau Vilniuje ?
tags: NUM NOUN DET NOUN PRON VERB NOUN PUNCT SCONJ AUX VERB ADP DET ADP ADJ NOUN NUM NOUN PUNCT SCONJ AUX VERB PROPN ADP PRON ADJ NOUN NOUN PUNCT CCONJ SCONJ DET NOUN AUX ADV X VERB PART PART PROPN PUNCT
tagged_tokens: Du_NUM uždaviniai_NOUN ta_DET proga_NOUN man_PRON trikdo_VERB ramybę_NOUN :_PUNCT ar_SCONJ bus_AUX rašoma_VERB apie_ADP tai_DET virš_ADP lietuvių_ADJ spaudos_NOUN pirmųjų_NUM lapų_NOUN ,_PUNCT kaip_SCONJ buvo_AUX rašoma_VERB Londone_PROPN po_ADP mūsų_PRON kuklaus_ADJ pasirodymo_NOUN parodoje_NOUN ,_PUNCT ir_CCONJ ar_SCONJ tas_DET koncertas_NOUN bus_AUX kada_ADV nors_X pristatytas_VERB bent_PART jau_PART Vilniuje_PROPN ?_PUNCT

C) tokens: Du klausimynai ta proga man neleidžia ilsėtis : ar bus skelbta apie tai viršuje lietuviškų leidinių pirmuosiuose puslapiuose , kaip buvo skelbta Londone po mūsų kuklaus pasirodymo parodoje , ir ar tas koncertas bus proga pakartojamas bent jau Vilniuje ?
tags: NUM NOUN DET NOUN PRON VERB VERB PUNCT SCONJ AUX VERB ADP DET ADP ADJ NOUN NUM NOUN PUNCT SCONJ AUX VERB PROPN ADP PRON ADJ NOUN NOUN PUNCT CCONJ SCONJ DET NOUN AUX NOUN VERB PART PART PROPN PUNCT
tagged_tokens: Du_NUM klausimynai_NOUN ta_DET proga_NOUN man_PRON neleidžia_VERB ilsėtis_VERB :_PUNCT ar_SCONJ bus_AUX skelbta_VERB apie_ADP tai_DET viršuje_ADP lietuviškų_ADJ leidinių_NOUN pirmuosiuose_NUM puslapiuose_NOUN ,_PUNCT kaip_SCONJ buvo_AUX skelbta_VERB Londone_PROPN po_ADP mūsų_PRON kuklaus_ADJ pasirodymo_NOUN parodoje_NOUN ,_PUNCT ir_CCONJ ar_SCONJ tas_DET koncertas_NOUN bus_AUX proga_NOUN pakartojamas_VERB bent_PART jau_PART Vilniuje_PROPN ?_PUNCTD) tokens: Du klausimai ta proga man neduoda ramybės : ar bus apie tai rašoma pirmuosiuose lietuviškų dienraščių puslapiuose , kaip buvo rašoma Londone po mūsų kuklaus pasirodymo parodoje , ir ar tas koncertas bus kada nors pakartotas bent jau Vilniuje ?
tags: NUM NOUN DET NOUN PRON VERB NOUN PUNCT SCONJ AUX ADP DET VERB NUM ADJ NOUN NOUN PUNCT SCONJ AUX VERB PROPN ADP PRON ADJ NOUN NOUN PUNCT CCONJ SCONJ DET NOUN AUX ADV X VERB PART PART PROPN PUNCT
tagged_tokens: Du_NUM klausimai_NOUN ta_DET proga_NOUN man_PRON neduoda_VERB ramybės_NOUN :_PUNCT ar_SCONJ bus_AUX apie_ADP tai_DET rašoma_VERB pirmuosiuose_NUM lietuviškų_ADJ dienraščių_NOUN puslapiuose_NOUN ,_PUNCT kaip_SCONJ buvo_AUX rašoma_VERB Londone_PROPN po_ADP mūsų_PRON kuklaus_ADJ pasirodymo_NOUN parodoje_NOUN ,_PUNCT ir_CCONJ ar_SCONJ tas_DET koncertas_NOUN bus_AUX kada_ADV nors_X pakartotas_VERB bent_PART jau_PART Vilniuje_PROPN ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""A""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Suprantu , neįdomūs mano klausimai , tačiau geresnių šį savaitgalį neprisigalvoju ...
tags: VERB PUNCT ADJ PRON PROPN PUNCT CCONJ ADJ DET NOUN VERB PUNCT
tagged_tokens: Suprantu_VERB ,_PUNCT neįdomūs_ADJ mano_PRON klausimai_PROPN ,_PUNCT tačiau_CCONJ geresnių_ADJ šį_DET savaitgalį_NOUN neprisigalvoju_VERB ..._PUNCT

B) tokens: Matau , nesmagūs mano klausimai , bet geriausių šį savaitgalį nesugalviesi ...
tags: VERB PUNCT ADJ PRON PROPN PUNCT CCONJ ADJ DET NOUN VERB PUNCT
tagged_tokens: Matau_VERB ,_PUNCT nesmagūs_ADJ mano_PRON klausimai_PROPN ,_PUNCT bet_CCONJ geriausių_ADJ šį_DET savaitgalį_NOUN nesugalviesi_VERB ..._PUNCT

C) tokens: Žvelgiu , nelabai mano klausimai , taip geresnių šį savaitgalį nesuvedu ...
tags: VERB PUNCT ADV PRON PROPN PUNCT ADV ADJ DET NOUN VERB PUNCT
tagged_tokens: Žvelgiu_VERB ,_PUNCT nelabai_ADV mano_PRON klausimai_PROPN ,_PUNCT taip_ADV geresnių_ADJ šį_DET savaitgalį_NOUN nesuvedu_VERB ..._PUNCTD) tokens: Žinau , negeri mano klausimai , bet geresnių šį savaitgalį nebesugalvoju ...
tags: VERB PUNCT ADJ PRON PROPN PUNCT CCONJ ADJ DET NOUN VERB PUNCT
tagged_tokens: Žinau_VERB ,_PUNCT negeri_ADJ mano_PRON klausimai_PROPN ,_PUNCT bet_CCONJ geresnių_ADJ šį_DET savaitgalį_NOUN nebesugalvoju_VERB ..._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Renovuojamoje Vaidoto gynyboje vakar plyšo vandens tinklo vamzdelis .
tags: VERB PROPN NOUN ADV VERB NOUN NOUN NOUN PUNCT
tagged_tokens: Renovuojamoje_VERB Vaidoto_PROPN gynyboje_NOUN vakar_ADV plyšo_VERB vandens_NOUN tinklo_NOUN vamzdelis_NOUN ._PUNCT

B) tokens: Atnaujinamoje Vaidoto alejoje vakar skilo vandens linijos vamzdynas .
tags: VERB PROPN NOUN ADV VERB NOUN NOUN NOUN PUNCT
tagged_tokens: Atnaujinamoje_VERB Vaidoto_PROPN alejoje_NOUN vakar_ADV skilo_VERB vandens_NOUN linijos_NOUN vamzdynas_NOUN ._PUNCT

C) tokens: Taisomoje Vaidoto gatvėje vakar sprogo vandens perdavimo vamzdis .
tags: VERB PROPN NOUN ADV VERB NOUN NOUN NOUN PUNCT
tagged_tokens: Taisomoje_VERB Vaidoto_PROPN gatvėje_NOUN vakar_ADV sprogo_VERB vandens_NOUN perdavimo_NOUN vamzdis_NOUN ._PUNCTD) tokens: Remontuojamame Vaidoto gatvės ruože vakar trūko vandentiekio vamzdis .
tags: VERB PROPN NOUN NOUN ADV VERB NOUN NOUN PUNCT
tagged_tokens: Remontuojamame_VERB Vaidoto_PROPN gatvės_NOUN ruože_NOUN vakar_ADV trūko_VERB vandentiekio_NOUN vamzdis_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Bėgantis iš žarnos vanduo nuplėšė dirvą , dėl to neasfaltuotoje kelio ruože atsirado didelė duobė .
tags: VERB ADP NOUN NOUN VERB NOUN PUNCT SCONJ ADV VERB NOUN NOUN VERB ADJ NOUN PUNCT
tagged_tokens: Bėgantis_VERB iš_ADP žarnos_NOUN vanduo_NOUN nuplėšė_VERB dirvą_NOUN ,_PUNCT dėl_SCONJ to_ADV neasfaltuotoje_VERB kelio_NOUN ruože_NOUN atsirado_VERB didelė_ADJ duobė_NOUN ._PUNCT

B) tokens: Tryskantis iš angos vanduo nuėmė žemę , todėl neasfaltuotoje gatvės vietoje iškilo gili skylė .
tags: VERB ADP NOUN NOUN VERB NOUN PUNCT ADV VERB NOUN NOUN VERB ADJ NOUN PUNCT
tagged_tokens: Tryskantis_VERB iš_ADP angos_NOUN vanduo_NOUN nuėmė_VERB žemę_NOUN ,_PUNCT todėl_ADV neasfaltuotoje_VERB gatvės_NOUN vietoje_NOUN iškilo_VERB gili_ADJ skylė_NOUN ._PUNCT

C) tokens: Plūstantis iš vamzdyno vanduo nuskalė ašarą , dėl ko neasfaltuotoje kelyje pasirodė didžiulė ardys .
tags: VERB ADP NOUN NOUN VERB NOUN PUNCT SCONJ ADV VERB NOUN NOUN VERB ADJ NOUN PUNCT
tagged_tokens: Plūstantis_VERB iš_ADP vamzdyno_NOUN vanduo_NOUN nuskalė_VERB ašarą_NOUN ,_PUNCT dėl_SCONJ ko_ADV neasfaltuotoje_VERB kelyje_NOUN pasirodė_VERB didžiulė_ADJ ardys_NOUN ._PUNCTD) tokens: Tekantis iš vamzdžio vanduo išplovė gruntą , todėl neasfaltuotoje gatvės dalyje susidarė gili įduba .
tags: VERB ADP NOUN NOUN VERB NOUN PUNCT ADV VERB NOUN NOUN VERB ADJ NOUN PUNCT
tagged_tokens: Tekantis_VERB iš_ADP vamzdžio_NOUN vanduo_NOUN išplovė_VERB gruntą_NOUN ,_PUNCT todėl_ADV neasfaltuotoje_VERB gatvės_NOUN dalyje_NOUN susidarė_VERB gili_ADJ įduba_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Žmonės teigė , jog rytojau į skylę nuvažiuodavo lengva mašina .
tags: NOUN VERB PUNCT SCONJ ADV ADP NOUN VERB ADJ NOUN PUNCT
tagged_tokens: Žmonės_NOUN teigė_VERB ,_PUNCT jog_SCONJ rytojau_ADV į_ADP skylę_NOUN nuvažiuodavo_VERB lengva_ADJ mašina_NOUN ._PUNCT

B) tokens: Gyvenantys sakė , kad rytmetį į angą atvažiavo plonas automobilis .
tags: VERB VERB PUNCT SCONJ NOUN ADP NOUN VERB ADJ NOUN PUNCT
tagged_tokens: Gyvenantys_VERB sakė_VERB ,_PUNCT kad_SCONJ rytmetį_NOUN į_ADP angą_NOUN atvažiavo_VERB plonas_ADJ automobilis_NOUN ._PUNCT

C) tokens: Vietiniai tvirtino , kad rytą į bedugnę įlindo lengvutis automobilis .
tags: ADJ VERB PUNCT SCONJ NOUN ADP NOUN VERB ADJ NOUN PUNCT
tagged_tokens: Vietiniai_ADJ tvirtino_VERB ,_PUNCT kad_SCONJ rytą_NOUN į_ADP bedugnę_NOUN įlindo_VERB lengvutis_ADJ automobilis_NOUN ._PUNCTD) tokens: Gyventojai pasakojo , kad ryte į duobę buvo įvažiavęs lengvasis automobilis .
tags: NOUN VERB PUNCT SCONJ NOUN ADP NOUN AUX VERB ADJ NOUN PUNCT
tagged_tokens: Gyventojai_NOUN pasakojo_VERB ,_PUNCT kad_SCONJ ryte_NOUN į_ADP duobę_NOUN buvo_AUX įvažiavęs_VERB lengvasis_ADJ automobilis_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Darbuotojai ginėsi , jog šalia skylės stovi tvora , bet vairuotojas jos nesimatė .
tags: NOUN VERB PUNCT SCONJ ADP NOUN VERB NOUN PUNCT CCONJ NOUN PRON VERB PUNCT
tagged_tokens: Darbuotojai_NOUN ginėsi_VERB ,_PUNCT jog_SCONJ šalia_ADP skylės_NOUN stovi_VERB tvora_NOUN ,_PUNCT bet_CCONJ vairuotojas_NOUN jos_PRON nesimatė_VERB ._PUNCT

B) tokens: Darbiniai aikinosi , kad prie angos išdėta barjera , tačiau vairuotojas jos nesuprato .
tags: NOUN VERB PUNCT SCONJ ADP NOUN VERB NOUN PUNCT CCONJ NOUN PRON VERB PUNCT
tagged_tokens: Darbiniai_NOUN aikinosi_VERB ,_PUNCT kad_SCONJ prie_ADP angos_NOUN išdėta_VERB barjera_NOUN ,_PUNCT tačiau_CCONJ vairuotojas_NOUN jos_PRON nesuprato_VERB ._PUNCT

C) tokens: Darbuotojai rėmėsi , kad šalia duobos padėta aptvara , bet vairuotojas jos nematė .
tags: NOUN VERB PUNCT SCONJ ADP NOUN VERB NOUN PUNCT CCONJ NOUN PRON VERB PUNCT
tagged_tokens: Darbuotojai_NOUN rėmėsi_VERB ,_PUNCT kad_SCONJ šalia_ADP duobos_NOUN padėta_VERB aptvara_NOUN ,_PUNCT bet_CCONJ vairuotojas_NOUN jos_PRON nematė_VERB ._PUNCTD) tokens: Darbininkai teisinosi , kad prie duobės pastatyta užtvara , tačiau vairuotojas jos nepastebėjo .
tags: NOUN VERB PUNCT SCONJ ADP NOUN VERB NOUN PUNCT CCONJ NOUN PRON VERB PUNCT
tagged_tokens: Darbininkai_NOUN teisinosi_VERB ,_PUNCT kad_SCONJ prie_ADP duobės_NOUN pastatyta_VERB užtvara_NOUN ,_PUNCT tačiau_CCONJ vairuotojas_NOUN jos_PRON nepastebėjo_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: „ Tikriausiai vamzdis plyšo , kai jį sudrebino nuotekų cisterną kalinčios įmonės darbuotojai “ , - manyjo bendrovės „ Kauno vandenys “ nelaimių tarnybos vadovas Pranas Aliukevičius .
tags: PUNCT ADV NOUN VERB PUNCT SCONJ PRON VERB NOUN NOUN VERB NOUN NOUN PUNCT PUNCT PUNCT VERB NOUN PUNCT PROPN NOUN PUNCT BIKOLIS NOUN NOUN PROPN PROPN PUNCT
tagged_tokens: „_PUNCT Tikriausiai_ADV vamzdis_NOUN plyšo_VERB ,_PUNCT kai_SCONJ jį_PRON sudrebino_VERB nuotekų_NOUN cisterną_NOUN kalinčios_VERB įmonės_NOUN darbuotojai_NOUN “_PUNCT ,_PUNCT -_PUNCT manyjo_VERB bendrovės_NOUN „_PUNCT Kauno_PROPN vandenys_NOUN “_PUNCT nelaimių_BIKOLIS tarnybos_NOUN vadovas_NOUN Pranas_PROPN Aliukevičius_PROPN ._PUNCT

B) tokens: „ Ko gero vamzdis ėmė byrėti , kai jį sukraustė nuotekų liniją tiesiančios kompanijos daržininkai “ , - spekuliavo įstaigos „ Kauno vandenys “ avarijų tarnybos specialistas Pranas Aliukevičius .
tags: PUNCT SCONJ ADV NOUN VERB VERB PUNCT SCONJ PRON VERB NOUN NOUN VERB NOUN NOUN PUNCT PUNCT PUNCT VERB NOUN PUNCT PROPN NOUN PUNCT STAIGMENOS NOUN NOUN PROPN PROPN PUNCT
tagged_tokens: „_PUNCT Ko_SCONJ gero_ADV vamzdis_NOUN ėmė_VERB byrėti_VERB ,_PUNCT kai_SCONJ jį_PRON sukraustė_VERB nuotekų_NOUN liniją_NOUN tiesiančios_VERB kompanijos_NOUN daržininkai_NOUN “_PUNCT ,_PUNCT -_PUNCT spekuliavo_VERB įstaigos_NOUN „_PUNCT Kauno_PROPN vandenys_NOUN “_PUNCT avarijų_STAIGMENOS tarnybos_NOUN specialistas_NOUN Pranas_PROPN Aliukevičius_PROPN ._PUNCT

C) tokens: „ Matyt vamzdis subyrėjo , kai jį sutvirtino nuotekų trasą klojantys bendrija darininkai “ , - dominojo įmonių grupei „ Kauno vandenys “ nelaimei tarnybos vedėjas Pranas Aliukevičius .
tags: PUNCT ADV NOUN VERB PUNCT SCONJ PRON VERB NOUN NOUN VERB NOUN NOUN PUNCT PUNCT PUNCT VERB NOUN NOUN PUNCT PROPN NOUN PUNCT nelaimei NOUN NOUN PROPN PROPN PUNCT
tagged_tokens: „_PUNCT Matyt_ADV vamzdis_NOUN subyrėjo_VERB ,_PUNCT kai_SCONJ jį_PRON sutvirtino_VERB nuotekų_NOUN trasą_NOUN klojantys_VERB bendrija_NOUN darininkai_NOUN “_PUNCT ,_PUNCT -_PUNCT dominojo_VERB įmonių_NOUN grupei_NOUN „_PUNCT Kauno_PROPN vandenys_NOUN “_PUNCT nelaimei_nelaimei tarnybos_NOUN vedėjas_NOUN Pranas_PROPN Aliukevičius_PROPN ._PUNCTD) tokens: „ Greičiausiai vamzdis trūko , kai jį sujudino nuotekų vamzdyną klojančios bendrovės darbininkai “ , - svarstė įmonės „ Kauno vandenys “ avarinės tarnybos meistras Pranas Aliukevičius .
tags: PUNCT ADV NOUN VERB PUNCT SCONJ PRON VERB NOUN NOUN VERB NOUN NOUN PUNCT PUNCT PUNCT VERB NOUN PUNCT PROPN NOUN PUNCT ADJ NOUN NOUN PROPN PROPN PUNCT
tagged_tokens: „_PUNCT Greičiausiai_ADV vamzdis_NOUN trūko_VERB ,_PUNCT kai_SCONJ jį_PRON sujudino_VERB nuotekų_NOUN vamzdyną_NOUN klojančios_VERB bendrovės_NOUN darbininkai_NOUN “_PUNCT ,_PUNCT -_PUNCT svarstė_VERB įmonės_NOUN „_PUNCT Kauno_PROPN vandenys_NOUN “_PUNCT avarinės_ADJ tarnybos_NOUN meistras_NOUN Pranas_PROPN Aliukevičius_PROPN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""A""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Per visą dieną gelbėtojai taisė sprogdintą vandentiekio šaką , todėl kai kuriems Panemunės žmonėms buvo atjungtas vandens tiekimas .
tags: ADP DET NOUN NOUN VERB VERB NOUN PUNCT ADV DET PROPN NOUN VERB VERB NOUN NOUN PUNCT
tagged_tokens: Per_ADP visą_DET dieną_NOUN gelbėtojai_NOUN taisė_VERB sprogdintą_VERB vandentiekio_NOUN šaką_NOUN ,_PUNCT todėl_ADV kai_DET kuriems_NOUN Panemunės_PROPN žmonėms_NOUN buvo_VERB atjungtas_VERB vandens_NOUN tiekimas_NOUN ._PUNCT

B) tokens: Visos dienos metu techniniai darbininkai tvarkė defektą vandens linijoje , dėl kurio dalis Panemunės miestelio gyventojai neteko vandens .
tags: DET NOUN NOUN NOUN NOUN VERB VERB NOUN NOUN PUNCT ADP REL NOUN NOUN PROPN NOUN NOUN VERB NOUN PUNCT
tagged_tokens: Visos_DET dienos_NOUN metu_NOUN techniniai_NOUN darbininkai_NOUN tvarkė_VERB defektą_VERB vandens_NOUN linijoje_NOUN ,_PUNCT dėl_ADP kurio_REL dalis_NOUN Panemunės_PROPN miestelio_NOUN gyventojai_NOUN neteko_VERB vandens_NOUN ._PUNCT

C) tokens: Ištisą dieną technikai sutvarkė praskilusį vandens vamzdelį , todėl nemažai Panemunės žygiuotojų liko be vandens .
tags: DET NOUN NOUN VERB VERB NOUN NOUN PUNCT ADV PROPN NOUN NOUN VERB ADP NOUN PUNCT
tagged_tokens: Ištisą_DET dieną_NOUN technikai_NOUN sutvarkė_VERB praskilusį_VERB vandens_NOUN vamzdelį_NOUN ,_PUNCT todėl_ADV Panemunės_PROPN žygiuotojų_NOUN liko_VERB be_ADP vandens_NOUN ._PUNCTD) tokens: Visą dieną avarinės darbuotojai remontavo trūkusį vamzdį , dėl to daliai Panemunės gyventojų vanduo nebuvo tiekiamas .
tags: DET NOUN ADJ NOUN VERB VERB NOUN PUNCT ADP DET NOUN PROPN NOUN NOUN VERB VERB PUNCT
tagged_tokens: Visą_DET dieną_NOUN avarinės_ADJ darbuotojai_NOUN remontavo_VERB trūkusį_VERB vamzdį_NOUN ,_PUNCT dėl_ADP to_DET daliai_NOUN Panemunės_PROPN gyventojų_NOUN vanduo_NOUN nebuvo_VERB tiekiamas_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Panemunės kolektyvinio centro kuratoriaus dalyvė Ruta Zabielienė teigė , jog panemuniškiai ilgai kantriai , kol bus atliktas Vaidoto gatvės taisymas .
tags: PROPN NOUN NOUN NOUN NOUN PROPN PROPN VERB PUNCT SCONJ NOUN ADV ADV PUNCT SCONJ AUX VERB PROPN NOUN NOUN PUNCT
tagged_tokens: Panemunės_PROPN kolektyvinio_NOUN centro_NOUN kuratoriaus_NOUN dalyvė_NOUN Ruta_PROPN Zabielienė_PROPN teigė_VERB ,_PUNCT jog_SCONJ panemuniškiai_NOUN ilgai_ADV kantriai_ADV ,_PUNCT kol_SCONJ bus_AUX atliktas_VERB Vaidoto_PROPN gatvės_NOUN taisymas_NOUN ._PUNCT

B) tokens: Panemunės bendrojo centro vadovybės narė Rūta Zabielienė skelbė , kad panemuniškiai smarkiai trokšta , kada bus pabaigtas Vaidoto gatvės atnaujinimas .
tags: PROPN NOUN NOUN NOUN NOUN PROPN PROPN VERB PUNCT SCONJ NOUN ADV VERB PUNCT ADV AUX VERB PROPN NOUN NOUN PUNCT
tagged_tokens: Panemunės_PROPN bendrojo_NOUN centro_NOUN vadovybės_NOUN narė_NOUN Rūta_PROPN Zabielienė_PROPN skelbė_VERB ,_PUNCT kad_SCONJ panemuniškiai_NOUN smarkiai_ADV trokšta_VERB ,_PUNCT kada_ADV bus_AUX pabaigtas_VERB Vaidoto_PROPN gatvės_NOUN atnaujinimas_NOUN ._PUNCT

C) tokens: Panemunės visuomeninio centro tarybos narė Rūta Zabielienė sakėsi , kad panemuniškiai nuoširdžiai svajoja , kada bus įvykdytas Vaidoto gatvės pagerinimas .
tags: PROPN NOUN NOUN NOUN NOUN PROPN PROPN VERB PUNCT SCONJ NOUN ADV VERB PUNCT ADV AUX VERB PROPN NOUN NOUN PUNCT
tagged_tokens: Panemunės_PROPN visuomeninio_NOUN centro_NOUN tarybos_NOUN narė_NOUN Rūta_PROPN Zabielienė_PROPN sakėsi_VERB ,_PUNCT kad_SCONJ panemuniškiai_NOUN nuoširdžiai_ADV svajoja_VERB ,_PUNCT kada_ADV bus_AUX įvykdytas_VERB Vaidoto_PROPN gatvės_NOUN pagerinimas_NOUN ._PUNCTD) tokens: Panemunės bendruomenės centro valdybos narė Rūta Zabielienė sakė , kad panemuniškiai seniai laukia , kada bus baigtas Vaidoto gatvės remontas .
tags: PROPN NOUN NOUN NOUN NOUN PROPN PROPN VERB PUNCT SCONJ NOUN ADV VERB PUNCT ADV AUX VERB PROPN NOUN NOUN PUNCT
tagged_tokens: Panemunės_PROPN bendruomenės_NOUN centro_NOUN valdybos_NOUN narė_NOUN Rūta_PROPN Zabielienė_PROPN sakė_VERB ,_PUNCT kad_SCONJ panemuniškiai_NOUN seniai_ADV laukia_VERB ,_PUNCT kada_ADV bus_AUX baigtas_VERB Vaidoto_PROPN gatvės_NOUN remontas_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: „ Dėl to , kad šitoje gyvybingoje gatvėje nesusidarytų kitų duobių .
tags: PUNCT SCONJ PART SCONJ DET ADJ NOUN VERB PART ADV NOUN PUNCT
tagged_tokens: „_PUNCT Dėl_SCONJ to_PART ,_PUNCT kad_SCONJ šitoje_DET gyvybingoje_ADJ gatvėje_NOUN nesusidarytų_VERB kitų_PART duobių_NOUN ._PUNCT

B) tokens: „ Mūsų baugia , jog toje sparčioje gatvėje neatsidarytų daugiau angų .
tags: PUNCT PRON VERB PUNCT SCONJ DET ADJ NOUN VERB PART ADV NOUN PUNCT
tagged_tokens: „_PUNCT Mūsų_PRON baugia_VERB ,_PUNCT jog_SCONJ toje_DET sparčioje_ADJ gatvėje_NOUN neatsidarytų_VERB daugiau_ADV angų_NOUN ._PUNCT

C) tokens: „ Mums baigia , kad čia šurmulioje gatvėje nesuformuotųsi antra smegdžių nerimų .
tags: PUNCT PRON VERB PUNCT SCONJ ADV ADJ NOUN VERB PART ADV NOUN PUNCT
tagged_tokens: „_PUNCT Mums_PRON baigia_VERB ,_PUNCT kad_SCONJ čia_ADV šurmulioje_ADJ gatvėje_NOUN nesuformuotųsi_VERB antra_PART smegdžių_NOUN nerimų_SCONJ ._PUNCTD) tokens: „ Mus baugina , kad šioje judrioje gatvėje neatsivertų dar daugiau smegduobių .
tags: PUNCT PRON VERB PUNCT SCONJ DET ADJ NOUN VERB PART ADV NOUN PUNCT
tagged_tokens: „_PUNCT Mus_PRON baugina_VERB ,_PUNCT kad_SCONJ šioje_DET judrioje_ADJ gatvėje_NOUN neatsivertų_VERB dar_PART daugiau_ADV smegduobių_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Kuomet driekiasi keliadara , visada yra pavojus , - sakė ji .
tags: SCONJ VERB NOUN PUNCT ADV VERB NOUN PUNCT PUNCT VERB PRON PUNCT
tagged_tokens: Kuomet_SCONJ driekiasi_VERB keliadara_NOUN ,_PUNCT visada_ADV yra_VERB pavojus_NOUN ,_PUNCT -_PUNCT sakė_VERB ji_PRON ._PUNCT

B) tokens: Tiesiog einant darbus , bet kas gali atsitikti , - prabilo ji .
tags: PART VERB NOUN PUNCT DET PRON VERB VERB PUNCT PUNCT VERB PRON PUNCT
tagged_tokens: Tiesiog_PART einant_VERB darbus_NOUN ,_PUNCT bet_DET kas_PRON gali_VERB atsitikti_VERB ,_PUNCT -_PUNCT prabilo_VERB ji_PRON ._PUNCT

C) tokens: Kadangi tęsiasi projektas , galima tikėtis visko , - tarė ji .
tags: SCONJ VERB NOUN PUNCT ADJ VERB PRON PUNCT PUNCT VERB PRON PUNCT
tagged_tokens: Kadangi_SCONJ tęsiasi_VERB projektas_NOUN ,_PUNCT galima_ADJ tikėtis_VERB visko_PRON ,_PUNCT -_PUNCT tarė_VERB ji_PRON ._PUNCTD) tokens: Kol vyksta statybos , visko gali nutikti , - kalbėjo ji .
tags: ADV VERB NOUN PUNCT PRON VERB VERB PUNCT PUNCT VERB PRON PUNCT
tagged_tokens: Kol_ADV vyksta_VERB statybos_NOUN ,_PUNCT visko_PRON gali_VERB nutikti_VERB ,_PUNCT -_PUNCT kalbėjo_VERB ji_PRON ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: - Savivaldybė taip pat turėtų geriau prižiūrėti kelionių būseną . “
tags: PUNCT NOUN PART X VERB ADV VERB NOUN NOUN PUNCT PUNCT
tagged_tokens: -_PUNCT Savivaldybė_NOUN taip_PART pat_X turėtų_VERB geriau_ADV prižiūrėti_VERB kelionių_NOUN būseną_NOUN ._PUNCT “_PUNCT

B) tokens: - Administracija taip pat privalėtų geriau skatinti transporto kokybę . “
tags: PUNCT NOUN PART X VERB ADV VERB NOUN NOUN PUNCT PUNCT
tagged_tokens: -_PUNCT Administracija_NOUN taip_PART pat_X privalėtų_VERB geriau_ADV skatinti_VERB transporto_NOUN kokybę_NOUN ._PUNCT “_PUNCT

C) tokens: - Miestiečiai taip pat galėtų geriau užtikrinti komunikacijų sąlygas . “
tags: PUNCT NOUN PART X VERB ADV VERB NOUN NOUN PUNCT PUNCT
tagged_tokens: -_PUNCT Miestiečiai_NOUN taip_PART pat_X galėtų_VERB geriau_ADV užtikrinti_VERB komunikacijų_NOUN sąlygas_NOUN ._PUNCT “_PUNCTD) tokens: - Miesto valdžia taip pat galėtų geriau rūpintis gatvių būkle . “
tags: PUNCT NOUN NOUN PART X VERB ADV VERB NOUN NOUN PUNCT PUNCT
tagged_tokens: -_PUNCT Miesto_NOUN valdžia_NOUN taip_PART pat_X galėtų_VERB geriau_ADV rūpintis_VERB gatvių_NOUN būkle_NOUN ._PUNCT “_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Žmonės nusigandę , jog iš plyšusio veleno ilgoka laika tekantis vandens srautas negalėjo išnešti daugiau žemės po visą kelio juostą .
tags: NOUN VERB PUNCT SCONJ ADP VERB NOUN ADV ADJ VERB NOUN NOUN NEG VERB VERB ADV NOUN ADP DET NOUN NOUN PUNCT
tagged_tokens: Žmonės_NOUN nusigandę_VERB ,_PUNCT jog_SCONJ iš_ADP plyšusio_VERB veleno_NOUN ilgoka_ADV tekantis_ADJ vandens_NOUN srautas_NOUN negalėjo_NEG išnešti_VERB daugiau_ADV žemės_NOUN po_ADP visą_DET kelio_NOUN juostą_NOUN ._PUNCT

B) tokens: Piliečiai sunerimę , kad iš trūkinėjusio cilindro ilgai valandas tekančios vandenyno bangos nepraplovų per daug dirvožemio po visas gatvės dalis .
tags: NOUN VERB PUNCT SCONJ ADP VERB NOUN ADV NOUN VERB NOUN NOUN NEG VERB VERB PER ADJ NOUN ADP DET NOUN NOUN PUNCT
tagged_tokens: Piliečiai_NOUN sunerimę_VERB ,_PUNCT kad_SCONJ iš_ADP trūkinėjusio_VERB cilindro_NOUN ilgai_ADV valandas_NOUN tekančios_VERB vandenyno_NOUN bangos_NOUN nepraplovų_NEG per_ADP daug_ADJ dirvožemio_NOUN po_ADP visas_DET gatvės_NOUN dalis_NOUN ._PUNCT

C) tokens: Gyventojės susijaudinę , jog iš skilusio kanalo ilgokai siūbavo vandenys nebūtų išvarę per daug smėlio po visą kelvė .
tags: NOUN VERB PUNCT SCONJ ADP VERB NOUN ADV VERB NOUN NEG VERB VERB PER ADJ NOUN ADP DET NOUN PUNCT
tagged_tokens: Gyventojės_NOUN susijaudinę_VERB ,_PUNCT jog_SCONJ iš_ADP skilusio_VERB kanalo_NOUN ilgokai_ADV siūbavo_VERB vandenys_NOUN nebūtų_NEG išvarę_VERB per_ADP daug_ADJ smėlio_NOUN po_ADP visą_DET kelvė_NOUN ._PUNCTD) tokens: Gyventojai susirūpinę , kad iš trūkusio vamzdžio ilgai tekėjęs vanduo nebūtų išplovęs daugiau grunto po visą gatvę .
tags: NOUN VERB PUNCT SCONJ ADP VERB NOUN ADV VERB NOUN VERB VERB ADV NOUN ADP DET NOUN PUNCT
tagged_tokens: Gyventojai_NOUN susirūpinę_VERB ,_PUNCT kad_SCONJ iš_ADP trūkusio_VERB vamzdžio_NOUN ilgai_ADV tekėjęs_VERB vanduo_NOUN nebūtų_VERB išplovęs_VERB daugiau_ADV grunto_NOUN po_ADP visą_DET gatvę_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Rajono Bendrojo valdymo padalinio vadovas Zenonas Girčys stengėsi nuraminti kauniečius .
tags: NOUN ADJ NOUN NOUN NOUN PROPN PROPN VERB VERB NOUN PUNCT
tagged_tokens: Rajono_NOUN Bendrojo_ADJ valdymo_NOUN padalinio_NOUN vadovas_NOUN Zenonas_PROPN Girčys_PROPN stengėsi_VERB nuraminti_VERB kauniečius_NOUN ._PUNCT

B) tokens: Savivaldybės Komunalaus ūkio departamento direktorius Zenonas Girčys siekė nuraminti kauniečius .
tags: NOUN ADJ NOUN NOUN NOUN PROPN PROPN VERB VERB NOUN PUNCT
tagged_tokens: Savivaldybės_NOUN Komunalaus_ADJ ūkio_NOUN departamento_NOUN direktorius_NOUN Zenonas_PROPN Girčys_PROPN siekė_VERB nuraminti_VERB kauniečius_NOUN ._PUNCT

C) tokens: Savivaldybės Viešojo ūkio sektoriaus vadys Zenonas Girčys mėgino nuraminti kauniečius .
tags: NOUN ADJ NOUN NOUN NOUN PROPN PROPN VERB VERB NOUN PUNCT
tagged_tokens: Savivaldybės_NOUN Viešojo_ADJ ūkio_NOUN sektoriaus_NOUN vadys_NOUN Zenonas_PROPN Girčys_PROPN mėgino_VERB nuraminti_VERB kauniečius_NOUN ._PUNCTD) tokens: Savivaldybės Komunalinio ūkio skyriaus pavaduotojas Zenonas Girčys bandė nuraminti kauniečius .
tags: NOUN ADJ NOUN NOUN NOUN PROPN PROPN VERB VERB NOUN PUNCT
tagged_tokens: Savivaldybės_NOUN Komunalinio_ADJ ūkio_NOUN skyriaus_NOUN pavaduotojas_NOUN Zenonas_PROPN Girčys_PROPN bandė_VERB nuraminti_VERB kauniečius_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: „ Šios nelaimės urbanistiniuose audiniuose nutinka kiekvieną dieną , - teigė jis .
tags: PUNCT DET NOUN ADJ NOUN VERB NUM ADV PUNCT PUNCT VERB PRON PUNCT
tagged_tokens: „_PUNCT Šios_DET nelaimės_NOUN urbanistiniuose_ADJ audiniuose_NOUN nutinka_VERB kiekvieną_NUM dieną_ADV ,_PUNCT -_PUNCT teigė_VERB jis_PRON ._PUNCT

B) tokens: „ Tokie incidentai miestietiškuose tinkleliuose pasitaiko kasnaktį , - rodė jis .
tags: PUNCT DET NOUN ADJ NOUN VERB ADV PUNCT PUNCT VERB PRON PUNCT
tagged_tokens: „_PUNCT Tokie_DET incidentai_NOUN miestietiškuose_ADJ tinkleliuose_NOUN pasitaiko_VERB kasnaktį_ADV ,_PUNCT -_PUNCT rodė_VERB jis_PRON ._PUNCT

C) tokens: „ Tokios katastrofos urbaniniuose ryšiuose įvykdavo kiekvienu metu , - sakė jis .
tags: PUNCT DET NOUN ADJ NOUN VERB NUM NOUN PUNCT PUNCT VERB PRON PUNCT
tagged_tokens: „_PUNCT Tokios_DET katastrofos_NOUN urbaniniuose_ADJ ryšiuose_NOUN įvykdavo_VERB kiekvienu_NUM metu_NOUN ,_PUNCT -_PUNCT sakė_VERB jis_PRON ._PUNCTD) tokens: „ Tokių avarijų miesto inžineriniuose tinkluose įvyksta kasdien , - sakė jis .
tags: PUNCT DET NOUN NOUN ADJ NOUN VERB ADV PUNCT PUNCT VERB PRON PUNCT
tagged_tokens: „_PUNCT Tokių_DET avarijų_NOUN miesto_NOUN inžineriniuose_ADJ tinkluose_NOUN įvyksta_VERB kasdien_ADV ,_PUNCT -_PUNCT sakė_VERB jis_PRON ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: - Nebūtina jaudintis keliauti Vaidoto gatve . “
tags: PUNCT ADV VERB VERB VERB PROPN NOUN PUNCT PUNCT
tagged_tokens: -_PUNCT Nebūtina_ADV jaudintis_VERB keliauti_VERB Vaidoto_PROPN gatve_NOUN ._PUNCT “_PUNCT

B) tokens: - Nelabai privalu nerimauti važinėti Vaidoto gatve . “
tags: PUNCT ADV VERB VERB VERB PROPN NOUN PUNCT PUNCT
tagged_tokens: -_PUNCT Nelabai_ADV privalu_VERB nerimauti_VERB važinėti_VERB Vaidoto_PROPN gatve_NOUN ._PUNCT “_PUNCT

C) tokens: - Niekam nereikalinga baimintis judėti Vaidoto gatve . “
tags: PUNCT PRON VERB VERB VERB PROPN NOUN PUNCT PUNCT
tagged_tokens: -_PUNCT Niekam_PRON nereikalinga_VERB baimintis_VERB judėti_VERB Vaidoto_PROPN gatve_NOUN ._PUNCT “_PUNCTD) tokens: - Tikrai nereikia bijoti važiuoti Vaidoto gatve . “
tags: PUNCT ADV VERB VERB VERB PROPN NOUN PUNCT PUNCT
tagged_tokens: -_PUNCT Tikrai_ADV nereikia_VERB bijoti_VERB važiuoti_VERB Vaidoto_PROPN gatve_NOUN ._PUNCT “_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Keli priklausomi piliečiai skųstėsi , jog Vaidoto alėjoje vilkosi iki rudens tęsiami kelių kapitaliniai darbai .
tags: PRON ADJ NOUN VERB PUNCT SCONJ PROPN NOUN VERB ADP NOUN VERB ADJ NOUN ADJ NOUN PUNCT
tagged_tokens: Keli_PRON priklausomi_ADJ piliečiai_NOUN skųstėsi_VERB ,_PUNCT jog_SCONJ Vaidoto_PROPN alėjoje_NOUN vilkosi_VERB iki_ADP rudens_NOUN tęsiami_VERB kelių_ADJ kapitaliniai_ADJ darbai_NOUN ._PUNCT

B) tokens: Keletas reziduojančių žmonių pasipiktino , kad Vaidoto prospekte vėlavo iš vasaros būgnių kokybės atkūrimo darbai .
tags: NUM VERB NOUN VERB PUNCT SCONJ PROPN NOUN VERB ADP NOUN NOUN NOUN GEN NOUN PUNCT
tagged_tokens: Keletas_NUM reziduojančių_VERB žmonių_NOUN pasipiktino_VERB ,_PUNCT kad_SCONJ Vaidoto_PROPN prospekte_NOUN vėlavo_VERB iš_ADP vasaros_NOUN būgnių_NOUN kokybės_NOUN atkūrimo_GEN darbai_NOUN ._PUNCT

C) tokens: Kelios gyvenančios asmenys nusiskundė , kad Vaidoto gėlynoje stabtelėjo nuo vasaros baigiami asfalto puoselėjimo darbai .
tags: NUM VERB NOUN VERB PUNCT SCONJ PROPN NOUN VERB ADP NOUN VERB NOUN GEN NOUN PUNCT
tagged_tokens: Kelios_NUM gyvenančios_VERB asmenys_NOUN nusiskundė_VERB ,_PUNCT kad_SCONJ Vaidoto_PROPN gėlynoje_NOUN stabtelėjo_VERB nuo_ADP vasaros_NOUN baigiami_VERB asfalto_NOUN puoselėjimo_GEN darbai_NOUN ._PUNCTD) tokens: Kai kurie gyventojai skundėsi , kad Vaidoto gatvėje užtruko nuo vasaros trunkantys remonto darbai .
tags: PRON X NOUN VERB PUNCT SCONJ PROPN NOUN VERB ADP NOUN VERB NOUN NOUN PUNCT
tagged_tokens: Kai_PRON kurie_X gyventojai_NOUN skundėsi_VERB ,_PUNCT kad_SCONJ Vaidoto_PROPN gatvėje_NOUN užtruko_VERB nuo_ADP vasaros_NOUN trunkantys_VERB remonto_NOUN darbai_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: „ Pradžioje maždaug mėnesį atidedėjo atverti kelę mašinoms , šiuo metu čionai iškyla duobos “ , - raktais žmonės .
tags: PUNCT NOUN ADV NOUN VERB VERB NOUN NOUN PUNCT DET ADV ADV VERB NOUN PUNCT PUNCT PUNCT VERB NOUN PUNCT
tagged_tokens: „_PUNCT Pradžioje_NOUN maždaug_ADV mėnesį_NOUN atidedėjo_VERB atverti_VERB kelę_NOUN mašinoms_NOUN ,_PUNCT šiuo_DET metu_ADV čionai_ADV iškyla_VERB duobos_NOUN “_PUNCT ,_PUNCT -_PUNCT raktais_VERB žmonės_NOUN ._PUNCT

B) tokens: „ Pradžiai apytikrį mėnesį vilkino atleisti gatvelę automobiliais , dabar čia išveda duobutes “ , - pasipiktino žmonės .
tags: PUNCT ADV X NOUN VERB VERB NOUN NOUN PUNCT ADV ADP VERB NOUN PUNCT PUNCT PUNCT VERB NOUN PUNCT
tagged_tokens: „_PUNCT Pradžiai_ADV apytikrį_X mėnesį_NOUN vilkino_VERB atleisti_VERB gatvelę_NOUN automobiliais_NOUN ,_PUNCT dabar_ADV čia_ADP išveda_VERB duobutes_NOUN “_PUNCT ,_PUNCT -_PUNCT pasipiktino_VERB žmonės_NOUN ._PUNCT

C) tokens: „ Pradėjui šiek tiek mėnesį delsė atskleisti gatę priemonėms , šiuo laiku čionais atrodo duobėlės “ , - pareiškė žmonės .
tags: PUNCT ADV ADV NOUN VERB VERB NOUN NOUN PUNCT DET NOUN ADP VERB NOUN PUNCT PUNCT PUNCT VERB NOUN PUNCT
tagged_tokens: „_PUNCT Pradėjui_ADV šiek_ADV tiek_ADV mėnesį_NOUN delsė_VERB atskleisti_VERB gatę_NOUN priemonėms_NOUN ,_PUNCT šiuo_DET laiku_NOUN čionais_ADP atrodo_VERB duobėlės_NOUN “_PUNCT ,_PUNCT -_PUNCT pareiškė_VERB žmonės_NOUN ._PUNCTD) tokens: „ Iš pradžių apie mėnesį vėlavo atidaryti gatvę automobiliams , dabar čia atsiveria duobės “ , - skundėsi žmonės .
tags: PUNCT ADV X ADP NOUN VERB VERB NOUN NOUN PUNCT ADV ADV VERB NOUN PUNCT PUNCT PUNCT VERB NOUN PUNCT
tagged_tokens: „_PUNCT Iš_ADV pradžių_X apie_ADP mėnesį_NOUN vėlavo_VERB atidaryti_VERB gatvę_NOUN automobiliams_NOUN ,_PUNCT dabar_ADV čia_ADV atsiveria_VERB duobės_NOUN “_PUNCT ,_PUNCT -_PUNCT skundėsi_VERB žmonės_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Pagal Z . Girčio , tiesti kanalizacijos vamzdžius Panemunėje įmonė „ Kamesta “ galės iki šių metų pabaigos .
tags: ADP X PUNCT PROPN PUNCT VERB NOUN NOUN PROPN NOUN PUNCT PROPN PUNCT VERB NOUN ADP PRON NOUN NOUN PUNCT
tagged_tokens: Pagal_ADP Z_X ._PUNCT Girčio_PROPN ,_PUNCT tiesti_VERB kanalizacijos_NOUN vamzdžius_NOUN Panemunėje_PROPN įmonė_NOUN „_PUNCT Kamesta_PROPN “_PUNCT galės_VERB iki_ADP šių_PRON metų_NOUN pabaigos_NOUN ._PUNCT

B) tokens: Anot Z . Girčio , kurti drenažo sistemas Panemunėje įstaiga „ Kamesta “ turės teisę iki ateinančių metų pradžios .
tags: ADP X PUNCT PROPN PUNCT VERB NOUN NOUN PROPN NOUN PUNCT PROPN PUNCT turės_VERB teisę_NOUN iki_ADP ateinančių_PRON metų_NOUN pradžios_NOUN ._PUNCT
tagged_tokens: Anot_ADP Z_X ._PUNCT Girčio_PROPN ,_PUNCT kurti_VERB drenažo_NOUN sistemas_NOUN Panemunėje_PROPN įstaiga_NOUN „_PUNCT Kamesta_PROPN “_PUNCT turės_VERB teisę_NOUN iki_ADP ateinančių_PRON metų_NOUN pradžios_NOUN ._PUNCT

C) tokens: Remiantis Z . Girčio , dėti kanalizacijos linijas Panemunėje firma „ Kamesta “ tars leidžiamą iki šių metų galų .
tags: ADP X PUNCT PROPN PUNCT VERB NOUN NOUN PROPN NOUN PUNCT PROPN PUNCT tars_VERB leidžiamą_NOUN iki_ADP šių_PRON metų_NOUN galų_NOUN ._PUNCT
tagged_tokens: Remiantis_ADP Z_X ._PUNCT Girčio_PROPN ,_PUNCT dėti_VERB kanalizacijos_NOUN linijas_NOUN Panemunėje_PROPN firma_NOUN „_PUNCT Kamesta_PROPN “_PUNCT tars_VERB leidžiamą_NOUN iki_ADP šių_PRON metų_NOUN galų_NOUN ._PUNCTD) tokens: Pasak Z . Girčio , kloti nuotekų tinklus Panemunėje bendrovė „ Kamesta “ turi leidimą iki kitų metų pradžios .
tags: ADP X PUNCT PROPN PUNCT VERB NOUN NOUN PROPN NOUN PUNCT PROPN PUNCT VERB NOUN ADP PRON NOUN NOUN PUNCT
tagged_tokens: Pasak_ADP Z_X ._PUNCT Girčio_PROPN ,_PUNCT kloti_VERB nuotekų_NOUN tinklus_NOUN Panemunėje_PROPN bendrovė_NOUN „_PUNCT Kamesta_PROPN “_PUNCT turi_VERB leidimą_NOUN iki_ADP kitų_PRON metų_NOUN pradžios_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""A""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Kauno mieste visą parą „ Kauno vandenys “ gedimų brigada pašalina apie 40 gedimų , kadangi didelė vandentiekio dalis yra pasenusi .
tags: PROPN NOUN ADV NOUN PUNCT PROPN NOUN PUNCT NOUN NOUN VERB ADP NUM NOUN PUNCT SCONJ ADJ NOUN NOUN AUX VERB PUNCT
tagged_tokens: Kauno_PROPN mieste_NOUN visą_ADV parą_NOUN „_PUNCT Kauno_PROPN vandenys_NOUN “_PUNCT gedimų_NOUN brigada_NOUN pašalina_VERB apie_ADP 40_NUM gedimų_NOUN ,_PUNCT kadangi_SCONJ didelė_ADJ vandentiekio_NOUN dalis_NOUN yra_AUX pasenusi_VERB ._PUNCT

B) tokens: Kauno žemėlapyje kasdien „ Kauno vandenų “ priešgaisrinė komanda šalina iki 40 nenumatytų situacijų , nes žymiai vandens tiekimo dalis yra ypač susiliejusi .
tags: PROPN NOUN ADV PUNCT PROPN NOUN PUNCT ADJ NOUN VERB ADP NUM ADJ NOUN PUNCT SCONJ ADV NOUN NOUN AUX ADV VERB PUNCT
tagged_tokens: Kauno_PROPN žemėlapyje_NOUN kasdien_ADV „_PUNCT Kauno_PROPN vandenų_NOUN “_PUNCT priešgaisrinė_ADJ komanda_NOUN šalina_VERB iki_ADP 40_NUM nenumatytų_ADJ situacijų_NOUN ,_PUNCT nes_SCONJ žymiai_ADV vandens_NOUN tiekimo_NOUN dalis_NOUN yra_AUX ypač_ADV susiliejusi_VERB ._PUNCT

C) tokens: Kauno teritorijoje kiekvieną valandą „ Kauno vandens “ galimų nelaimei prevencinė tarnyba nuramina iki 40 galimų nelaimesi , nes puiki dalis vandentakio yra senokai pasibaigusi .
tags: PROPN NOUN ADV NOUN PUNCT PROPN NOUN PUNCT ADJ NOUN ADJ NOUN VERB ADP NUM ADJ NOUN PUNCT SCONJ ADJ NOUN NOUN AUX ADV VERB PUNCT
tagged_tokens: Kauno_PROPN teritorijoje_NOUN kiekvieną_ADV valandą_NOUN „_PUNCT Kauno_PROPN vandens_NOUN “_PUNCT galimų_ADJ nelaimei_NOUN prevencinė_ADJ tarnyba_NOUN nuramina_VERB iki_ADP 40_NUM galimų_ADJ nelaimesi_NOUN ,_PUNCT nes_SCONJ puiki_ADJ dalis_NOUN vandentakio_NOUN yra_AUX senokai_ADV pasibaigusi_VERB ._PUNCTD) tokens: Kaune kiekvieną dieną „ Kauno vandenų “ avarinė tarnyba likviduoja iki 40 avarijų , nes didžioji vamzdynų dalis yra susidėvėjusi .
tags: PROPN DET NOUN PUNCT PROPN NOUN PUNCT ADJ NOUN VERB ADP NUM NOUN PUNCT SCONJ ADJ NOUN NOUN AUX VERB PUNCT
tagged_tokens: Kaune_PROPN kiekvieną_DET dieną_NOUN „_PUNCT Kauno_PROPN vandenų_NOUN “_PUNCT avarinė_ADJ tarnyba_NOUN likviduoja_VERB iki_ADP 40_NUM avarijų_NOUN ,_PUNCT nes_SCONJ didžioji_ADJ vamzdynų_NOUN dalis_NOUN yra_AUX susidėvėjusi_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""A""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Kaune miestelio vadovas Andrijus Kupčinskas greitai susikurs grupę socialinių konsultantų .
tags: PROPN NOUN NOUN PROPN PROPN ADV VERB NOUN ADJ NOUN PUNCT
tagged_tokens: Kaune_PROPN miestelio_NOUN vadovas_NOUN Andrijus_PROPN Kupčinskas_PROPN greitai_ADV susikurs_VERB grupę_NOUN socialinių_ADJ konsultantų_NOUN ._PUNCT

B) tokens: Kauno miestas vadovauja Andrius Kupčinskas jau po truputį formuos komandą bendruomenių ekspertų .
tags: PROPN NOUN VERB PROPN PROPN ADV ADV VERB NOUN ADJ NOUN PUNCT
tagged_tokens: Kauno_PROPN miestas_NOUN vadovauja_VERB Andrius_PROPN Kupčinskas_PROPN jau_ADV po_ADV truputį_ADV formuos_VERB komandą_NOUN bendruomenių_ADJ ekspertų_NOUN ._PUNCT

C) tokens: Kaunui miesto lyderis Andrius Kupčinskas artimiausiu metu turės kolektyvą viešųjų asistentų .
tags: PROPN NOUN NOUN PROPN PROPN ADJ NOUN VERB NOUN ADJ NOUN PUNCT
tagged_tokens: Kaunui_PROPN miesto_NOUN lyderis_NOUN Andrius_PROPN Kupčinskas_PROPN artimiausiu_ADJ metu_NOUN turės_VERB kolektyvą_NOUN viešųjų_ADJ asistentų_NOUN ._PUNCTD) tokens: Kauno miesto meras Andrius Kupčinskas netrukus turės būrį visuomeninių patarėjų .
tags: PROPN NOUN NOUN PROPN PROPN ADV VERB NOUN ADJ NOUN PUNCT
tagged_tokens: Kauno_PROPN miesto_NOUN meras_NOUN Andrius_PROPN Kupčinskas_PROPN netrukus_ADV turės_VERB būrį_NOUN visuomeninių_ADJ patarėjų_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Anot A . Kupčinsko , virš jo lango jau sėdi sąrašelis asmenų , kurie jam teiks konsultacijas skirtingais klausimais , liko tik užrašyti dokumentą .
tags: ADP X PUNCT PROPN PUNCT ADP PRON NOUN PART VERB NOUN NOUN PUNCT DET PRON ADV VERB NOUN PLUR NOUN PUNCT VERB PART VERB NOUN PUNCT
tagged_tokens: Anot_ADP A_X ._PUNCT Kupčinsko_PROPN ,_PUNCT virš_ADP jo_PRON lango_NOUN jau_PART sėdi_VERB sąrašelis_NOUN asmenų_NOUN ,_PUNCT kurie_DET jam_PRON teiks_VERB konsultacijas_NOUN skirtingais_ADJ klausimais_NOUN ,_PUNCT liko_VERB tik_PART užrašyti_VERB dokumentą_NOUN ._PUNCT

B) tokens: Sakant A . Kupčinsko , prie jo stalčiaus jau yra sąrašas vardų , kurie jo padės patarimais įvairiais klausimais , trūksta tik pasižymėti lapelį .
tags: VERB X PUNCT PROPN PUNCT ADP PRON NOUN PART AUX NOUN NOUN PUNCT DET PRON PRON VERB NOUN INST NOUN PUNCT VERB PART VERB NOUN PUNCT
tagged_tokens: Sakant_VERB A_X ._PUNCT Kupčinsko_PROPN ,_PUNCT prie_ADP jo_PRON stalčiaus_NOUN jau_PART yra_AUX sąrašas_NOUN vardų_NOUN ,_PUNCT kurie_DET jo_PRON padės_VERB patarimais_NOUN įvairiais_INST klausimais_NOUN ,_PUNCT trūksta_VERB tik_PART pasižymėti_VERB lapelį_NOUN ._PUNCT

C) tokens: Pagal A . Kupčinsko , šalia jo stendo jau stovi sąrašas pavardžių , kurie jį informuos įvairiais klausimais , reikia tik užfiksuoti raštuką .
tags: ADP X PUNCT PROPN PUNCT ADP PRON NOUN PART VERB NOUN NOUN PUNCT DET PRON PRON VERB ADJ NOUN PUNCT VERB PART VERB NOUN PUNCT
tagged_tokens: Pagal_ADP A_X ._PUNCT Kupčinsko_PROPN ,_PUNCT šalia_ADP jo_PRON stendo_NOUN jau_PART stovi_VERB sąrašas_NOUN pavardžių_NOUN ,_PUNCT kurie_DET jį_PRON informuos_VERB įvairiais_ADJ klausimais_NOUN ,_PUNCT reikia_VERB tik_PART užfiksuoti_VERB raštuką_NOUN ._PUNCTD) tokens: Pasak A . Kupčinsko , ant jo stalo jau guli sąrašas žmonių , kurie jį konsultuos įvairiais klausimais , belieka tik pasirašyti raštą .
tags: ADP X PUNCT PROPN PUNCT ADP PRON NOUN PART VERB NOUN NOUN PUNCT DET PRON VERB ADJ NOUN PUNCT VERB PART VERB NOUN PUNCT
tagged_tokens: Pasak_ADP A_X ._PUNCT Kupčinsko_PROPN ,_PUNCT ant_ADP jo_PRON stalo_NOUN jau_PART guli_VERB sąrašas_NOUN žmonių_NOUN ,_PUNCT kurie_DET jį_PRON konsultuos_VERB įvairiais_ADJ klausimais_NOUN ,_PUNCT belieka_VERB tik_PART pasirašyti_VERB raštą_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""A""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Miestplanavimo klausymais savivaldybės vadui rekomendacijas dalina Lietuvos architektūros draugijos Kauno filialo vadis Gintaras Balčytis , verslo augimui - Kauno pramonės , prekybos ir amato verslų rūmų pirmininkas Mečislovas Rondomanskas bei Kauno aplinkos pramonės asociacijos pirmininkas Algimantas Jankauskas , mokslo bendruomenės - Kauno technologijos universiteto tarybos vadovas Ramutis Bansevičius , Kauno sveikatos mokslų universiteto tarybos vadovas Vilius Grabauskas , kultūros - Justinas Krėpšta .
tags: NOUN NOUN NOUN NOUN NOUN VERB PROPN NOUN NOUN PROPN NOUN NOUN PROPN PROPN PUNCT NOUN NOUN PUNCT PROPN NOUN PUNCT NOUN CCONJ NOUN NOUN NOUN PROPN PROPN CCONJ PROPN NOUN NOUN NOUN NOUN PROPN PROPN PUNCT ADJ NOUN PUNCT PROPN NOUN NOUN NOUN NOUN PROPN PROPN PUNCT PROPN NOUN NOUN NOUN NOUN PROPN PROPN PUNCT NOUN PUNCT PROPN PROPN PUNCT
tagged_tokens: Miestplanavimo_NOUN klausymais_NOUN savivaldybės_NOUN vadui_NOUN rekomendacijas_NOUN dalina_VERB Lietuvos_PROPN architektūros_NOUN draugijos_NOUN Kauno_PROPN filialo_NOUN vadis_NOUN Gintaras_PROPN Balčytis_PROPN ,_PUNCT verslo_NOUN augimui_NOUN -_PUNCT Kauno_PROPN pramonės_NOUN ,_PUNCT prekybos_NOUN ir_CCONJ amato_NOUN verslų_NOUN rūmų_NOUN pirmininkas_NOUN Mečislovas_PROPN Rondomanskas_PROPN bei_CCONJ Kauno_PROPN aplinkos_NOUN pramonės_NOUN asociacijos_NOUN pirmininkas_NOUN Algimantas_PROPN Jankauskas_PROPN ,_PUNCT mokslo_ADJ bendruomenės_NOUN -_PUNCT Kauno_PROPN technologijos_NOUN universiteto_NOUN tarybos_NOUN vadovas_NOUN Ramutis_PROPN Bansevičius_PROPN ,_PUNCT Kauno_PROPN sveikatos_NOUN mokslų_NOUN universiteto_NOUN tarybos_NOUN vadovas_NOUN Vilius_PROPN Grabauskas_PROPN ,_PUNCT kultūros_NOUN -_PUNCT Justinas_PROPN Krėpšta_PROPN ._PUNCT

B) tokens: Miestotvarkos klausiais miesto lideriui patarimais pasidalys Lietuvos architekturų sąjūdis Kauno padalinio lyderis Gintaras Balčytis , verslo vystymui - Kauno pramonės , prekybos ir meistrų rūmai prezidentas Mečislovas Rondomanskas bei Kauno regiono pramonės asociacija prezidentas Algimantas Jankauskas , mokslinės bendruomenės - Kauno technologijos universiteto senatas pirmininkas Ramutis Bansevičius , Kauno biomedicinos universiteto senatas pirmininkas Vilius Grabauskas , kultūros - Justinas Krėpšta .
tags: NOUN NOUN NOUN NOUN NOUN VERB PROPN NOUN NOUN PROPN NOUN NOUN PROPN PROPN PUNCT NOUN NOUN PUNCT PROPN NOUN PUNCT NOUN CCONJ NOUN NOUN NOUN PROPN PROPN CCONJ PROPN NOUN NOUN NOUN NOUN PROPN PROPN PUNCT ADJ NOUN PUNCT PROPN NOUN NOUN NOUN NOUN PROPN PROPN PUNCT PROPN NOUN NOUN NOUN NOUN PROPN PROPN PUNCT NOUN PUNCT PROPN PROPN PUNCT
tagged_tokens: Miestotvarkos_NOUN klausiais_NOUN miesto_NOUN lideriui_NOUN patarimais_NOUN pasidalys_VERB Lietuvos_PROPN architekturų_NOUN sąjūdis_NOUN Kauno_PROPN padalinio_NOUN lyderis_NOUN Gintaras_PROPN Balčytis_PROPN ,_PUNCT verslo_NOUN vystymui_NOUN -_PUNCT Kauno_PROPN pramonės_NOUN ,_PUNCT prekybos_NOUN ir_CCONJ meistrų_NOUN rūmai_NOUN prezidentas_NOUN Mečislovas_PROPN Rondomanskas_PROPN bei_CCONJ Kauno_PROPN regiono_NOUN pramonės_NOUN asociacija_NOUN prezidentas_NOUN Algimantas_PROPN Jankauskas_PROPN ,_PUNCT mokslinės_ADJ bendruomenės_NOUN -_PUNCT Kauno_PROPN technologijos_NOUN universiteto_NOUN senatas_NOUN pirmininkas_NOUN Ramutis_PROPN Bansevičius_PROPN ,_PUNCT Kauno_PROPN biomedicinos_NOUN universiteto_NOUN senatas_NOUN pirmininkas_NOUN Vilius_PROPN Grabauskas_PROPN ,_PUNCT kultūros_NOUN -_PUNCT Justinas_PROPN Krėpšta_PROPN ._PUNCT

C) tokens: Miestprojektavimo problemomis miesto valdovui konsultacijas skiria Lietuvos architektavių bendrija Kauno šakos vedėjas Gintaras Balčytis , verslo skatinimui - Kauno pramonės , prekybos ir žanrų rūmų vadas Mečislovas Rondomanskas bei Kauno zonos pramonės grupė vadas Algimantas Jankauskas , akademinio pasaulio - Kauno technologijos universiteto kolegija vadovas Ramutis Bansevičius , Kauno medicininės mokslų universiteto kolegija vadovas Vilius Grabauskas , kultūros - Justinas Krėpšta .
tags: NOUN NOUN NOUN NOUN NOUN VERB PROPN NOUN NOUN PROPN NOUN NOUN PROPN PROPN PUNCT NOUN NOUN PUNCT PROPN NOUN PUNCT NOUN CCONJ NOUN NOUN NOUN PROPN PROPN CCONJ PROPN NOUN NOUN NOUN NOUN PROPN PROPN PUNCT ADJ NOUN PUNCT PROPN NOUN NOUN NOUN NOUN PROPN PROPN PUNCT PROPN NOUN NOUN NOUN NOUN PROPN PROPN PUNCT NOUN PUNCT PROPN PROPN PUNCT
tagged_tokens: Miestprojektavimo_NOUN problemomis_NOUN miesto_NOUN valdovui_NOUN konsultacijas_NOUN skiria_VERB Lietuvos_PROPN architektavių_NOUN bendrija_NOUN Kauno_PROPN šakos_NOUN vedėjas_NOUN Gintaras_PROPN Balčytis_PROPN ,_PUNCT verslo_NOUN skatinimui_NOUN -_PUNCT Kauno_PROPN pramonės_NOUN ,_PUNCT prekybos_NOUN ir_CCONJ žanrų_NOUN rūmų_NOUN vadas_NOUN Mečislovas_PROPN Rondomanskas_PROPN bei_CCONJ Kauno_PROPN zonos_NOUN pramonės_NOUN grupė_NOUN vadas_NOUN Algimantas_PROPN Jankauskas_PROPN ,_PUNCT akademinio_ADJ pasaulio_NOUN -_PUNCT Kauno_PROPN technologijos_NOUN universiteto_NOUN kolegija_NOUN vadovas_NOUN Ramutis_PROPN Bansevičius_PROPN ,_PUNCT Kauno_PROPN medicininės_NOUN mokslų_NOUN universiteto_NOUN kolegija_NOUN vadovas_NOUN Vilius_PROPN Grabauskas_PROPN ,_PUNCT kultūros_NOUN -_PUNCT Justinas_PROPN Krėpšta_PROPN ._PUNCTD) tokens: Urbanistikos klausimais merui patarimus dalys Lietuvos architektų sąjungos Kauno skyriaus vadovas Gintaras Balčytis , verslo plėtros - Kauno pramonės , prekybos ir amatų rūmų prezidentas Mečislovas Rondomanskas bei Kauno krašto pramonininkų asociacijos prezidentas Algimantas Jankauskas , akademinės bendruomenės - Kauno technologijos universiteto senato pirmininkas Ramutis Bansevičius , Kauno medicinos universiteto senato pirmininkas Vilius Grabauskas , kultūros - Justinas Krėpšta .
tags: NOUN NOUN NOUN NOUN VERB PROPN NOUN NOUN PROPN NOUN NOUN PROPN PROPN PUNCT NOUN NOUN PUNCT PROPN NOUN PUNCT NOUN CCONJ NOUN NOUN NOUN PROPN PROPN CCONJ PROPN NOUN NOUN NOUN NOUN PROPN PROPN PUNCT ADJ NOUN PUNCT PROPN NOUN NOUN NOUN NOUN PROPN PROPN PUNCT PROPN NOUN NOUN NOUN NOUN PROPN PROPN PUNCT NOUN PUNCT PROPN PROPN PUNCT
tagged_tokens: Urbanistikos_NOUN klausimais_NOUN merui_NOUN patarimus_NOUN dalys_VERB Lietuvos_PROPN architektų_NOUN sąjungos_NOUN Kauno_PROPN skyriaus_NOUN vadovas_NOUN Gintaras_PROPN Balčytis_PROPN ,_PUNCT verslo_NOUN plėtros_NOUN -_PUNCT Kauno_PROPN pramonės_NOUN ,_PUNCT prekybos_NOUN ir_CCONJ amatų_NOUN rūmų_NOUN prezidentas_NOUN Mečislovas_PROPN Rondomanskas_PROPN bei_CCONJ Kauno_PROPN krašto_NOUN pramonininkų_NOUN asociacijos_NOUN prezidentas_NOUN Algimantas_PROPN Jankauskas_PROPN ,_PUNCT akademinės_ADJ bendruomenės_NOUN -_PUNCT Kauno_PROPN technologijos_NOUN universiteto_NOUN senato_NOUN pirmininkas_NOUN Ramutis_PROPN Bansevičius_PROPN ,_PUNCT Kauno_PROPN medicinos_NOUN universiteto_NOUN senato_NOUN pirmininkas_NOUN Vilius_PROPN Grabauskas_PROPN ,_PUNCT kultūros_NOUN -_PUNCT Justinas_PROPN Krėpšta_PROPN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Pateikė .
tags: VERB PUNCT
tagged_tokens: Pateikė_VERB ._PUNCT

B) tokens: Apibūdino .
tags: VERB PUNCT
tagged_tokens: Apibūdino_VERB ._PUNCT

C) tokens: Parodė .
tags: VERB PUNCT
tagged_tokens: Parodė_VERB ._PUNCTD) tokens: Pristatė .
tags: VERB PUNCT
tagged_tokens: Pristatė_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""A""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Projektavimo meistro Eugenijaus Miliūno sukurtas Kauno sporto salės plano kompiuterinė iliustracija vakar buvo pristatyta Seimo , Ekonomikos ministerijoje ir Fizinio lavinimo bei sporto departamento nariams .
tags: NOUN NOUN PROPN PROPN VERB PROPN NOUN NOUN NOUN ADJ NOUN ADV AUX VERB NOUN PUNCT NOUN NOUN CCONJ NOUN NOUN CCONJ NOUN NOUN NOUN PUNCT
tagged_tokens: Projektavimo_NOUN meistro_NOUN Eugenijaus_PROPN Miliūno_PROPN sukurtas_VERB Kauno_PROPN sporto_NOUN salės_NOUN plano_NOUN kompiuterinė_ADJ iliustracija_NOUN vakar_ADV buvo_AUX pristatyta_VERB Seimo_NOUN ,_PUNCT Ekonomikos_NOUN ministerijoje_NOUN ir_CCONJ Fizinio_NOUN lavinimo_NOUN bei_CCONJ sporto_NOUN departamento_NOUN nariams_NOUN ._PUNCT

B) tokens: Projektuotojo Eugenijaus Miliūno apibrėžtas Kauno sporto aikštės maketo skaitmeninis atvaizdas vakar rodytas Seime , Verslo ministerijoje ir Sporto kultūros bei fizinio ugdymo departamente.
tags: NOUN PROPN PROPN VERB PROPN NOUN NOUN NOUN ADJ NOUN ADV VERB NOUN PUNCT NOUN NOUN CCONJ NOUN NOUN CCONJ ADJ NOUN NOUN PUNCT
tagged_tokens: Projektuotojo_NOUN Eugenijaus_PROPN Miliūno_PROPN apibrėžtas_VERB Kauno_PROPN sporto_NOUN aikštės_NOUN maketo_NOUN skaitmeninis_ADJ atvaizdas_NOUN vakar_ADV rodytas_VERB Seime_NOUN ,_PUNCT Verslo_NOUN ministerijoje_NOUN ir_CCONJ Sporto_NOUN kultūros_NOUN bei_CCONJ fizinio_ADJ ugdymo_NOUN departamente_NOUN ._PUNCT

C) tokens: Projektantų vadovo Eugenijaus Miliūno padarytas Kauno sporto stadiono modelio elektroninis paveikslas vakar parodytas Seime , Prekybos ministerijoje ir Sporto bei kūno rengybos departamento darbuotojams .
tags: NOUN NOUN PROPN PROPN VERB PROPN NOUN NOUN NOUN ADJ NOUN ADV VERB NOUN PUNCT NOUN NOUN CCONJ NOUN CCONJ NOUN NOUN NOUN PUNCT
tagged_tokens: Projektantų_NOUN vadovo_NOUN Eugenijaus_PROPN Miliūno_PROPN padarytas_VERB Kauno_PROPN sporto_NOUN stadiono_NOUN modelio_NOUN elektroninis_ADJ paveikslas_NOUN vakar_ADV parodytas_VERB Seime_NOUN ,_PUNCT Prekybos_NOUN ministerijoje_NOUN ir_CCONJ Sporto_NOUN bei_CCONJ kūno_NOUN rengybos_NOUN departamento_NOUN darbuotojams_NOUN ._PUNCTD) tokens: Architekto Eugenijaus Miliūno parengtas Kauno sporto arenos projekto kompiuterinis vaizdas vakar pristatytas Seime , Ūkio ministerijoje ir Kūno kultūros bei sporto departamente .
tags: NOUN PROPN PROPN VERB PROPN NOUN NOUN NOUN ADJ NOUN ADV VERB NOUN PUNCT NOUN NOUN CCONJ NOUN NOUN CCONJ NOUN NOUN PUNCT
tagged_tokens: Architekto_NOUN Eugenijaus_PROPN Miliūno_PROPN parengtas_VERB Kauno_PROPN sporto_NOUN arenos_NOUN projekto_NOUN kompiuterinis_ADJ vaizdas_NOUN vakar_ADV pristatytas_VERB Seime_NOUN ,_PUNCT Ūkio_NOUN ministerijoje_NOUN ir_CCONJ Kūno_NOUN kultūros_NOUN bei_CCONJ sporto_NOUN departamente_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Kauno centro vadovas Andrius Kupčinskas patvirtino , jog Lietuvos valdžiai parodė , kad Kaune dirbama konkrečiais projektais .
tags: PROPN NOUN NOUN PROPN PROPN VERB PUNCT SCONJ PROPN NOUN VERB PUNCT SCONJ PROPN VERB ADJ NOUN PUNCT
tagged_tokens: Kauno_PROPN centro_NOUN vadovas_NOUN Andrius_PROPN Kupčinskas_PROPN patvirtino_VERB ,_PUNCT jog_SCONJ Lietuvos_PROPN valdžiai_NOUN parodė_VERB ,_PUNCT kad_SCONJ Kaune_PROPN dirbama_VERB konkrečiais_ADJ projektais_NOUN ._PUNCT

B) tokens: Kauno magistratas Andrius Kupčinskas teigė , kad respublikos valdžiai rodyta , jog Kaune vykdyti aiškūs veiksmai .
tags: PROPN NOUN PROPN PROPN VERB PUNCT SCONJ NOUN NOUN VERB PUNCT SCONJ PROPN VERB ADJ NOUN PUNCT
tagged_tokens: Kauno_PROPN magistratas_NOUN Andrius_PROPN Kupčinskas_PROPN teigė_VERB ,_PUNCT kad_SCONJ respublikos_NOUN valdžiai_NOUN rodyta_VERB ,_PUNCT jog_SCONJ Kaune_PROPN vykdyti_VERB aiškūs_ADJ veiksmai_NOUN ._PUNCT

C) tokens: Kauno savivaldybės vadis Andrius Kupčinskas tvirtino , jog nacionalinės valdžiai pasakyta , kad Kaune atliekami tikslii darbai .
tags: PROPN NOUN NOUN PROPN PROPN VERB PUNCT SCONJ ADJ NOUN VERB PUNCT SCONJ PROPN VERB ADJ NOUN PUNCT
tagged_tokens: Kauno_PROPN savivaldybės_NOUN vadis_NOUN Andrius_PROPN Kupčinskas_PROPN tvirtino_VERB ,_PUNCT jog_SCONJ nacionalinės_ADJ valdžiai_NOUN pasakyta_VERB ,_PUNCT kad_SCONJ Kaune_PROPN atliekami_VERB tikslii_ADJ darbai_NOUN ._PUNCTD) tokens: Kauno miesto meras Andrius Kupčinskas tikino , kad šalies valdžiai parodyta , jog Kaune vyksta konkretūs darbai .
tags: PROPN NOUN NOUN PROPN PROPN VERB PUNCT SCONJ NOUN NOUN VERB PUNCT SCONJ PROPN VERB ADJ NOUN PUNCT
tagged_tokens: Kauno_PROPN miesto_NOUN meras_NOUN Andrius_PROPN Kupčinskas_PROPN tikino_VERB ,_PUNCT kad_SCONJ šalies_NOUN valdžiai_NOUN parodyta_VERB ,_PUNCT jog_SCONJ Kaune_PROPN vyksta_VERB konkretūs_ADJ darbai_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Savivaldybės lyderis viliasi , jog valstybinėje kasoje numatytas 40 mln. LTL subsidijas išlaikys .
tags: NOUN NOUN VERB PUNCT SCONJ ADJ NOUN VERB NUM NUM NOUN NOUN VERB PUNCT
tagged_tokens: Savivaldybės_NOUN lyderis_NOUN viliasi_VERB ,_PUNCT jog_SCONJ valstybinėje_ADJ kasoje_NOUN numatytas_VERB 40_NUM mln._NUM LTL_NOUN subsidijas_NOUN išlaikys_VERB ._PUNCT

B) tokens: Urbanistinio žinio trokšta , kad biudžeto valdymo plane įrašytas 40 milijonai litų dotacijas nedingtų .
tags: ADJ NOUN VERB PUNCT SCONJ NOUN NOUN NOUN VERB NUM NUM NOUN NOUN VERB PUNCT
tagged_tokens: Urbanistinio_ADJ žinio_NOUN trokšta_VERB ,_PUNCT kad_SCONJ biudžeto_NOUN valdymo_NOUN plane_NOUN įrašytas_VERB 40_NUM milijonai_NUM litų_NOUN dotacijas_NOUN nedingtų_VERB ._PUNCT

C) tokens: Miestelio vedlys laukia , jog valstybei numatytų 40 milijonų litinių pagalbos nepatektų .
tags: NOUN NOUN VERB PUNCT SCONJ NOUN VERB NUM NUM ADJ NOUN VERB PUNCT
tagged_tokens: Miestelio_NOUN vedlys_NOUN laukia_VERB ,_PUNCT jog_SCONJ valstybei_NOUN numatytų_VERB 40_NUM milijonų_NUM litinių_ADJ pagalbos_NOUN nepatektų_VERB ._PUNCTD) tokens: Miesto vadovas tikisi , kad valstybės biudžete numatyta 40 milijonų litų parama nepradings .
tags: NOUN NOUN VERB PUNCT SCONJ NOUN NOUN VERB NUM NUM NOUN NOUN VERB PUNCT
tagged_tokens: Miesto_NOUN vadovas_NOUN tikisi_VERB ,_PUNCT kad_SCONJ valstybės_NOUN biudžete_NOUN numatyta_VERB 40_NUM milijonų_NUM litų_NOUN parama_NOUN nepradings_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""A""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Skaičiuojama , jog tik areną pastatyti kainuos 153 milijonai litų , ir daugiau 63 milijonų litų bus skirta infrastruktūrai .
tags: VERB PUNCT SCONJ ADV NOUN VERB NUM NUM NOUN PUNCT CCONJ ADV NUM NUM NOUN AUX VERB NOUN PUNCT
tagged_tokens: Skaičiuojama_VERB ,_PUNCT jog_SCONJ tik_ADV areną_NOUN pastatyti_VERB kainuos_NUM milijonai_NUM litų_NOUN ,_PUNCT ir_CCONJ daugiau_ADV 63_NUM milijonų_NUM litų_NOUN bus_AUX skirta_VERB infrastruktūrai_NOUN ._PUNCT

B) tokens: Apskaičiuota , kad vien statyti areną atsieis 153 milijonais litų , be to į infrastruktūros darbus bus įdėta dar 63 milijonai litų .
tags: VERB PUNCT SCONJ PART VERB NOUN VERB NUM NUM NOUN PUNCT ADP ADP NOUN NOUN AUX VERB ADV NUM NUM NOUN PUNCT
tagged_tokens: Apskaičiuota_VERB ,_PUNCT kad_SCONJ vien_PART statyti_VERB areną_NOUN atsieis_VERB 153_NUM milijonais_NUM litų_NOUN ,_PUNCT be_ADP to_ADP infrastruktūros_NOUN darbus_NOUN bus_AUX įdėta_VERB dar_ADV 63_NUM milijonai_NUM litų_NOUN ._PUNCT

C) tokens: Skaičiuota , kad tik arenos statybė kainuos 153 mln. litų , plius į infrastruktūrą reikės investuoti dar 63 mln. litų .
tags: VERB PUNCT SCONJ ADV NOUN NOUN VERB NUM NOUN NOUN PUNCT NOUN ADP NOUN VERB VERB ADV NUM NOUN NOUN PUNCT
tagged_tokens: Skaičiuota_VERB ,_PUNCT kad_SCONJ tik_ADV arenos_NOUN statybė_NOUN kainuos_VERB 153_NUM mln._NOUN litų_NOUN ,_PUNCT plius_NOUN į_ADP infrastruktūrą_NOUN reikės_VERB investuoti_VERB dar_ADV 63_NUM mln._NOUN litų_NOUN ._PUNCTD) tokens: Paskaičiuota , kad vien arenos statyba kainuos 153 milijonus litų , o į infrastruktūrą bus investuoti dar 63 milijonai litų .
tags: VERB PUNCT SCONJ PART NOUN NOUN VERB NUM NUM NOUN PUNCT CCONJ ADP NOUN AUX VERB PART NUM NUM NOUN PUNCT
tagged_tokens: Paskaičiuota_VERB ,_PUNCT kad_SCONJ vien_PART arenos_NOUN statyba_NOUN kainuos_VERB 153_NUM milijonus_NUM litų_NOUN ,_PUNCT o_CCONJ į_ADP infrastruktūrą_NOUN bus_AUX investuoti_VERB dar_PART 63_NUM milijonai_NUM litų_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""A""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Siūlymas .
tags: NOUN PUNCT
tagged_tokens: Siūlymas_NOUN ._PUNCT

B) tokens: Pasiūlė .
tags: NOUN PUNCT
tagged_tokens: Pasiūlė_NOUN ._PUNCT

C) tokens: Vizija .
tags: NOUN PUNCT
tagged_tokens: Vizija_NOUN ._PUNCTD) tokens: Pasiūlymas .
tags: NOUN PUNCT
tagged_tokens: Pasiūlymas_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Kauno miesto valdžia pasiūlė veiksmingiau išnaudoti erdves , kurioms numatytos bendruomenei „ Viltis “ .
tags: PROPN NOUN NOUN VERB ADV VERB NOUN PUNCT PRON VERB NOUN PUNCT PUNCT PROPN PUNCT PUNCT
tagged_tokens: Kauno_PROPN miesto_NOUN valdžia_NOUN pasiūlė_VERB veiksmingiau_ADV išnaudoti_VERB erdves_NOUN ,_PUNCT kurioms_PRON numatytos_VERB bendruomenei_NOUN „_PUNCT Viltis_PROPN “_PUNCT ._PUNCT

B) tokens: Kauno savivaldybės aparatas rekomenduoja produktyviau panaudoti vietas , skirtas bendrijos „ Viltis “ poreikiams.
tags: PROPN NOUN NOUN VERB ADV VERB NOUN PUNCT VERB NOUN PUNCT PROPN PUNCT PUNCT
tagged_tokens: Kauno_PROPN savivaldybės_NOUN aparatas_NOUN rekomenduoja_VERB produktyviau_ADV panaudoti_VERB vietas_NOUN ,_PUNCT skirtas_VERB bendrijos_NOUN „_PUNCT Viltis_PROPN “_PUNCT poreikiams_NOUN ._PUNCT

C) tokens: Kauno savivaldybės tarnyba siūlo racionaliau panaudoti būstus , kuriuos skyrė bendruomenei „ Viltis “ .
tags: PROPN NOUN NOUN VERB ADV VERB NOUN PUNCT PRON VERB NOUN PUNCT PUNCT PROPN PUNCT PUNCT
tagged_tokens: Kauno_PROPN savivaldybės_NOUN tarnyba_NOUN siūlo_VERB racionaliau_ADV panaudoti_VERB būstus_NOUN ,_PUNCT kuriuos_PRON skyrė_VERB bendruomenei_NOUN „_PUNCT Viltis_PROPN “_PUNCT ._PUNCTD) tokens: Kauno savivaldybės administracija siūlo efektyviau panaudoti patalpas , kurios skirtos bendrijai „ Viltis “ .
tags: PROPN NOUN NOUN VERB ADV VERB NOUN PUNCT DET VERB NOUN PUNCT NOUN PUNCT PUNCT
tagged_tokens: Kauno_PROPN savivaldybės_NOUN administracija_NOUN siūlo_VERB efektyviau_ADV panaudoti_VERB patalpas_NOUN ,_PUNCT kurios_DET skirtos_VERB bendrijai_NOUN „_PUNCT Viltis_NOUN “_PUNCT ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Organizacija nenutinka panaudoti savo jam duoto dvejų tūkstančių kvadratų dydžio erdvės Partizanų g. 34 .
tags: NOUN VERB VERB PRON PRON VERB NUM NUM NOUN NOUN NOUN NOUN NOUN NUM PUNCT
tagged_tokens: Organizacija_NOUN nenutinka_VERB panaudoti_VERB savo_PRON jam_PRON duoto_VERB dvejų_NUM tūkstančių_NUM kvadratų_NOUN dydžio_NOUN erdvės_NOUN Partizanų_NOUN g._NOUN 34_NUM ._PUNCT

B) tokens: Kolektyvas nesunkioja išnaudoti visas jų priskirtas antrą tūkstantį kvadratinių metrų plotą Partizanų gatvės 34 .
tags: NOUN VERB VERB DET PRON VERB NUM NUM ADJ NOUN NOUN NOUN NOUN NOUN NUM PUNCT
tagged_tokens: Kolektyvas_NOUN nesunkioja_VERB išnaudoti_VERB visas_DET jų_PRON priskirtas_VERB antrą_NUM tūkstantį_NUM kvadratinių_ADJ metrų_NOUN plotą_NOUN Partizanų_NOUN gatvės_NOUN 34_NUM ._PUNCT

C) tokens: Žinyba nesugeba išnaudoti visus jiems skiriamus du tūkstančius kvadratinių metrų ploto patalpas Partizanų gatvėje 34 .
tags: NOUN VERB VERB DET PRON VERB NUM NUM ADJ NOUN NOUN NOUN NOUN NOUN NUM PUNCT
tagged_tokens: Žinyba_NOUN nesugeba_VERB išnaudoti_VERB visus_DET jiems_PRON skiriamus_VERB du_NUM tūkstančius_NUM kvadratinių_ADJ metrų_NOUN ploto_NOUN patalpas_NOUN Partizanų_NOUN gatvėje_NOUN 34_NUM ._PUNCTD) tokens: Bendrija nepanaudoja visų jiems skirtų dviejų tūkstančių kvadratinių metrų ploto patalpų Partizanų gatvėje 34 .
tags: NOUN VERB DET PRON VERB NUM NUM ADJ NOUN NOUN NOUN NOUN NOUN NUM PUNCT
tagged_tokens: Bendrija_NOUN nepanaudoja_VERB visų_DET jiems_PRON skirtų_VERB dviejų_NUM tūkstančių_NUM kvadratinių_ADJ metrų_NOUN ploto_NOUN patalpų_NOUN Partizanų_NOUN gatvėje_NOUN 34_NUM ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Čia nuolat užsuka tik maždaug 13 vaikų .
tags: ADV ADV VERB PART ADP NUM NOUN PUNCT
tagged_tokens: Čia_ADV nuolat_ADV užsuka_VERB tik_PART maždaug_ADP 13_NUM vaikų_NOUN ._PUNCT

B) tokens: Čia visada ateina tik apytikriai 13 vaikų .
tags: ADV ADV VERB PART ADP NUM NOUN PUNCT
tagged_tokens: Čia_ADV visada_ADV ateina_VERB tik_PART apytikriai_ADP 13_NUM vaikų_NOUN ._PUNCT

C) tokens: Čia kiekvieną dieną pasirodo tik beveik 13 vaikų .
tags: ADV ADJ NOUN VERB PART ADP NUM NOUN PUNCT
tagged_tokens: Čia_ADV kiekvieną_ADJ dieną_NOUN pasirodo_VERB tik_PART beveik_ADP 13_NUM vaikų_NOUN ._PUNCTD) tokens: Čia kasdien lankosi tik apie 13 vaikų .
tags: ADV ADV VERB PART ADP NUM NOUN PUNCT
tagged_tokens: Čia_ADV kasdien_ADV lankosi_VERB tik_PART apie_ADP 13_NUM vaikų_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""A""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: „ Tad dalis jų numatytų erdvių galėtų būti paskirtos kitoms nepasiturinčiųjų grupėms , sulaukusių metų asmenų , iš problemiškų šeimų atvykusių vaikų paros centrams “ , - įsitikinęs Socialinių reikalų departamento direktorius Gediminas Jankus .
tags: PUNCT ADV NOUN PRON VERB NOUN NOUN AUX VERB ADJ PRON ADJ NOUN PUNCT VERB NOUN NOUN NOUN PUNCT NOUN NOUN ADP ADJ NOUN NOUN NOUN NOUN PUNCT PUNCT PUNCT VERB ADJ NOUN NOUN NOUN PROPN PROPN PUNCT
tagged_tokens: „_PUNCT Tad_ADV dalis_NOUN jų_PRON numatytų_VERB erdvių_NOUN galėtų_AUX būti_VERB paskirtos_ADJ kitoms_PRON nepasiturinčiųjų_ADJ grupėms_NOUN ,_PUNCT sulaukusių_VERB metų_NOUN asmenų_NOUN ,_PUNCT iš_ADP problemiškų_ADJ šeimų_NOUN atvykusių_VERB vaikų_NOUN paros_NOUN centrams_NOUN “_PUNCT ,_PUNCT -_PUNCT įsitikinęs_VERB Socialinių_ADJ reikalų_NOUN departamento_NOUN direktorius_NOUN Gediminas_PROPN Jankus_PROPN ._PUNCT

B) tokens: „ Taigi tam tikrą jų paskirto ploto dalį būtų galima nukreipti kitiems neįgalios padėties žmonių bendruomenėms , mūsų senjorų , iš rizikingų šeimų kilusių vaikų namams “ , - patikėjo Socialinių reikalų departamento direktorius Gediminas Jankus .
tags: PUNCT ADV DET PRON VERB NOUN NOUN NOUN AUX VERB VERB ADJ ADJ NOUN NOUN NOUN PUNCT NOUN ADJ PUNCT NOUN ADP ADJ NOUN NOUN NOUN NOUN PUNCT PUNCT PUNCT VERB ADJ NOUN NOUN NOUN PROPN PROPN PUNCT
tagged_tokens: „_PUNCT Taigi_ADV tam_DET tikrą_PRON paskirto_VERB ploto_NOUN dalį_NOUN būtų_AUX galima_VERB nukreipti_VERB kitiems_ADJ neįgalios_ADJ padėties_NOUN žmonių_NOUN bendruomenėms_NOUN ,_PUNCT mūsų_NOUN senjorų_ADJ ,_PUNCT iš_ADP rizikingų_ADJ šeimų_NOUN kilusių_VERB vaikų_NOUN namams_NOUN “_PUNCT ,_PUNCT -_PUNCT patikėjo_VERB Socialinių_ADJ reikalų_NOUN departamento_NOUN direktorius_NOUN Gediminas_PROPN Jankus_PROPN ._PUNCT

C) tokens: „ Arba tam tikrus jų skirto erdvės kiekį būtų galima dovanoti kitiems lėšų stygiaus grupėms , ilgametės gyvenimo patirties žmonėms , iš pavojingų šeimų ateities vaikų lopšeliams “ , - pabrėžė Socialinių reikalų departamento direktorius Gediminas Jankus .
tags: PUNCT CONJ DET PRON VERB NOUN NOUN NOUN AUX VERB VERB ADJ NOUN NOUN NOUN PUNCT ADJ NOUN NOUN NOUN PUNCT NOUN ADP ADJ NOUN NOUN NOUN NOUN PUNCT PUNCT PUNCT VERB ADJ NOUN NOUN NOUN PROPN PROPN PUNCT
tagged_tokens: „_PUNCT Arba_CONJ tam_DET tikrus_PRON skirto_VERB erdvės_NOUN kiekį_NOUN būtų_AUX galima_VERB dovanoti_VERB kitiems_ADJ lėšų_NOUN stygiaus_NOUN grupėms_NOUN ,_PUNCT ilgametės_ADJ gyvenimo_NOUN patirties_NOUN žmonėms_NOUN ,_PUNCT iš_ADP pavojingų_ADJ šeimų_NOUN ateities_VERB vaikų_NOUN lopšeliams_NOUN “_PUNCT ,_PUNCT -_PUNCT pabrėžė_VERB Socialinių_ADJ reikalų_NOUN departamento_NOUN direktorius_NOUN Gediminas_PROPN Jankus_PROPN ._PUNCTD) tokens: „ Todėl dalį jiems skirtų patalpų būtų galima skirti kitoms neįgaliųjų organizacijoms , pagyvenusių žmonių , vaikų iš rizikos grupės šeimų dienos centrams “ , - įsitikinęs Socialinių reikalų departamento direktorius Gediminas Jankus .
tags: PUNCT ADV NOUN PRON VERB NOUN AUX VERB VERB PRON NOUN NOUN PUNCT ADJ NOUN PUNCT NOUN ADP NOUN NOUN NOUN NOUN NOUN PUNCT PUNCT PUNCT VERB ADJ NOUN NOUN NOUN PROPN PROPN PUNCT
tagged_tokens: „_PUNCT Todėl_ADV dalį_NOUN jiems_PRON skirtų_VERB patalpų_NOUN būtų_AUX galima_VERB skirti_VERB kitoms_PRON neįgaliųjų_NOUN organizacijoms_NOUN ,_PUNCT pagyvenusių_ADJ žmonių_NOUN ,_PUNCT vaikų_NOUN iš_ADP rizikos_NOUN grupės_NOUN šeimų_NOUN dienos_NOUN centrams_NOUN “_PUNCT ,_PUNCT -_PUNCT įsitikinęs_VERB Socialinių_ADJ reikalų_NOUN departamento_NOUN direktorius_NOUN Gediminas_PROPN Jankus_PROPN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Naktį užsnūdau ir suprasičiau , kad Kauno poezijos autoriaus Petro Palilionio kolektyvui skirti ES lėšos atidavė dešimt milijardų litų .
tags: NOUN VERB CCONJ VERB PUNCT SCONJ PROPN NOUN GEN PROPN PROPN GEN NOUN VERB ADP NOUN NOUN AUX NUM NUM NOUN PUNCT
tagged_tokens: Naktį_NOUN užsnūdau_VERB ir_CCONJ suprasičiau_VERB ,_PUNCT kad_SCONJ Kauno_PROPN poezijos_NOUN autoriaus_GEN Petro_PROPN Palilionio_PROPN kolektyvui_GEN skirti_VERB ES_ADP lėšos_NOUN atidavė_AUX dešimt_NUM milijardų_NUM litų_NOUN ._PUNCT

B) tokens: Sapne užmiegojau ir suvajavau , jog Kauno poetinių kūrinių Petro Palilionio komandai padovanoti ES biudžeto pinigai skyrtų dešimt milijardų litų .
tags: NOUN VERB CCONJ VERB PUNCT SCONJ PROPN ADJ GEN PROPN PROPN DAT VERB ADP NOUN NOUN NOUN AUX NUM NUM NOUN PUNCT
tagged_tokens: Sapne_NOUN užmiegojau_VERB ir_CCONJ suvajavau_VERB ,_PUNCT jog_SCONJ Kauno_PROPN poetinių_ADJ kūrinių_GEN Petro_PROPN Palilionio_PROPN komandai_DAT padovanoti_VERB ES_ADP biudžeto_NOUN pinigai_NOUN skyrtų_AUX dešimt_NUM milijardų_NUM litų_NOUN ._PUNCT

C) tokens: Vakarį užsimerkęs ir prasapnavau , kad Kauno poetinės veiklos Petro Palilionio grupei pateikti ES dotacijos skiria dešimt milijardų litų .
tags: NOUN VERB CCONJ VERB PUNCT SCONJ PROPN ADJ GEN PROPN PROPN DAT VERB ADP NOUN NOUN VERB NUM NUM NOUN PUNCT
tagged_tokens: Vakarį_NOUN užsimerkęs_VERB ir_CCONJ prasapnavau_VERB ,_PUNCT kad_SCONJ Kauno_PROPN poetinės_ADJ veiklos_GEN Petro_PROPN Palilionio_PROPN grupei_DAT pateikti_VERB ES_ADP dotacijos_NOUN skiria_VERB dešimt_NUM milijardų_NUM litų_NOUN ._PUNCTD) tokens: Šiąnakt užmigau ir susapnavau , jog Kauno poetų poeto Petro Palilionio rinktinei išleisti Europos Sąjungos fondai skyrė dešimt milijardų litų .
tags: ADV VERB CCONJ VERB PUNCT SCONJ PROPN NOUN NOUN PROPN PROPN NOUN VERB PROPN NOUN NOUN VERB NUM NUM NOUN PUNCT
tagged_tokens: Šiąnakt_ADV užmigau_VERB ir_CCONJ susapnavau_VERB ,_PUNCT jog_SCONJ Kauno_PROPN poetų_NOUN poeto_NOUN Petro_PROPN Palilionio_PROPN rinktinei_NOUN išleisti_VERB Europos_PROPN Sąjungos_NOUN fondai_NOUN skyrė_VERB dešimt_NUM milijardų_NUM litų_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Atsigavęs ilgokai galvojau , koks grožis tai būtų leidinys ir iš kokių nepersminentos audinys bus jo aplankas .
tags: VERB ADV VERB PUNCT DET NOUN DET VERB AUX NOUN CCONJ ADP DET VERB NOUN VERB PRON NOUN PUNCT
tagged_tokens: Atsigavęs_VERB ilgokai_ADV galvojau_VERB ,_PUNCT koks_DET grožis_NOUN tai_DET būtų_VERB AUX leidinys_NOUN ir_CCONJ iš_ADP kokių_DET nepersminentos_VERB audinys_NOUN bus_VERB jo_PRON aplankas_NOUN ._PUNCT

B) tokens: Prabudęs ilgiai svarsčiau , kokia spalvingybė tai galėtų būti publikacija ir iš kokių nesuskverbtos medžios bus jos viršus .
tags: VERB ADV VERB PUNCT DET NOUN DET VERB AUX NOUN CCONJ ADP DET VERB NOUN VERB PRON NOUN PUNCT
tagged_tokens: Prabudęs_VERB ilgiai_ADV svarsčiau_VERB ,_PUNCT kokia_DET spalvingybė_NOUN tai_DET galėtų_VERB AUX publikacija_NOUN ir_CCONJ iš_ADP kokių_DET nesuskverbtos_VERB medžios_NOUN bus_VERB jos_PRON viršus_NOUN ._PUNCT

C) tokens: Pažadinęs ilgai apsvarsčiau , koks nuostabumas tai būtų šriftas ir iš kokių nedraskytos dervos bus jos apvalkalas .
tags: VERB ADV VERB PUNCT DET NOUN DET VERB AUX NOUN CCONJ ADP DET VERB NOUN VERB PRON NOUN PUNCT
tagged_tokens: Pažadinęs_VERB ilgai_ADV apsvarsčiau_VERB ,_PUNCT koks_DET nuostabumas_NOUN tai_DET būtų_VERB AUX šriftas_NOUN ir_CCONJ iš_ADP kokių_DET nedraskytos_VERB dervos_NOUN bus_VERB jos_PRON apvalkalas_NOUN ._PUNCTD) tokens: Nubudęs ilgai mąsčiau , kokio gražumo tai turėtų būti knyga ir iš kokios neperšaunamos medžiagos bus jos viršelis .
tags: VERB ADV VERB PUNCT DET NOUN DET VERB AUX NOUN CCONJ ADP DET VERB NOUN VERB PRON NOUN PUNCT
tagged_tokens: Nubudęs_VERB ilgai_ADV mąsčiau_VERB ,_PUNCT kokio_DET gražumo_NOUN tai_DET turėtų_VERB būti_AUX knyga_NOUN ir_CCONJ iš_ADP kokios_DET neperšaunamos_VERB medžiagos_NOUN bus_VERB jos_PRON viršelis_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Ir tik tuomet sapnuotė subyrėjo , ir prasilenkė kasdienybė .
tags: CCONJ PART ADV NOUN VERB PUNCT CCONJ VERB NOUN PUNCT
tagged_tokens: Ir_CCONJ tik_PART tuomet_ADV sapnuotė_NOUN subyrėjo_VERB ,_PUNCT ir_CCONJ prasilenkė_VERB kasdienybė_NOUN ._PUNCT

B) tokens: Ir tik tąkart svajonė išsiskaidė , ir paliko banalumą .
tags: CCONJ PART ADV NOUN VERB PUNCT CCONJ VERB NOUN PUNCT
tagged_tokens: Ir_CCONJ tik_PART tąkart_ADV svajonė_NOUN išsiskaidė_VERB ,_PUNCT ir_CCONJ paliko_VERB banalumą_NOUN ._PUNCT

C) tokens: Ir tik anąsyk poezija susprogo , ir atsivelgė tikrovė .
tags: CCONJ PART ADV NOUN VERB PUNCT CCONJ VERB NOUN PUNCT
tagged_tokens: Ir_CCONJ tik_PART anąsyk_ADV poezija_NOUN susprogo_VERB ,_PUNCT ir_CCONJ atsivelgė_VERB tikrovė_NOUN ._PUNCTD) tokens: Ir tik tada sapnas išsisklaidė , ir liko banali realybė .
tags: CCONJ PART ADV NOUN VERB PUNCT CCONJ VERB ADJ NOUN PUNCT
tagged_tokens: Ir_CCONJ tik_PART tada_ADV sapnas_NOUN išsisklaidė_VERB ,_PUNCT ir_CCONJ liko_VERB banali_ADJ realybė_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Leidinys juk elektros nesukurs , jį sukurs šviežioji elektrinė , dėl kurios jau skamba pramonės magnatų šaudymai .
tags: NOUN PART NOUN VERB PUNCT PRON VERB ADJ NOUN PUNCT ADP DET PART VERB NOUN NOUN NOUN NOUN PUNCT
tagged_tokens: Leidinys_NOUN juk_PART elektros_NOUN nesukurs_VERB ,_PUNCT jį_PRON sukurs_VERB šviežioji_ADJ elektrinė_NOUN ,_PUNCT dėl_ADP kurios_DET jau_PART skamba_VERB pramonės_NOUN magnatų_NOUN šaudymai_NOUN ._PUNCT

B) tokens: Tomas juk elektros nepagamins , ją pagamins naujutėlė elektrinė , dėl kurios jau pulsuoja verslininkų didžiokų šūviai .
tags: NOUN PART NOUN VERB PUNCT PRON VERB ADJ NOUN PUNCT ADP DET PART VERB NOUN NOUN NOUN NOUN PUNCT
tagged_tokens: Tomas_NOUN juk_PART elektros_NOUN nepagamins_VERB ,_PUNCT ją_PRON pagamins_VERB naujutėlė_ADJ elektrinė_NOUN ,_PUNCT dėl_ADP kurios_DET jau_PART pulsuoja_VERB verslininkų_NOUN didžiokų_NOUN šūviai_NOUN ._PUNCT

C) tokens: Puslapis juk elektros nesuteiks , ją suteiks naujoji energetinė , dėl kurios jau drebėti pradėjo biznio milžinų salygos .
tags: NOUN PART NOUN VERB PUNCT PRON VERB ADJ NOUN PUNCT ADP DET PART VERB VERB NOUN NOUN NOUN NOUN PUNCT
tagged_tokens: Puslapis_NOUN juk_PART elektros_NOUN nesuteiks_VERB ,_PUNCT ją_PRON suteiks_VERB naujoji_ADJ energetinė_NOUN ,_PUNCT dėl_ADP kurios_DET jau_PART drebėti_VERB pradėjo_VERB biznio_NOUN milžinų_NOUN salygos_NOUN ._PUNCTD) tokens: Knyga juk elektros negamins , ją gamins naujoji elektrinė , dėl kurios jau pasigirdo verslo didžiūnų ginklų skambesys .
tags: NOUN PART NOUN VERB PUNCT PRON VERB ADJ NOUN PUNCT ADP DET PART VERB NOUN NOUN NOUN NOUN PUNCT
tagged_tokens: Knyga_NOUN juk_PART elektros_NOUN negamins_VERB ,_PUNCT ją_PRON gamins_VERB naujoji_ADJ elektrinė_NOUN ,_PUNCT dėl_ADP kurios_DET jau_PART pasigirdo_VERB verslo_NOUN didžiūnų_NOUN ginklų_NOUN skambesys_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Dvi konfliktuojančios šalys sukelia didelę įtampos tarpą , o jeigu prie šių žaibiškų replikų galėtume pritvirtinti vielas , srovė jomis skrieti pradėtų jau dabar .
tags: NUM VERB ADJ NOUN VERB ADJ NOUN NOUN PUNCT CCONJ SCONJ ADP DET ADJ NOUN AUX VERB VERB NOUN PUNCT NOUN PRON VERB VERB ADV ADV PUNCT
tagged_tokens: Dvi_NUM konfliktuojančios_VERB šalys_ADJ sukelia_VERB didelę_ADJ įtampos_NOUN tarpą_NOUN ,_PUNCT o_CCONJ jeigu_SCONJ prie_ADP šių_DET žaibiškų_ADJ replikų_NOUN galėtume_AUX pritvirtinti_VERB vielas_NOUN ,_PUNCT srovė_NOUN jomis_PRON skrieti_VERB pradėtų_VERB jau_ADV dabar_ADV ._PUNCT

B) tokens: Du besiginčijantys būriai kelia milžinišką įtampą , ir jei prie šių blizgančių pareiškimų būtų galima užsidėti kabelius , elektros jais griūtų jau dabar .
tags: NUM VERB NOUN VERB ADJ NOUN PUNCT CCONJ SCONJ ADP DET VERB NOUN AUX ADJ VERB NOUN PUNCT NOUN PRON VERB PART ADV PUNCT
tagged_tokens: Du_NUM besiginčijantys_VERB būriai_NOUN kelia_VERB milžinišką_ADJ įtampą_NOUN ,_PUNCT ir_CCONJ jei_SCONJ prie_ADP šių_DET blizgančių_VERB pareiškimų_NOUN būtų_AUX galima_ADJ užsidėti_VERB kabelius_NOUN ,_PUNCT elektros_NOUN jais_PRON griūtų_VERB jau_PART dabar_ADV ._PUNCT

C) tokens: Abu besipykstantys blokai lemia didžiulę įtampos padėtį , bei jei prie šių švytinčių žodžių būtų leidžiama pamontuoti vadeles , elektra jomis plūstų jau dabar .
tags: PRON VERB NOUN VERB ADJ NOUN NOUN PUNCT CCONJ SCONJ ADP DET VERB NOUN AUX VERB VERB NOUN PUNCT NOUN PRON VERB PART ADV PUNCT
tagged_tokens: Abu_PRON besipykstantys_VERB blokai_NOUN lemia_VERB didžiulę_ADJ įtampos_NOUN padėtį_NOUN ,_PUNCT bei_CCONJ jei_SCONJ prie_ADP šių_DET švytinčių_VERB žodžių_NOUN būtų_AUX leidžiama_ADJ pamontuoti_VERB vadeles_NOUN ,_PUNCT elektra_NOUN jomis_PRON plūstų_VERB jau_PART dabar_ADV ._PUNCTD) tokens: Abi besivaidijančios pusės kuria nemažą įtampą , tad jei prie šių kibirkščiuojančių pasisakymų būtų įmanoma prijungti laidus , elektra jais tekėtų jau dabar .
tags: PRON VERB NOUN VERB ADJ NOUN PUNCT CCONJ SCONJ ADP DET VERB NOUN AUX ADJ VERB NOUN PUNCT NOUN PRON VERB PART ADV PUNCT
tagged_tokens: Abi_PRON besivaidijančios_VERB pusės_NOUN kuria_VERB nemažą_ADJ įtampą_NOUN ,_PUNCT tad_CCONJ jei_SCONJ prie_ADP šių_DET kibirkščiuojančių_VERB pasisakymų_NOUN būtų_AUX įmanoma_ADJ prijungti_VERB laidus_NOUN ,_PUNCT elektra_NOUN jais_PRON tekėtų_VERB jau_PART dabar_ADV ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Beje , dar pasirodė rusas .
tags: PART X ADV VERB NOUN PUNCT
tagged_tokens: Beje_PART ,_PUNCT dar_ADV pasirodė_VERB rusas_NOUN ._PUNCT

B) tokens: Tuo metu , vėliau atėjo rusas .
tags: PRON ADV PUNCT ADV VERB NOUN PUNCT
tagged_tokens: Tuo_PRON metu_ADV ,_PUNCT vėliau_ADV atėjo_VERB rusas_NOUN ._PUNCT

C) tokens: Kitaip tariant , anksčiau sugrįžo rusas .
tags: ADV VERB PUNCT ADV VERB NOUN PUNCT
tagged_tokens: Kitaip_ADV tariant_VERB ,_PUNCT anksčiau_ADV sugrįžo_VERB rusas_NOUN ._PUNCTD) tokens: Kita vertus , vėl atsirado rusas .
tags: ADV X PUNCT ADV VERB NOUN PUNCT
tagged_tokens: Kita_ADV vertus_X ,_PUNCT vėl_ADV atsirado_VERB rusas_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Rusija visada mūsų šaliai priešinosi ir priešinosis .
tags: PROPN ADV PRON PROPN VERB CCONJ VERB PUNCT
tagged_tokens: Rusija_PROPN visada_ADV mūsų_PRON šaliai_PROPN priešinosi_VERB ir_CCONJ priešinosis_VERB ._PUNCT

B) tokens: Kremlis nuolat Lietuvai trukdė ir trukdys .
tags: PROPN ADV PROPN VERD CCONJ VERB PUNCT
tagged_tokens: Kremlis_PROPN nuolat_ADV Lietuvai_PROPN trukdė_VERB ir_CCONJ trukdys_VERB ._PUNCT

C) tokens: Maskva nepertraukiamai Lietuvai pakenkė ir pakenks .
tags: PROPN ADV PROPN VERB CCONJ VERB PUNCT
tagged_tokens: Maskva_PROPN nepertraukiamai_ADV Lietuvai_PROPN pakenkė_VERB ir_CCONJ pakenks_VERB ._PUNCTD) tokens: Rusas amžinai Lietuvai kenkė ir kenks .
tags: NOUN ADV PROPN VERB CCONJ VERB PUNCT
tagged_tokens: Rusas_NOUN amžinai_ADV Lietuvai_PROPN kenkė_VERB ir_CCONJ kenks_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Ir privalėtų , kadangi tik lietuviai tuomet buvo Kremliaus patalpose ir kas žino ką jie ten darė .
tags: CCONJ VERB PUNCT SCONJ ADV NOUN ADV VERB PROPN GEN CCONJ INTJ PRON PRON ADV VERB PUNCT
tagged_tokens: Ir_CCONJ privalėtų_VERB ,_PUNCT kadangi_SCONJ tik_ADV lietuviai_NOUN tuomet_ADV buvo_VERB Kremliaus_PROPN GEN_CCONJ kas_INTJ žino_VERB ką_PRON jie_PRON ten_ADV darė_VERB ._PUNCT

B) tokens: Taip pat turi , nes vien lietuviai anuomet rinkosi Kremlį ir neaišku ką čia jie veikė .
tags: ADV VERB PUNCT SCONJ ADV NOUN ADV VERB PROPN CCONJ PART PRON ADV PRON PRON VERB PUNCT
tagged_tokens: Taip_ADV pat_VERB ,_PUNCT nes_SCONJ vien_ADV lietuviai_NOUN anuomet_ADV rinkosi_VERB Kremlį_PROPN ir_CCONJ neaišku_PART ką_PRON čia_ADV jie_PRON veikė_VERB ._PUNCT

C) tokens: Be to reikėtų , kad būtent lietuviai tada pasirinko Kremlį ir nežinoma ką ten jie darė .
tags: ADP VERB VERB PUNCT SCONJ PART NOUN ADV VERB PROPN CCONJ PART PRON ADV PRON VERB PUNCT
tagged_tokens: Be_ADP to_VERB reikėtų_VERB ,_PUNCT kad_SCONJ būtent_PART lietuviai_NOUN tada_ADV pasirinko_VERB Kremlį_PROPN ir_CCONJ nežinoma_PART ką_PRON ten_ADV jie_PRON darė_VERB ._PUNCTD) tokens: O turėtų , nes būtent lietuviai tais metais sėdėjo Kremliuje ir dar nežinia ką ten veikė .
tags: CCONJ VERB PUNCT SCONJ PART NOUN DET NOUN VERB PROPN CCONJ PART ADV PRON ADV VERB PUNCT
tagged_tokens: O_CCONJ turėtų_VERB ,_PUNCT nes_SCONJ būtent_PART lietuviai_NOUN tais_DET metais_NOUN sėdėjo_VERB Kremliuje_PROPN ir_CCONJ dar_PART nežinia_ADV ką_PRON ten_ADV veikė_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Jei būtumėte iki dabar sėdėję čia , tikiuosi , ir būtumėte sukūrę naujajai branduolinei jėgainei reaktorius .
tags: SCONJ AUX ADP ADV VERB ADV PUNCT VERB PUNCT CCONJ AUX VERB ADJ ADJ NOUN NOUN PUNCT
tagged_tokens: Jei_SCONJ būtumėte_AUX iki_ADP dabar_ADV sėdėję_VERB čia_ADV ,_PUNCT tikiuosi_VERB ,_PUNCT ir_CCONJ būtumėte_AUX sukūrę_VERB naujajai_ADJ branduolinei_ADJ jėgainei_NOUN reaktorius_NOUN ._PUNCT

B) tokens: Jei būtote vis dar sėdintys an ten , spėju , ir būtote pastatę naujosiose ae jėgainėse reaktorų .
tags: SCONJ AUX ADV ADV VERB ADV PUNCT VERB PUNCT CCONJ AUX VERB ADJ ADJ NOUN NOUN PUNCT
tagged_tokens: Jei_SCONJ būtote_AUX vis_ADV dar_ADV sėdintys_VERB an_ADP ten_ADV ,_PUNCT spėju_VERB ,_PUNCT ir_CCONJ būtote_AUX pastatę_VERB naujosiose_ADJ ae_ADJ jėgainėse_NOUN reaktorų_NOUN ._PUNCT

C) tokens: Jei būtų likę iki šito momento ten , mano , ir būtų pastatyti naujajai atominioji jėgienei reaktoriai .
tags: SCONJ AUX VERB ADP PRON NOUN ADV PUNCT VERB PUNCT CCONJ AUX VERB ADJ ADJ NOUN NOUN PUNCT
tagged_tokens: Jei_SCONJ būtų_AUX likę_VERB iki_ADP šito_PRON momento_NOUN ten_ADV ,_PUNCT mano_VERB ,_PUNCT ir_CCONJ būtų_AUX pastatyti_VERB naujajai_ADJ atominioji_ADJ jėgienei_NOUN reaktoriai_NOUN ._PUNCTD) tokens: Jei būtų tebesėdėję ligi šiol , ten , manau , ir būtų pastatę naujosios atominės elektrinės reaktorių .
tags: SCONJ AUX VERB ADV X PUNCT ADV PUNCT VERB PUNCT CCONJ AUX VERB ADJ ADJ NOUN NOUN PUNCT
tagged_tokens: Jei_SCONJ būtų_AUX tebesėdėję_VERB ligi_ADV šiol_X ,_PUNCT ten_ADV ,_PUNCT manau_VERB ,_PUNCT ir_CCONJ būtų_AUX pastatę_VERB naujosios_ADJ atominės_ADJ elektrinės_NOUN reaktorių_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Kremlinyje jį taip pat saiko , nors vieni gal žino , kad kažkurioj „ Maximoj “ .
tags: PROPN PRON ADV PRON PUNCT SCONJ NOUN PART VERB PUNCT CCONJ ADV X PUNCT PROPN PUNCT PUNCT
tagged_tokens: Kremlinyje_PROPN jį_PRON taip_ADV saiko_PRON ,_PUNCT nors_SCONJ vieni_NOUN gal_PART žino_VERB ,_PUNCT kad_CCONJ kažkurioj_ADV X_PUNCT Maximoj_PROPN ._PUNCT ._PUNCT

B) tokens: Kremliuje jo ir vaga , nors kiti gal spėja , jog kokioj nors „ Maximoj “ .
tags: PROPN PRON CCONJ NOUN PUNCT SCONJ PRON PART VERB PUNCT SCONJ DET X PUNCT PROPN PUNCT PUNCT
tagged_tokens: Kremliuje_PROPN jo_PRON ir_CCONJ vaga_NOUN ,_PUNCT nors_SCONJ kiti_PRON gal_PART spėja_VERB ,_PUNCT jog_SCONJ kokioj_DET nors_X PUNCT Maximoj_PROPN ._PUNCT ._PUNCT

C) tokens: Kremliaus jam taip pat vienija , nors kas gal tiki , kad kurioj nors „ Maximoj “ .
tags: PROPN PRON ADV PRON PUNCT SCONJ NOUN PART VERB PUNCT CCONJ DET X PUNCT PROPN PUNCT PUNCT
tagged_tokens: Kremliaus_PROPN jam_PRON taip_ADV vienija_PRON ,_PUNCT nors_SCONJ kas_NOUN gal_PART tiki_VERB ,_PUNCT kad_CCONJ kurioj_DET nors_X PUNCT Maximoj_PROPN ._PUNCT ._PUNCTD) tokens: Kremliuje jam ir vieta , nors kai kas gal mano , jog kurioj nors „ Maximoj “ .
tags: PROPN PRON CCONJ NOUN PUNCT SCONJ PRON X PART VERB PUNCT SCONJ DET X PUNCT PROPN PUNCT PUNCT
tagged_tokens: Kremliuje_PROPN jam_PRON ir_CCONJ vieta_NOUN ,_PUNCT nors_SCONJ kai_PRON kas_X gal_PART mano_VERB ,_PUNCT jog_SCONJ kurioj_DET nors_X „_PUNCT Maximoj_PROPN “_PUNCT ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Tik tie , devynenriliai susirinks , kas prie šulinio pirmaujantis , nupieštoji K . Gaubrio leidinys vis tiek neliks išspausdintas , nors smarkiai reikėtų , o mes už šviesą ir toliau teiksim dar daugiau , nes dar fainiau mūsų gyvenimą ji pašvietės .
tags: ADV X PUNCT NOUN VERB PUNCT INT ADP NOUN ADJ PUNCT VERB X PUNCT PROPN NOUN ADV PART VERB VERB PUNCT SCONJ ADV VERB PUNCT CCONJ PRON ADP NOUN PART ADV VERB ADV ADV PUNCT SCONJ ADV ADJ PRON NOUN PRON VERB PUNCT
tagged_tokens: Tik_ADV tie_X ,_PUNCT devynenriliai_NOUN susirinks_VERB ,_PUNCT kas_INT prie_ADP šulinio_NOUN pirmaujantis_ADJ ,_PUNCT nupieštoji_VERB K_X ._PUNCT Gaubrio_PROPN leidinys_NOUN vis_ADV tiek_PART neliks_VERB išspausdintas_VERB ,_PUNCT nors_SCONJ smarkiai_ADV reikėtų_VERB ,_PUNCT o_CCONJ mes_PRON už_ADP šviesą_NOUN ir_PART toliau_ADV teiksim_VERB dar_ADV daugiau_ADV ,_PUNCT nes_SCONJ dar_ADV fainiau_ADJ mūsų_PRON gyvenimą_NOUN ji_PRON pašvietės_VERB ._PUNCT

B) tokens: Vos vien , šešėnėliai nuspręs , kuris prie čiaupų pirmiausias , nurašytoji V . Pliuškino publikacija taip ir nebus paskelbta , nors labai geistų , o mes už lempą ir toliau mokėsim vis daugiau , nes vis nuostabiau mūsų kasdienybę ji pasvietė .
tags: ADV X PUNCT NOUN VERB PUNCT DET ADP NOUN ADJ PUNCT VERB X PUNCT PROPN NOUN ADV PART VERB VERB PUNCT SCONJ ADV VERB PUNCT CCONJ PRON ADP NOUN PART ADV VERB VERB ADV PUNCT SCONJ PART ADJ PRON NOUN PRON VERB PUNCT
tagged_tokens: Vos_ADV vien_X ,_PUNCT šešėnėliai_NOUN nuspręs_VERB ,_PUNCT kuris_DET prie_ADP čiaupų_NOUN pirmiausias_ADJ ,_PUNCT nurašytoji_VERB V_X ._PUNCT Pliuškino_PROPN publikacija_NOUN taip_ADV ir_PART nebus_VERB paskelbta_VERB ,_PUNCT nors_SCONJ labai_ADV geistų_VERB ,_PUNCT o_CCONJ mes_PRON už_ADP lempą_NOUN ir_PART toliau_ADV mokėsim_VERB vis_VERB daugiau_ADV ,_PUNCT nes_SCONJ vis_PART nuostabiau_ADJ mūsų_PRON kasdienybę_NOUN ji_PRON pasvietė_VERB ._PUNCT

C) tokens: Tiek vien , valdovai aiškinsis , kas prie tvenkinio pirmininkas , užgriebusi K . Šutanio knygelė taip ir nebus parengta , nors labai trokštų , o mes už lemputę ir toliau skolinsim vis daugiau , nes vis puikiau mūsų namus ji nusviestų .
tags: ADV X PUNCT NOUN VERB PUNCT INT ADP NOUN NOUN PUNCT VERB X PUNCT PROPN NOUN ADV PART VERB VERB PUNCT SCONJ ADV VERB PUNCT CCONJ PRON ADP NOUN PART ADV VERB VERB ADV PUNCT SCONJ PART ADJ PRON NOUN PRON VERB PUNCT
tagged_tokens: Tiek_ADV vien_X ,_PUNCT valdovai_NOUN aiškinsis_VERB ,_PUNCT kas_INT prie_ADP tvenkinio_NOUN pirmininkas_NOUN ,_PUNCT užgriebusi_VERB K_X ._PUNCT Šutanio_PROPN knygelė_NOUN taip_ADV ir_PART nebus_VERB parengta_VERB ,_PUNCT nors_SCONJ labai_ADV trokštų_VERB ,_PUNCT o_CCONJ mes_PRON už_ADP lemputę_NOUN ir_PART toliau_ADV skolinsim_VERB vis_VERB daugiau_ADV ,_PUNCT nes_SCONJ vis_PART puikiau_ADJ mūsų_PRON namus_NOUN ji_PRON nusviestų_VERB ._PUNCTD) tokens: Tiek to , didžiūnai išsiaiškins , kuris prie girdyklos pirmesnis , susapnuotoji P . Palilionio knyga taip ir nebus išleista , nors labai norėtųsi , o mes už elektrą ir toliau mokėsim vis daugiau , nes vis prašmatnesnę mūsų buitį ji apšvies .
tags: ADV X PUNCT NOUN VERB PUNCT DET ADP NOUN ADJ PUNCT VERB X PUNCT PROPN NOUN ADV PART VERB VERB PUNCT SCONJ ADV VERB PUNCT CCONJ PRON ADP NOUN PART ADV VERB PART ADV PUNCT SCONJ PART ADJ PRON NOUN PRON VERB PUNCT
tagged_tokens: Tiek_ADV to_X ,_PUNCT didžiūnai_NOUN išsiaiškins_VERB ,_PUNCT kuris_DET prie_ADP girdyklos_NOUN pirmesnis_ADJ ,_PUNCT susapnuotoji_VERB P_X ._PUNCT Palilionio_PROPN knyga_NOUN taip_ADV ir_PART nebus_VERB išleista_VERB ,_PUNCT nors_SCONJ labai_ADV norėtųsi_VERB ,_PUNCT o_CCONJ mes_PRON už_ADP elektrą_NOUN ir_PART toliau_ADV mokėsim_VERB vis_PART daugiau_ADV ,_PUNCT nes_SCONJ vis_PART prašmatnesnę_ADJ mūsų_PRON buitį_NOUN ji_PRON apšvies_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Egzistuoja ir vertinamų dalykų .
tags: VERB PART VERB NOUN PUNCT
tagged_tokens: Egzistuoja_VERB ir_PART vertinamų_VERB dalykų_NOUN ._PUNCT

B) tokens: Būna ir giriamų dalykų .
tags: VERB PART VERB NOUN PUNCT
tagged_tokens: Būna_VERB ir_PART giriamų_VERB dalykų_NOUN ._PUNCT

C) tokens: Apima ir teigiamų dalykų .
tags: VERB PART VERB NOUN PUNCT
tagged_tokens: Apima_VERB ir_PART teigiamų_VERB dalykų_NOUN ._PUNCTD) tokens: Yra ir sveikintinų dalykų .
tags: VERB PART VERB NOUN PUNCT
tagged_tokens: Yra_VERB ir_PART sveikintinų_VERB dalykų_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""A""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Kauno savivaldybės vadovas , visiems apstulbinęs komersinių pastatų Nemuno salos projektus , netikėtai sušaukė visą būrį architektų - gal ką naudingo praneš .
tags: PROPN NOUN NOUN PUNCT DET VERB ADJ NOUN PROPN NOUN NOUN PUNCT ADV VERB DET NOUN NOUN PUNCT PART PRON ADJ VERB PUNCT
tagged_tokens: Kauno_PROPN savivaldybės_NOUN vadovas_NOUN ,_PUNCT visiems_DET apstulbinęs_VERB komersinių_ADJ pastatų_NOUN Nemuno_PROPN salos_NOUN projektus_NOUN ,_PUNCT netikėtai_ADV sušaukė_VERB visą_DET būrį_NOUN architektų_NOUN -_PUNCT gal_PART ką_PRON naudingo_ADJ praneš_VERB ._PUNCT

B) tokens: Kauno sostinės lyderis , visus sukrėtęs prekybinių statinių Nemuno saloje koncepcijas , nenumatytai sukvietė visą spiečių architektų - gal ką tinkamo pasakytė .
tags: PROPN NOUN NOUN PUNCT DET VERB ADJ NOUN PROPN NOUN NOUN PUNCT ADV VERB DET NOUN NOUN PUNCT PART PRON ADJ VERB PUNCT
tagged_tokens: Kauno_PROPN sostinės_NOUN lyderis_NOUN ,_PUNCT visus_DET sukrėtęs_VERB prekybinių_ADJ statinių_NOUN Nemuno_PROPN saloje_NOUN koncepcijas_NOUN ,_PUNCT nenumatytai_ADV sukvietė_VERB visą_DET spiečių_NOUN architektų_NOUN -_PUNCT gal_PART ką_PRON tinkamo_ADJ pasakytė_VERB ._PUNCT

C) tokens: Kauno miesto šefas , visiems padaręs įspūdį verslinių pastatymų Nemuno saloje planus , staiga suorganizavo visą gaują architektų - gal ką vertingo pareikš .
tags: PROPN NOUN NOUN PUNCT DET VERB NOUN ADJ NOUN PROPN NOUN NOUN PUNCT ADV VERB DET NOUN NOUN PUNCT PART PRON ADJ VERB PUNCT
tagged_tokens: Kauno_PROPN miesto_NOUN šefas_NOUN ,_PUNCT visiems_DET padaręs_VERB įspūdį_NOUN verslinių_ADJ pastatymų_NOUN Nemuno_PROPN saloje_NOUN planus_NOUN ,_PUNCT staiga_ADV suorganizavo_VERB visą_DET gaują_NOUN architektų_NOUN -_PUNCT gal_PART ką_PRON vertingo_ADJ pareikš_VERB ._PUNCTD) tokens: Kauno meras , visus nustebinęs komercinių statybų Nemuno saloje planais , staiga susikvietė visą tuntą architektų - gal ką gero pasakys .
tags: PROPN NOUN PUNCT DET VERB ADJ NOUN PROPN NOUN NOUN PUNCT ADV VERB DET NOUN NOUN PUNCT PART PRON ADJ VERB PUNCT
tagged_tokens: Kauno_PROPN meras_NOUN ,_PUNCT visus_DET nustebinęs_VERB komercinių_ADJ statybų_NOUN Nemuno_PROPN saloje_NOUN planais_NOUN ,_PUNCT staiga_ADV susikvietė_VERB visą_DET tuntą_NOUN architektų_NOUN -_PUNCT gal_PART ką_PRON gero_ADJ pasakys_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Nei vieną ankstesnių Kauno miesto vadovų idėjų sunaikinėjas A . Karalius buvo pakviestas .
tags: PART NUM ADJ PROPN NOUN NOUN NOUN NOUN X PUNCT PROPN AUX VERB PUNCT
tagged_tokens: Nei_PART vieną_NUM ankstesnių_ADJ Kauno_PROPN miesto_NOUN vadovų_NOUN idėjų_NOUN sunaikinėjas_NOUN A_X ._PUNCT Karalius_PROPN buvo_AUX pakviestas_VERB ._PUNCT

B) tokens: Ne vienas ankstesnių Kauno merų projektų naikintojas A . Karalius buvo pakviestas .
tags: PART NUM ADJ PROPN NOUN NOUN NOUN NOUN X PUNCT PROPN AUX VERB PUNCT
tagged_tokens: Ne_PART vienas_NUM ankstesnių_ADJ Kauno_PROPN merų_NOUN projektų_NOUN naikintojas_NOUN A_X ._PUNCT Karalius_PROPN buvo_AUX pakviestas_VERB ._PUNCT

C) tokens: Neskaitomas ankstesnių Kauno miestelio šefų koncepcijų griovėjas A . Karalius buvo pakviestas .
tags: ADJ ADJ PROPN NOUN NOUN NOUN NOUN X PUNCT PROPN AUX VERB PUNCT
tagged_tokens: Neskaitomas_ADJ ankstesnių_ADJ Kauno_PROPN miestelio_NOUN šefų_NOUN koncepcijų_NOUN griovėjas_NOUN A_X ._PUNCT Karalius_PROPN buvo_AUX pakviestas_VERB ._PUNCTD) tokens: Net žinomas ankstesnių Kauno merų planų žlugdytojas A . Karalius buvo pakviestas .
tags: PART VERB ADJ PROPN NOUN NOUN NOUN X PUNCT PROPN AUX VERB PUNCT
tagged_tokens: Net_PART žinomas_VERB ankstesnių_ADJ Kauno_PROPN merų_NOUN planų_NOUN žlugdytojas_NOUN A_X ._PUNCT Karalius_PROPN buvo_AUX pakviestas_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Įrašo .
tags: VERB PUNCT
tagged_tokens: Įrašo_VERB ._PUNCT

B) tokens: Įžiebia .
tags: VERB PUNCT
tagged_tokens: Įžiebia_VERB ._PUNCT

C) tokens: Imena .
tags: VERB PUNCT
tagged_tokens: Imena_VERB ._PUNCTD) tokens: Įkvepia .
tags: VERB PUNCT
tagged_tokens: Įkvepia_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Žavus .
tags: ADJ PUNCT
tagged_tokens: Žavus_ADJ ._PUNCT

B) tokens: Patrauklus .
tags: ADJ PUNCT
tagged_tokens: Patrauklus_ADJ ._PUNCT

C) tokens: Trankus .
tags: ADJ PUNCT
tagged_tokens: Trankus_ADJ ._PUNCTD) tokens: Žavi .
tags: VERB PUNCT
tagged_tokens: Žavi_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Rūnaudzia .
tags: VERB PUNCT
tagged_tokens: Rūnaudzia_VERB ._PUNCT

B) tokens: Nuliūdina .
tags: VERB PUNCT
tagged_tokens: Nuliūdina_VERB ._PUNCT

C) tokens: Smerkia .
tags: VERB PUNCT
tagged_tokens: Smerkia_VERB ._PUNCTD) tokens: Guodžia .
tags: VERB PUNCT
tagged_tokens: Guodžia_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Bet buvę vadovai taip pat , matyt , „ kalbėdavosi “ su ekspertais .
tags: CCONJ ADJ NOUN ADV PUNCT VERB PUNCT PUNCT VERB PUNCT ADP NOUN PUNCT
tagged_tokens: Bet_CCONJ buvę_ADJ vadovai_NOUN taip_ADV ,_PUNCT matyt_VERB ,_PUNCT „_PUNCT kalbėdavosi_VERB “_PUNCT su_ADP ekspertais_NOUN ._PUNCT

B) tokens: Vis dėlto įprasti miesto galvai anaiptol , regis , „ bendravę “ su profesionalais .
tags: ADV CONJ ADJ NOUN NOUN ADV PUNCT NOUN PUNCT PUNCT VERB PUNCT ADP NOUN PUNCT
tagged_tokens: Vis_ADV dėlto_CONJ įprasti_ADJ miesto_NOUN galvai_NOUN anaiptol_ADV ,_PUNCT regis_NOUN ,_PUNCT „_PUNCT bendravę_VERB “_PUNCT su_ADP profesionalais_NOUN ._PUNCT

C) tokens: Tamen kiti įtakingi valdantieji beveik , atrodo , „ konsultavosi “ su žinovais .
tags: CONJ ADJ ADJ NOUN ADV PUNCT ADV PUNCT PUNCT VERB PUNCT ADP NOUN PUNCT
tagged_tokens: Tamen_CONJ kiti_ADJ įtakingi_ADJ valdantieji_NOUN beveik_ADV ,_PUNCT atrodo_ADV ,_PUNCT „_PUNCT konsultavosi_VERB “_PUNCT su_ADP žinovais_NOUN ._PUNCTD) tokens: Tačiau ankstesni merai irgi , rodos , „ tardavosi “ su specialistais .
tags: CCONJ ADJ NOUN ADV PUNCT PART PUNCT PUNCT VERB PUNCT ADP NOUN PUNCT
tagged_tokens: Tačiau_CCONJ ankstesni_ADJ merai_NOUN irgi_ADV ,_PUNCT rodos_PART ,_PUNCT „_PUNCT tardavosi_VERB “_PUNCT su_ADP specialistais_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""C""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Tiktai tada būdavo taip buvę .
tags: PART ADV VERB ADV VERB PUNCT
tagged_tokens: Tiktai_PART tada_ADV būdavo_VERB taip_ADV buvę_VERB ._PUNCT

B) tokens: Tiesiog po to būdavo lyg buvę .
tags: ADV ADV X VERB SCONJ VERB PUNCT
tagged_tokens: Tiesiog_ADV po_ADV to_X būdavo_VERB lyg_SCONJ buvę_VERB ._PUNCT

C) tokens: Vos po to būdavo panašiai buvę .
tags: ADV ADV X VERB ADV VERB PUNCT
tagged_tokens: Vos_ADV po_ADV to_X būdavo_VERB panašiai_ADV buvę_VERB ._PUNCTD) tokens: Tik po to būdavo kaip buvę .
tags: CCONJ ADV X VERB SCONJ VERB PUNCT
tagged_tokens: Tik_CCONJ po_ADV to_X būdavo_VERB kaip_SCONJ buvę_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Slegia .
tags: VERB PUNCT
tagged_tokens: Slegia_VERB ._PUNCT

B) tokens: Gniuždo .
tags: VERB PUNCT
tagged_tokens: Gniuždo_VERB ._PUNCT

C) tokens: Spaudžia .
tags: VERB PUNCT
tagged_tokens: Spaudžia_VERB ._PUNCTD) tokens: Guodžia .
tags: VERB PUNCT
tagged_tokens: Guodžia_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""D""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Bet senesni vadovai taip pat , regis , „ konsultavosi “ su ekspertais .
tags: CCONJ ADJ NOUN ADV PUNCT PART PUNCT PUNCT VERB PUNCT ADP NOUN PUNCT
tagged_tokens: Bet_CCONJ senesni_ADJ vadovai_NOUN taip_ADV pat_PUNCT ,_PUNCT regis_PART ,_PUNCT „_PUNCT konsultavosi_VERB “_PUNCT su_ADP ekspertais_NOUN ._PUNCT

B) tokens: Vis dėlto buvę vadovai dar , matyt , „ bendravo “ su specialistais .
tags: PART CCONJ VERB NOUN ADV PUNCT ADV PUNCT PUNCT VERB PUNCT ADP NOUN PUNCT
tagged_tokens: Vis_PART dėlto_CCONJ buvę_VERB vadovai_NOUN dar_ADV ,_PUNCT matyt_ADV ,_PUNCT „_PUNCT bendravo_VERB “_PUNCT su_ADP specialistais_NOUN ._PUNCT

C) tokens: Tiesa , praeitieji merai beje , lyg , „ kalbėjosi “ su ekspertais .
tags: NOUN PUNCT ADJ NOUN ADV PUNCT ADV PUNCT PUNCT VERB PUNCT ADP NOUN PUNCT
tagged_tokens: Tiesa_NOUN ,_PUNCT praeitieji_ADJ merai_NOUN beje_ADV ,_PUNCT lyg_ADV ,_PUNCT „_PUNCT kalbėjosi_VERB “_PUNCT su_ADP ekspertais_NOUN ._PUNCTD) tokens: Tačiau ankstesni merai irgi , rodos , „ tardavosi “ su specialistais .
tags: CCONJ ADJ NOUN ADV PUNCT PART PUNCT PUNCT VERB PUNCT ADP NOUN PUNCT
tagged_tokens: Tačiau_CCONJ ankstesni_ADJ merai_NOUN irgi_ADV ,_PUNCT rodos_PART ,_PUNCT „_PUNCT tardavosi_VERB “_PUNCT su_ADP specialistais_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
"{""answer"": ""B""}","<|im_start|>system
Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.<|im_end|>
<|im_start|>user
---
Options are listed below:

A) tokens: Tiktai tada jie būdavo lyg praeitieji .
tags: ADV ADV PRON VERB SCONJ ADJ PUNCT
tagged_tokens: Tiktai_ADV tada_ADV jie_PRON būdavo_VERB lyg_SCONJ praeitieji_ADJ ._PUNCT

B) tokens: Tikriausiai po to jaučdavosi kaip anksčiau .
tags: ADV ADV PRON VERB SCONJ ADV PUNCT
tagged_tokens: Tikriausiai_ADV po_ADV to_PRON jaučdavosi_VERB kaip_SCONJ anksčiau_ADV ._PUNCT

C) tokens: Tiesiog po to elgėsi kaip seniau .
tags: ADV ADV PRON VERB SCONJ ADV PUNCT
tagged_tokens: Tiesiog_ADV po_ADV to_PRON elgėsi_VERB kaip_SCONJ seniau_ADV ._PUNCTD) tokens: Tik po to būdavo kaip buvę .
tags: CCONJ ADV X VERB SCONJ VERB PUNCT
tagged_tokens: Tik_CCONJ po_ADV to_X būdavo_VERB kaip_SCONJ buvę_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```
<|im_end|>
<|im_start|>assistant"
