answer,prompt
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Nemėkite galvos skausmo
tags: VERB NOUN NOUN
tagged_tokens: Nemėkite_VERB galvos_NOUN skausmo_NOUN

B) tokens: Nekęsk galvos skausmo
tags: VERB NOUN NOUN
tagged_tokens: Nekėsk_VERB galvos_NOUN skausmo_NOUN

C) tokens: Nekentėk galvos skausmo
tags: VERB NOUN NOUN
tagged_tokens: Nekentėk_VERB galvos_NOUN skausmo_NOUND) tokens: Nekentėkite galvos skausmo
tags: VERB NOUN NOUN
tagged_tokens: Nekentėkite_VERB galvos_NOUN skausmo_NOUN
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Gydytoja praktikantė Lina Valentaitė
tags: NOUN NOUN PROPN PROPN
tagged_tokens: Gydytoja_NOUN praktikantė_NOUN Lina_PROPN Valentaitė_PROPN

B) tokens: Daktarė rezidentė Lina Motiejūnaitė
tags: NOUN NOUN PROPN PROPN
tagged_tokens: Daktarė_NOUN rezidentė_NOUN Lina_PROPN Motiejūnaitė_PROPN

C) tokens: Gydytoja Lina Mozūraitytė rezidentū
tags: NOUN PROPN PROPN NOUN
tagged_tokens: Gydytoja_NOUN Lina_PROPN Mozūraitytė_PROPN rezidentė_NOUND) tokens: Gydytoja rezidentė Lina Mozūraitė
tags: NOUN NOUN PROPN PROPN
tagged_tokens: Gydytoja_NOUN rezidentė_NOUN Lina_PROPN Mozūraitė_PROPN
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Kokie gali pasitaikyti galvos skausmai ?
tags: DET VERB AUX NOUN NOUN PUNCT
tagged_tokens: Kokie_DET gali_VERB pasitaikyti_AUX galvos_NOUN skausmai_NOUN ?_PUNCT

B) tokens: Kokie galimi būti galvos skausmai ?
tags: DET VERB AUX NOUN NOUN PUNCT
tagged_tokens: Kokie_DET galimi_VERB būti_AUX galvos_NOUN skausmai_NOUN ?_PUNCT

C) tokens: Kokie gali pasireikšti galvos skausmai ?
tags: DET VERB AUX NOUN NOUN PUNCT
tagged_tokens: Kokie_DET gali_VERB pasireikšti_AUX galvos_NOUN skausmai_NOUN ?_PUNCTD) tokens: Kokie gali būti galvos skausmai ?
tags: DET VERB AUX NOUN NOUN PUNCT
tagged_tokens: Kokie_DET gali_VERB būti_AUX galvos_NOUN skausmai_NOUN ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: 1 . Originalus .
tags: NUM PUNCT ADJ PUNCT
tagged_tokens: 1_NUM ._PUNCT Originalus_ADJ ._PUNCT

B) tokens: 1 . Pirmutinis .
tags: NUM PUNCT ADJ PUNCT
tagged_tokens: 1_NUM ._PUNCT Pirmutinis_ADJ ._PUNCT

C) tokens: 1 . Pradinis .
tags: NUM PUNCT ADJ PUNCT
tagged_tokens: 1_NUM ._PUNCT Pradinis_ADJ ._PUNCTD) tokens: 1 . Pirminiai .
tags: NUM PUNCT ADJ PUNCT
tagged_tokens: 1_NUM ._PUNCT Pirminiai_ADJ ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Jie linkę atsikartoti .
tags: PRON VERB VERB PUNCT
tagged_tokens: Jie_PRON linkę_VERB atsikartoti_VERB ._PUNCT

B) tokens: Jie mėgsta kartotis .
tags: PRON VERB VERB PUNCT
tagged_tokens: Jie_PRON mėgsta_VERB kartotis_VERB ._PUNCT

C) tokens: Jie linkę pasikartoti .
tags: PRON VERB VERB PUNCT
tagged_tokens: Jie_PRON linkę_VERB pasikartoti_VERB ._PUNCTD) tokens: Jie linkę kartotis .
tags: PRON VERB VERB PUNCT
tagged_tokens: Jie_PRON linkę_VERB kartotis_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Tai grupei priskiriamos trys veislės – migrena , įtampos tipo ir klasteriniai galvos skausmai .
tags: PRON NOUN VERB NUM NOUN PUNCT NOUN PUNCT NOUN NOUN CCONJ ADJ NOUN NOUN PUNCT
tagged_tokens: Tai_PRON grupei_NOUN priskiriamos_VERB trys_NUM veislės_NOUN –_PUNCT migrena_NOUN ,_PUNCT įtampos_NOUN tipo_NOUN ir_CCONJ klasteriniai_ADJ galvos_NOUN skausmai_NOUN ._PUNCT

B) tokens: Šiai grupei priklauso trys formos – migrena , įtampos tipas ir klasteriniai galvos skausmai .
tags: DET NOUN VERB NUM NOUN PUNCT NOUN PUNCT NOUN NOUN CCONJ ADJ NOUN NOUN PUNCT
tagged_tokens: Šiai_DET grupei_NOUN priklauso_VERB trys_NUM formos_NOUN –_PUNCT migrena_NOUN ,_PUNCT įtampos_NOUN tipas_NOUN ir_CCONJ klasteriniai_ADJ galvos_NOUN skausmai_NOUN ._PUNCT

C) tokens: Šiai kategorijai priskiriamos trys atmainos – migrena , įtampos tipas ir sankaupiniai galvos skausmai .
tags: DET NOUN VERB NUM NOUN PUNCT NOUN PUNCT NOUN NOUN CCONJ ADJ NOUN NOUN PUNCT
tagged_tokens: Šiai_DET kategorijai_NOUN priskiriamos_VERB trys_NUM atmainos_NOUN –_PUNCT migrena_NOUN ,_PUNCT įtampos_NOUN tipas_NOUN ir_CCONJ sankaupiniai_ADJ galvos_NOUN skausmai_NOUN ._PUNCTD) tokens: Šiai grupei priklauso trys rūšys – migrena , įtampos tipo ir klasteriniai galvos skausmai .
tags: DET NOUN VERB NUM NOUN PUNCT NOUN PUNCT NOUN NOUN CCONJ ADJ NOUN NOUN PUNCT
tagged_tokens: Šiai_DET grupei_NOUN priklauso_VERB trys_NUM rūšys_NOUN –_PUNCT migrena_NOUN ,_PUNCT įtampos_NOUN tipo_NOUN ir_CCONJ klasteriniai_ADJ galvos_NOUN skausmai_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: 2 . Antriniai .
tags: NUM PUNCT ADJ PUNCT
tagged_tokens: 2_NUM ._PUNCT Antriniai_ADJ ._PUNCT

B) tokens: 2 . Papildomi .
tags: NUM PUNCT ADJ PUNCT
tagged_tokens: 2_NUM ._PUNCT Papildomi_ADJ ._PUNCT

C) tokens: 2 . Kiti .
tags: NUM PUNCT ADJ PUNCT
tagged_tokens: 2_NUM ._PUNCT Kiti_ADJ ._PUNCTD) tokens: 2 . Antriniai .
tags: NUM PUNCT ADJ PUNCT
tagged_tokens: 2_NUM ._PUNCT Antriniai_ADJ ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Juos sukelia kokia nors konkreti fiziologinė liga ir tokiu atveju galvos skausmas esti tam tikros ligos simptomas .
tags: PRON VERB DET X ADJ ADJ NOUN CCONJ DET NOUN NOUN NOUN AUX PART PRON X NOUN NOUN PUNCT
tagged_tokens: Juos_PRON sukelia_VERB kokia_DET nors_X konkreti_ADJ fiziologinė_ADJ liga_NOUN ir_CCONJ tokiu_DET atveju_NOUN galvos_NOUN skausmas_NOUN esti_AUX tam_PART tikros_X ligos_NOUN simptomas_NOUN ._PUNCT

B) tokens: Tuos sukelia kokia nors konkreti fiziologinė liga ir šiuo atveju galvos skausmas esti tam tikros ligos simptomas .
tags: PRON VERB DET X ADJ ADJ NOUN CCONJ DET NOUN NOUN NOUN AUX PART PRON X NOUN NOUN PUNCT
tagged_tokens: Tuos_PRON sukelia_VERB kokia_DET nors_X konkreti_ADJ fiziologinė_ADJ liga_NOUN ir_šiuo_CCONJ atveju_NOUN galvos_NOUN skausmas_NOUN esti_AUX tam_PART tikros_X ligos_NOUN simptomas_NOUN ._PUNCT

C) tokens: Juos sukelia tam tikra organinė patologija ir šiuo atveju galvos skausmas esti tam tikros ligos simptomas .
tags: PRON VERB DET ADJ NOUN CCONJ DET NOUN NOUN NOUN AUX PART PRON X NOUN NOUN PUNCT
tagged_tokens: Juos_PRON sukelia_VERB tam_DET tikra_ADJ organinė_NOUN patologija_NOUN ir_šiuo_CCONJ atveju_NOUN galvos_NOUN skausmas_NOUN esti_AUX tam_PART tikros_X ligos_NOUN simptomas_NOUN ._PUNCTD) tokens: Juos sukelia kokia nors konkreti organinė patologija ir šiuo atveju galvos skausmas yra tik tam tikros ligos simptomas .
tags: PRON VERB DET X ADJ ADJ NOUN CCONJ DET NOUN NOUN NOUN AUX PART PRON X NOUN NOUN PUNCT
tagged_tokens: Juos_PRON sukelia_VERB kokia_DET nors_X konkreti_ADJ organinė_ADJ patologija_NOUN ir_CCONJ šiuo_DET atveju_NOUN galvos_NOUN skausmas_NOUN yra_AUX tik_PART tam_PRON tikros_X ligos_NOUN simptomas_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Kada galvos skausmas į pavojingas ?
tags: ADV NOUN NOUN AUX ADJ PUNCT
tagged_tokens: Kada_ADV galvos_NOUN skausmas_į_NOUN AUX_AUX pavojingas_ADJ PUNCT_PUNCT

B) tokens: Kada galvos skausmas į grėsmingas ?
tags: ADV NOUN NOUN AUX ADJ PUNCT
tagged_tokens: Kada_ADV galvos_NOUN skausmas_į_NOUN AUX_AUX grėsmingas_ADJ PUNCT_PUNCT

C) tokens: Kada galvos skausmas į rimtas ?
tags: ADV NOUN NOUN AUX ADJ PUNCT
tagged_tokens: Kada_ADV galvos_NOUN skausmas_į_NOUN AUX_AUX rimtas_ADJ PUNCT_PUNCTD) tokens: Kada galvos skausmas yra pavojingas ?
tags: ADV NOUN NOUN AUX ADJ PUNCT
tagged_tokens: Kada_ADV galvos_NOUN skausmas_NOUN yra_AUX pavojingas_ADJ ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Jei_SCONJ galvos_NOUN skausmas_NOUN atsirado_VERB didesnis_ADJ negu_SCONJ 50_NUM metų_NOUN amžiaus_NOUN ._PUNCT
tags: SCONJ NOUN NOUN VERB ADJ SCONJ NUM NOUN NOUN PUNCT
tagged_tokens: Jei_SCONJ galvos_NOUN skausmas_NOUN atsirado_VERB didesnis_ADJ negu_SCONJ 50_NUM metų_NOUN amžiaus_NOUN ._PUNCT

B) tokens: Jeigu_SCONJ galvos_NOUN skausmas_NOUN prasidėjo_VERB po_ADP 50_NUM metų_NOUN amžiaus_NOUN ._PUNCT
tags: SCONJ NOUN NOUN VERB ADP NUM NOUN NOUN PUNCT
tagged_tokens: Jeigu_SCONJ galvos_NOUN skausmas_NOUN prasidėjo_VERB po_ADP 50_NUM metų_NOUN amžiaus_NOUN ._PUNCT

C) tokens: Jei_SCONJ galvos_NOUN skausmai_NOUN prasidėjo_VERB sulaukus_VERB didesnio_ADJ nei_SCONJ 50_NUM metų_NOUN amžiaus_NOUN ._PUNCT
tags: SCONJ NOUN NOUN VERB VERB ADJ SCONJ NUM NOUN NOUN PUNCT
tagged_tokens: Jei_SCONJ galvos_NOUN skausmai_NOUN prasidėjo_VERB sulaukus_VERB didesnio_ADJ nei_SCONJ 50_NUM metų_NOUN amžiaus_NOUN ._PUNCTD) tokens: Jeigu galvos skausmai prasidėjo > 50 metų amžiaus .
tags: SCONJ NOUN NOUN VERB SYM NUM NOUN NOUN PUNCT
tagged_tokens: Jeigu_SCONJ galvos_NOUN skausmai_NOUN prasidėjo_VERB >_SYM 50_NUM metų_NOUN amžiaus_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Jeigu jis yra stiprus , staiga atsiradęs galvos skausmas , kitoks negu anksčiau .
tags: SCONJ PRON VERB ADJ PUNCT ADV VERB NOUN PUNCT ADJ NOUN SCONJ ADV PUNCT
tagged_tokens: Jeigu_SCONJ jis_PRON yra_VERB stiprus_ADJ ,_PUNCT staiga_ADV atsiradęs_VERB galvos_NOUN skausmas_NOUN ,_PUNCT kitoks_ADJ negu_SCONJ anksčiau_ADV ._PUNCT

B) tokens: Jei tai yra aštrus , neseniai prasidėjęs galvos skausmas , kitoks negu anksčiau .
tags: SCONJ DET PRON VERB ADJ PUNCT ADV VERB NOUN PUNCT ADJ NOUN SCONJ ADV PUNCT
tagged_tokens: Jei_SCONJ tai_DET yra_VERB aštrus_ADJ ,_PUNCT neseniai_ADV prasidėjęs_VERB galvos_NOUN skausmas_NOUN ,_PUNCT kitoks_ADJ negu_SCONJ anksčiau_ADV ._PUNCT

C) tokens: Jeigu tai stiprus , naujas galvos skausmas , skiriasi nuo buvusių .
tags: SCONJ DET ADJ PUNCT ADV ADJ NOUN PUNCT VERB ADV PUNCT
tagged_tokens: Jeigu_SCONJ tai_DET stiprus_ADJ ,_PUNCT naujas_ADV galvos_NOUN skausmas_NOUN ,_PUNCT skiriasi_VERB nuo_ADV buvusių_PUNCTD) tokens: Jeigu tai stiprus , naujai atsiradęs galvos skausmas , skirtingo pobūdžio nei anksčiau .
tags: SCONJ DET ADJ PUNCT ADV VERB NOUN NOUN PUNCT ADJ NOUN SCONJ ADV PUNCT
tagged_tokens: Jeigu_SCONJ tai_DET stiprus_ADJ ,_PUNCT naujai_ADV atsiradęs_VERB galvos_NOUN skausmas_NOUN ,_PUNCT skirtingo_ADJ pobūdžio_NOUN nei_SCONJ anksčiau_ADV ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Jeigu atsiranda vos atsimerkus po miego ar pažadina iš gilaus miego .
tags: SCONJ VERB ADV X VERB ADP NOUN CCONJ VERB ADP NOUN PUNCT
tagged_tokens: Jeigu_SCONJ atsiranda_VERB vos_ADV atsimerkus_VERB po_ADP miego_NOUN ar_CCONJ pažadina_VERB iš_ADP gilaus_NOUN miego_NOUN ._PUNCT

B) tokens: Jeigu iškyla tuoj pat atsikėlus po poilsio ar pažadina iš miego .
tags: SCONJ VERB ADV X VERB ADP NOUN CCONJ VERB ADP NOUN PUNCT
tagged_tokens: Jeigu_SCONJ iškyla_VERB tuoj_ADV pat_X atsikėlus_VERB po_ADP poilsio_NOUN ar_CCONJ pažadina_VERB iš_ADP miego_NOUN ._PUNCT

C) tokens: Jeigu atsiranda vos pabudus iš miego ar pažadina iš miego .
tags: SCONJ VERB ADV X VERB ADP NOUN CCONJ VERB ADP NOUN PUNCT
tagged_tokens: Jeigu_SCONJ atsiranda_VERB vos_ADV pabudus_VERB iš_ADP miego_NOUN ar_CCONJ pažadina_VERB iš_ADP miego_NOUN ._PUNCTD) tokens: Jeigu atsiranda tuoj pat atsikėlus po miego ar pažadina iš miego .
tags: SCONJ VERB ADV X VERB ADP NOUN CCONJ VERB ADP NOUN PUNCT
tagged_tokens: Jeigu_SCONJ atsiranda_VERB tuoj_ADV pat_X atsikėlus_VERB po_ADP miego_NOUN ar_CCONJ pažadina_VERB iš_ADP miego_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Jeigu kraujospūdis buvo pakilęs .
tags: SCONJ AUX VERB ADJ NOUN PUNCT
tagged_tokens: Jeigu_SCONJ kraujospūdis_NOUN buvo_AUX pakilęs_VERB ._PUNCT

B) tokens: Jeigu kraujospūdis buvo padidėjęs .
tags: SCONJ AUX VERB ADJ NOUN PUNCT
tagged_tokens: Jeigu_SCONJ kraujospūdis_NOUN buvo_AUX padidėjęs_VERB ._PUNCT

C) tokens: Jeigu arterinis kraujo spaudimas buvo padidėjęs .
tags: SCONJ AUX ADJ NOUN NOUN VERB ADJ NOUN PUNCT
tagged_tokens: Jeigu_SCONJ arterinis_ADJ kraujo_NOUN spaudimas_NOUN buvo_AUX padidėjęs_VERB ._PUNCTD) tokens: Jeigu buvo padidėjęs arterinis kraujo spaudimas .
tags: SCONJ AUX VERB ADJ NOUN NOUN PUNCT
tagged_tokens: Jeigu_SCONJ buvo_AUX padidėjęs_VERB arterinis_ADJ kraujo_NOUN spaudimas_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Jeigu galvos skausmai ąsižjo po galvos sužojimo .
tags: SCONJ NOUN NOUN VERB ADP NOUN NOUN PUNCT
tagged_tokens: Jeigu_SCONJ galvos_NOUN skausmai_NOUN ąsižjo_VERB po_ADP galvos_NOUN sužojimo_NOUN ._PUNCT

B) tokens: Jei galvos skausmai kilo po kaukolės traumos .
tags: SCONJ NOUN NOUN VERB ADP NOUN NOUN PUNCT
tagged_tokens: Jei_SCONJ galvos_NOUN skausmai_NOUN kilo_VERB po_ADP kaukolės_NOUN traumos_NOUN ._PUNCT

C) tokens: Jei galvos skausmas ąsižjo po galvos smegenų traumos .
tags: SCONJ NOUN NOUN VERB ADP NOUN NOUN PUNCT
tagged_tokens: Jei_SCONJ galvos_NOUN skausmas_NOUN ąsižjo_VERB po_ADP galvos_NOUN smegenų_NOUN traumos_NOUN ._PUNCTD) tokens: Jeigu galvos skausmai prasidėjo po galvos traumos .
tags: SCONJ NOUN NOUN VERB ADP NOUN NOUN PUNCT
tagged_tokens: Jeigu_SCONJ galvos_NOUN skausmai_NOUN prasidėjo_VERB po_ADP galvos_NOUN traumos_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Jeigu skausmas nepaklsta gydymui paprastais skausmą malšinančiais vaistais .
tags: SCONJ NOUN VERB NOUN ADJ NOUN VERB NOUN PUNCT
tagged_tokens: Jeigu_SCONJ skausmas_NOUN nepaklsta_VERB gydymui_NOUN paprastais_ADJ skausmą_NOUN malšinančiais_VERB vaistais_NOUN ._PUNCT

B) tokens: Jeigu skausmas nenusileidžia gydymui tradiciniais skausmą malšinančiais vaistais .
tags: SCONJ NOUN VERB NOUN ADJ NOUN VERB NOUN PUNCT
tagged_tokens: Jeigu_SCONJ skausmas_NOUN nenusileidžia_VERB gydymui_NOUN tradiciniais_ADJ skausmą_NOUN malšinančiais_VERB vaistais_NOUN ._PUNCT

C) tokens: Jei skausmas neduoda rezultatų gydymui bendrais skausmą malšinančiais vaistais .
tags: SCONJ NOUN VERB NOUN ADJ NOUN VERB NOUN PUNCT
tagged_tokens: Jei_SCONJ skausmas_NOUN neduoda_VERB rezultatų_NOUN gydymui_NOUN bendrais_ADJ skausmą_NOUN malšinančiais_VERB vaistais_NOUN ._PUNCTD) tokens: Jeigu skausmas nepasiduoda gydymui įprastiniais skausmą malšinančiais vaistais .
tags: SCONJ NOUN VERB NOUN ADJ NOUN VERB NOUN PUNCT
tagged_tokens: Jeigu_SCONJ skausmas_NOUN nepasiduoda_VERB gydymui_NOUN įprastiniais_ADJ skausmą_NOUN malšinančiais_VERB vaistais_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Jeigu galvos skausmas išlydi neurologiniai simptomai , sąmonės ir psichikos sutrikimai .
tags: SCONJ NOUN NOUN VERB ADJ NOUN PUNCT NOUN CCONJ NOUN NOUN PUNCT
tagged_tokens: Jeigu_SCONJ galvos_NOUN skausmas_NOUN išlydi_VERB neurologiniai_ADJ simptomai_NOUN ,_PUNCT sąmonės_NOUN ir_CCONJ psichikos_NOUN sutrikimai_NOUN ._PUNCT

B) tokens: Jeigu galvos skausmą papildo neurologiniai simptomai , sąmonės ir psichomotorikos sutrikimas .
tags: SCONJ NOUN NOUN VERB ADJ NOUN PUNCT NOUN CCONJ NOUN NOUN PUNCT
tagged_tokens: Jeigu_SCONJ galvos_NOUN skausmą_NOUN papildo_VERB neurologiniai_ADJ simptomai_NOUN ,_PUNCT sąmonės_NOUN ir_CCONJ psichomotorikos_NOUN sutrikimas_NOUN ._PUNCT

C) tokens: Jei galvos skausmas palydi neurologinėmis apraiškomis , sąmone ir psichikos pokyčiais .
tags: SCONJ NOUN NOUN VERB ADJ NOUN PUNCT NOUN CCONJ NOUN NOUN PUNCT
tagged_tokens: Jei_SCONJ galvos_NOUN skausmas_NOUN palydi_VERB neurologinėmis_ADJ apraiškomis_NOUN ,_PUNCT sąmone_NOUN ir_CCONJ psichikos_NOUN pokyčiais_NOUN ._PUNCTD) tokens: Jeigu galvos skausmą lydi neurologiniai simptomai , sąmonės ir psichikos sutrikimai .
tags: SCONJ NOUN NOUN VERB ADJ NOUN PUNCT NOUN CCONJ NOUN NOUN PUNCT
tagged_tokens: Jeigu_SCONJ galvos_NOUN skausmą_NOUN lydi_VERB neurologiniai_ADJ simptomai_NOUN ,_PUNCT sąmonės_NOUN ir_CCONJ psichikos_NOUN sutrikimai_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Jeigu_SCONJ greta_ADV esama_VERB sisteminiai_ADJ ligos_NOUN požymiai_NOUN (_PUNCT karūčiavimas_NOUN ,_PUNCT sprando_NOUN raumenys_NOUN sustingimas_NOUN ,_PUNCT bėrimas_NOUN ir_CCONJ kt_X ._PUNCT )_PUNCT ._PUNCT
tags: SCONJ ADV VERB ADJ NOUN NOUN PUNCT NOUN PUNCT NOUN NOUN NOUN PUNCT NOUN CCONJ X PUNCT PUNCT PUNCT
tagged_tokens: Jeigu_SCONJ greta_ADV esama_VERB sisteminiai_ADJ ligos_NOUN požymiai_NOUN (_PUNCT karūčiavimas_NOUN ,_PUNCT sprando_NOUN raumenys_NOUN sustingimas_NOUN ,_PUNCT bėrimas_NOUN ir_CCONJ kt_X ._PUNCT )_PUNCT ._PUNCT

B) tokens: Tuo_ADV atveju_NOUN ,_PUNCT kai_SCONJ yra_VERB sisteminiai_ADJ ligos_NOUN požymiai_NOUN ,_PUNCT tokie_DET kaip_SCONJ –_PUNCT karūčiavimas_NOUN ,_PUNCT sprando_NOUN raumenų_NOUN rigidiškumas_NOUN ,_PUNCT bėrimas_NOUN ir_CCONJ panašiai_ADV ,_PUNCT –_PUNCT rekomenduojama_VERB atlikti_VERB kraujo_NOUN tyrimą_NOUN dėl_ADP meningito_NOUN ._PUNCT
tags: ADV NOUN PUNCT SCONJ VERB ADJ NOUN NOUN PUNCT DET SCONJ PUNCT NOUN PUNCT NOUN NOUN NOUN PUNCT CCONJ ADV PUNCT PUNCT VERB VERB NOUN NOUN ADP NOUN PUNCT
tagged_tokens: Tuo_ADV atveju_NOUN ,_PUNCT kai_SCONJ yra_VERB sisteminiai_ADJ ligos_NOUN požymiai_NOUN ,_PUNCT tokie_DET kaip_SCONJ –_PUNCT karūčiavimas_NOUN ,_PUNCT sprando_NOUN raumenų_NOUN rigidiškumas_NOUN ,_PUNCT bėrimas_NOUN ir_CCONJ panašiai_ADV ,_PUNCT –_PUNCT rekomenduojama_VERB atlikti_VERB kraujo_NOUN tyrimą_NOUN dėl_ADP meningito_NOUN ._PUNCT

C) tokens: Jeigu_SCONJ greta_ADV yra_VERB kitų_DET sisteminių_ADJ ligų_NOUN požymių_NOUN (_PUNCT pavyzdžiui_ADV ,_PUNCT karščiavimas_NOUN ,_PUNCT sprando_NOUN raumenų_NOUN sustingimas_NOUN ,_PUNCT bėrimas_NOUN ir_CCONJ panašiai_ADV )_PUNCT ,_PUNCT būtina_ADJ kreiptis_VERB į_ADP gydytoją_NOUN dėl_ADP išsamesnio_ADJ ištyrimo_NOUN ._PUNCT
tags: SCONJ ADV VERB DET ADJ NOUN NOUN PUNCT ADV PUNCT NOUN PUNCT NOUN NOUN NOUN PUNCT CCONJ ADV PUNCT PUNCT ADJ VERB ADP NOUN ADP ADJ NOUN PUNCT
tagged_tokens: Jeigu_SCONJ greta_ADV yra_VERB kitų_DET sisteminių_ADJ ligų_NOUN požymių_NOUN (_PUNCT pavyzdžiui_ADV ,_PUNCT karūčiavimas_NOUN ,_PUNCT sprando_NOUN raumenų_NOUN sustingimas_NOUN ,_PUNCT bėrimas_NOUN ir_CCONJ panašiai_ADV )_PUNCT ,_PUNCT būtina_ADJ kreiptis_VERB į_ADP gydytoją_NOUN dėl_ADP išsamesnio_ADJ ištyrimo_NOUN ._PUNCTD) tokens: Jeigu greta yra sisteminės ligos požymių ( karščiavimas , sprando raumenų rigidiškumas , bėrimas ir kt . ) .
tags: SCONJ ADV VERB ADJ NOUN NOUN PUNCT NOUN PUNCT NOUN NOUN NOUN PUNCT NOUN CCONJ X PUNCT PUNCT PUNCT
tagged_tokens: Jeigu_SCONJ greta_ADV yra_VERB sisteminės_ADJ ligos_NOUN požymių_NOUN (_PUNCT karščiavimas_NOUN ,_PUNCT sprando_NOUN raumenų_NOUN rigidiškumas_NOUN ,_PUNCT bėrimas_NOUN ir_CCONJ kt_X ._PUNCT )_PUNCT ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Jeigu skauda visą galvą – sloga , karūtis , infekcinės ligos .
tags: SCONJ VERB DET NOUN PUNCT NOUN PUNCT NOUN PUNCT ADJ NOUN PUNCT
tagged_tokens: Jeigu_SCONJ skauda_VERB visą_DET galvą_NOUN –_PUNCT sloga_NOUN ,_PUNCT karūtis_NOUN ,_PUNCT infekcinės_ADJ ligos_NOUN ._PUNCT

B) tokens: Jei skauda visą galvą – sloga , šaltis , infekcinės ligos .
tags: SCONJ VERB DET NOUN PUNCT NOUN PUNCT NOUN PUNCT ADJ NOUN PUNCT
tagged_tokens: Jei_SCONJ skauda_VERB visą_DET galvą_NOUN –_PUNCT sloga_NOUN ,_PUNCT šaltis_NOUN ,_PUNCT infekcinės_ADJ ligos_NOUN ._PUNCT

C) tokens: Jeigu skauda visą galvą – peršalimas , karūtis , infekcinė ligos .
tags: SCONJ VERB DET NOUN PUNCT NOUN PUNCT NOUN PUNCT ADJ NOUN PUNCT
tagged_tokens: Jeigu_SCONJ skauda_VERB visą_DET galvą_NOUN –_PUNCT peršalimas_NOUN ,_PUNCT karūtis_NOUN ,_PUNCT infekcinė_ADJ ligos_NOUN ._PUNCTD) tokens: Jeigu skauda visą galvą – peršalimas , karščiavimas , infekcinės ligos .
tags: SCONJ VERB DET NOUN PUNCT NOUN PUNCT NOUN PUNCT ADJ NOUN PUNCT
tagged_tokens: Jeigu_SCONJ skauda_VERB visą_DET galvą_NOUN –_PUNCT peršalimas_NOUN ,_PUNCT karščiavimas_NOUN ,_PUNCT infekcinės_ADJ ligos_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Skausmas kaktos srityje , virš akiduobių – akių ligos , netinkamai parinkti akiniai , rinosinusitas .
tags: NOUN NOUN NOUN PUNCT ADP NOUN PUNCT NOUN NOUN PUNCT ADV VERB NOUN PUNCT NOUN PUNCT
tagged_tokens: Skausmas_NOUN kaktos_NOUN srityje_NOUN ,_PUNCT virš_ADP akiduobių_NOUN –_PUNCT akių_NOUN ligos_NOUN ,_PUNCT netinkamai_ADV parinkti_VERB akiniai_NOUN ,_PUNCT rinosinusitas_NOUN ._PUNCT

B) tokens: Skausmas kaktoje , aukšiau antakių – akių ligos , blogas akinių pasirinkimas , sinusitas .
tags: NOUN NOUN PUNCT ADP NOUN PUNCT NOUN NOUN PUNCT ADV NOUN PUNCT NOUN PUNCT
tagged_tokens: Skausmas_NOUN kaktoje_NOUN ,_PUNCT aukšiau_ADP antakių_NOUN –_PUNCT akių_NOUN ligos_NOUN ,_PUNCT blogas_ADV akinių_NOUN pasirinkimas_NOUN ,_PUNCT sinusitas_NOUN ._PUNCT

C) tokens: Skausmas kaktoje , virš akiduobių – akių susirgimai , netinkami akiniai , sinusitas .
tags: NOUN NOUN PUNCT ADP NOUN PUNCT NOUN NOUN PUNCT ADV NOUN PUNCT NOUN PUNCT
tagged_tokens: Skausmas_NOUN kaktoje_NOUN ,_PUNCT virš_ADP akiduobių_NOUN –_PUNCT akių_NOUN susirgimai_NOUN ,_PUNCT netinkami_ADV akiniai_NOUN ,_PUNCT sinusitas_NOUN ._PUNCTD) tokens: Skausmas kaktos srityje , virš akiduobių – akių ligos , blogai parinkti akiniai , rinosinusitas .
tags: NOUN NOUN NOUN PUNCT ADP NOUN PUNCT NOUN NOUN PUNCT ADV VERB NOUN PUNCT NOUN PUNCT
tagged_tokens: Skausmas_NOUN kaktos_NOUN srityje_NOUN ,_PUNCT virš_ADP akiduobių_NOUN –_PUNCT akių_NOUN ligos_NOUN ,_PUNCT blogai_ADV parinkti_VERB akiniai_NOUN ,_PUNCT rinosinusitas_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Plakantis abiejų smilkinių skausmas , taip pat pakaušio – hipertonija .
tags: VERB PRON NOUN NOUN PUNCT PART X NOUN PUNCT NOUN PUNCT
tagged_tokens: Plakantis_VERB abiejų_PRON smilkinių_NOUN skausmas_NOUN ,_PUNCT taip_PART pat_X pakaušio_NOUN –_PUNCT hipertonija_NOUN ._PUNCT

B) tokens: Tvinksintis abiejų smilkinių skausmas , taip pat pakaušio – hipertonija .
tags: VERB PRON NOUN NOUN PUNCT PART X NOUN PUNCT NOUN PUNCT
tagged_tokens: Tvinksintis_VERB abiejų_PRON smilkinių_NOUN skausmas_NOUN ,_PUNCT taip_PART pat_X pakaušio_NOUN –_PUNCT hipertonija_NOUN ._PUNCT

C) tokens: Spandantis abiejų smilkinių skausmas , taip pat pakaušio – hipertonija .
tags: VERB PRON NOUN NOUN PUNCT PART X NOUN PUNCT NOUN PUNCT
tagged_tokens: Spandantis_VERB abiejų_PRON smilkinių_NOUN skausmas_NOUN ,_PUNCT taip_PART pat_X pakaušio_NOUN –_PUNCT hipertonija_NOUN ._PUNCTD) tokens: Pulsuojantis abiejų smilkinių skausmas , taip pat pakaušio – hipertonija .
tags: VERB PRON NOUN NOUN PUNCT PART X NOUN PUNCT NOUN PUNCT
tagged_tokens: Pulsuojantis_VERB abiejų_PRON smilkinių_NOUN skausmas_NOUN ,_PUNCT taip_PART pat_X pakaušio_NOUN –_PUNCT hipertonija_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Veriantis skausmas , tvinksintis per kaktą , smilkinius , pakaušį – nervingumo įtampos išraiška .
tags: VERB NOUN PUNCT VERB ADP NOUN PUNCT NOUN PUNCT NOUN PUNCT NOUN PUNCT NOUN PUNCT ADJ NOUN NOUN PUNCT
tagged_tokens: Veriantis_VERB skausmas_NOUN ,_PUNCT tvinksintis_VERB per_ADP kaktą_NOUN ,_PUNCT smilkinius_NOUN ,_PUNCT pakaušį_NOUN –_PUNCT nervingumo_NOUN įtampos_NOUN išraiška_NOUN .

B) tokens: Suspaudžiantis skausmas , skriejantis per kaktą , smilkinius , pakaušį – nervingumo įtampos išraiška .
tags: VERB NOUN PUNCT VERB ADP NOUN PUNCT NOUN PUNCT NOUN PUNCT NOUN PUNCT NOUN PUNCT ADJ NOUN NOUN PUNCT
tagged_tokens: Suspaudžiantis_VERB skausmas_NOUN ,_PUNCT skriejantis_VERB per_ADP kaktą_NOUN ,_PUNCT smilkinius_NOUN ,_PUNCT pakaušį_NOUN –_PUNCT nervingumo_NOUN įtampos_NOUN išraiška_NOUN .

C) tokens: Lėtas skausmas , besitėsiantis per kaktą , smilkinius , pakaušį – nervingumo įtampos išraiška .
tags: ADJ NOUN PUNCT VERB ADP NOUN PUNCT NOUN PUNCT NOUN PUNCT NOUN PUNCT NOUN PUNCT ADJ NOUN NOUN PUNCT
tagged_tokens: Lėtas_ADJ skausmas_NOUN ,_PUNCT besitėsiantis_VERB per_ADP kaktą_NOUN ,_PUNCT smilkinius_NOUN ,_PUNCT pakaušį_NOUN –_PUNCT nervingumo_NOUN įtampos_NOUN išraiška_NOUN .D) tokens: Skeliantis skausmas , einantis per kaktą , smilkinius , pakaušį – nervinės įtampos išraiška .
tags: VERB NOUN PUNCT VERB ADP NOUN PUNCT NOUN PUNCT NOUN PUNCT ADJ NOUN NOUN PUNCT
tagged_tokens: Skeliantis_VERB skausmas_NOUN ,_PUNCT einantis_VERB per_ADP kaktą_NOUN ,_PUNCT smilkinius_NOUN ,_PUNCT pakaušį_NOUN –_PUNCT nervinės_ADJ įtampos_NOUN išraiška_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Smarkiai_VERB maudžia_VERB už_ADP ausies_NOUN ( _PUNCT iš_ADP vienos_PRON pusės_NOUN ) _PUNCT , _PUNCT smilkinyje_NOUN –_PUNCT odontologinės_ADJ problemos_NOUN arba_CCONJ ausų_NOUN uždegimas_NOUN . _PUNCT
tags: VERB ADP NOUN PUNCT ADP PRON NOUN PUNCT PUNCT NOUN PUNCT PUNCT ADJ NOUN CCONJ NOUN PUNCT
tagged_tokens: Smarkiai_VERB maudžia_VERB už_ADP ausies_NOUN (_PUNCT iš_ADP vienos_PRON pusės_NOUN ) _PUNCT , _PUNCT smilkinyje_NOUN –_PUNCT odontologinės_ADJ problemos_NOUN arba_CCONJ ausų_NOUN uždegimas_NOUN ._PUNCT

B) tokens: Skausmas_NOUN už_ADP ausies_NOUN ( _PUNCT iš_ADP vienos_PRON pusės_NOUN ) _PUNCT , _PUNCT smilkinyje_NOUN –_PUNCT odontologinių_ADJ problemų_NOUN arba_CCONJ ausies_NOUN uždegimas_NOUN . _PUNCT
tags: NOUN ADP NOUN PUNCT ADP PRON NOUN PUNCT PUNCT NOUN PUNCT PUNCT ADJ NOUN CCONJ NOUN PUNCT
tagged_tokens: Skausmas_NOUN už_ADP ausies_NOUN (_PUNCT iš_ADP vienos_PRON pusės_NOUN ) _PUNCT , _PUNCT smilkinyje_NOUN –_PUNCT odontologinių_ADJ problemų_NOUN arba_CCONJ ausies_NOUN uždegimas_NOUN ._PUNCT

C) tokens: Dygliuoja_VERB už_ADP ausį_NOUN ( _PUNCT iš_ADP vienos_PRON pusės_NOUN ) _PUNCT , _PUNCT smilkinyje_NOUN –_PUNCT odontologinė_ADJ problemos_NOUN arba_CCONJ otitas_NOUN . _PUNCT
tags: VERB ADP NOUN PUNCT ADP PRON NOUN PUNCT PUNCT NOUN PUNCT PUNCT ADJ NOUN CCONJ NOUN PUNCT
tagged_tokens: Dygliuoja_VERB už_ADP ausį_NOUN (_PUNCT iš_ADP vienos_PRON pusės_NOUN ) _PUNCT , _PUNCT smilkinyje_NOUN –_PUNCT odontologinė_ADJ problemos_NOUN arba_CCONJ otitas_NOUN ._PUNCTD) tokens: Skauda už ausies ( iš vienos pusės ) , smilkinį – odontologinės problemos arba otitas .
tags: VERB ADP NOUN PUNCT ADP PRON NOUN PUNCT PUNCT NOUN PUNCT ADJ NOUN CCONJ NOUN PUNCT
tagged_tokens: Skauda_VERB už_ADP ausies_NOUN (_PUNCT iš_ADP vienos_PRON pusės_NOUN )_PUNCT ,_PUNCT smilkinį_NOUN –_PUNCT odontologinės_ADJ problemos_NOUN arba_CCONJ otitas_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Smilkinio skausmas ( viena pusė ) – migrena .
tags: NOUN NOUN PUNCT ADJ NOUN PUNCT PUNCT NOUN PUNCT
tagged_tokens: Smilkinio_NOUN skausmas_NOUN (_PUNCT viena_ADJ pusė_NOUN )_PUNCT –_PUNCT migrena_NOUN ._PUNCT

B) tokens: Smilkinio diegliai ( vienos pusės ) – migrena .
tags: NOUN NOUN PUNCT PRON NOUN PUNCT PUNCT NOUN PUNCT
tagged_tokens: Smilkinio_NOUN diegliai_NOUN (_PUNCT vienos_PRON pusės_NOUN )_PUNCT –_PUNCT migrena_NOUN ._PUNCT

C) tokens: Galvos skausmas ( vienos pusės ) – migrena .
tags: NOUN NOUN PUNCT PRON NOUN PUNCT PUNCT NOUN PUNCT
tagged_tokens: Galvos_NOUN skausmas_NOUN (_PUNCT vienos_PRON pusės_NOUN )_PUNCT –_PUNCT migrena_NOUN ._PUNCTD) tokens: Smilkinio skausmas ( vienos pusės ) – migrena .
tags: NOUN NOUN PUNCT PRON NOUN PUNCT PUNCT NOUN PUNCT
tagged_tokens: Smilkinio_NOUN skausmas_NOUN (_PUNCT vienos_PRON pusės_NOUN )_PUNCT –_PUNCT migrena_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Jūs galite sumažinti galvos skausmus :
tags: PRON VERB VERB NOUN NOUN PUNCT
tagged_tokens: Jūs_PRON galite_VERB sumažinti_VERB galvos_NOUN skausmus_NOUN :_PUNCT

B) tokens: Jūs galite malšinti galvos skausmus :
tags: PRON VERB VERB NOUN NOUN PUNCT
tagged_tokens: Jūs_PRON galite_VERB malšinti_VERB galvos_NOUN skausmus_NOUN :_PUNCT

C) tokens: Jūs galite numalšinti galvos skausmus :
tags: PRON VERB VERB NOUN NOUN PUNCT
tagged_tokens: Jūs_PRON galite_VERB numalšinti_VERB galvos_NOUN skausmus_NOUN :_PUNCTD) tokens: Jūs galite numalšinti galvos skausmus :
tags: PRON VERB VERB NOUN NOUN PUNCT
tagged_tokens: Jūs_PRON galite_VERB numalšinti_VERB galvos_NOUN skausmus_NOUN :_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: sąmoningai gerdami vandenį (bent 6 taures per dieną) ir laikydamiesi dietos;
tags: VERB ADV NOUN PUNCT PART NUM NOUN ADP NOUN PUNCT CCONJ VERB NOUN PUNCT
tagged_tokens: sąmoningai_ADV gerdami_VERB vandenį_NOUN (_PUNCT bent_PART 6_NUM taures_NOUN per_ADP dieną_NOUN )_PUNCT ir_CCONJ laikydamiesi_VERB dietos_NOUN ;_PUNCT

B) tokens: gerdami daug skyčio (bent 6 taures per parą) ir laikydamiesi dietos;
tags: VERB ADV NOUN PUNCT PART NUM NOUN ADP NOUN PUNCT CCONJ VERB NOUN PUNCT
tagged_tokens: gerdami_VERB daug_ADV skyčio_NOUN (_PUNCT bent_PART 6_NUM taures_NOUN per_ADP parą_NOUN )_PUNCT ir_CCONJ laikydamiesi_VERB dietos_NOUN ;_PUNCT

C) tokens: vartodami daug skysčimo (bent 6 stiklines per dieną) ir laikydamiesi dietos;
tags: VERB ADV NOUN PUNCT PART NUM NOUN ADP NOUN PUNCT CCONJ VERB NOUN PUNCT
tagged_tokens: vartodami_VERB daug_ADV skysčimo_NOUN (_PUNCT bent_PART 6_NUM stiklines_NOUN per_ADP dieną_NOUN )_PUNCT ir_CCONJ laikydamiesi_VERB dietos_NOUN ;_PUNCTD) tokens: gerdami daug vandens ( bent 6 stiklines per dieną ) ir laikydamiesi dietos ;
tags: VERB ADV NOUN PUNCT PART NUM NOUN ADP NOUN PUNCT CCONJ VERB NOUN PUNCT
tagged_tokens: gerdami_VERB daug_ADV vandens_NOUN (_PUNCT bent_PART 6_NUM stiklines_NOUN per_ADP dieną_NOUN )_PUNCT ir_CCONJ laikydamiesi_VERB dietos_NOUN ;_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: rinkdamiesi tinkamą pozą sėdime prie stalo ;
tags: VERB ADJ NOUN VERB ADP NOUN PUNCT
tagged_tokens: rinkdamiesi_VERB tinkamą_ADJ pozą_NOUN sėdime_VERB prie_ADP stalo_NOUN ;_PUNCT

B) tokens: rinkdamiesi palankią padėtį sėdime prie stalo ;
tags: VERB ADJ NOUN VERB ADP NOUN PUNCT
tagged_tokens: rinkdamiesi_VERB palankią_ADJ padėtį_NOUN sėdime_VERB prie_ADP stalo_NOUN ;_PUNCT

C) tokens: rinkdamiesi tinkamą vietą sėdime prie stalo ;
tags: VERB ADJ NOUN VERB ADP NOUN PUNCT
tagged_tokens: rinkdamiesi_VERB tinkamą_ADJ vietą_NOUN sėdime_VERB prie_ADP stalo_NOUN ;_PUNCTD) tokens: pasirinkdami tinkamą padėtį sėdėdami prie stalo ;
tags: VERB ADJ NOUN VERB ADP NOUN PUNCT
tagged_tokens: pasirinkdami_VERB tinkamą_ADJ padėtį_NOUN sėdėdami_VERB prie_ADP stalo_NOUN ;_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: periodiškai laikant laiką gryname ore ;
tags: ADV VERB ADJ NOUN PUNCT
tagged_tokens: periodiškai_ADV laikant_VERB laiką_ADJ ore_NOUN ;_PUNCT

B) tokens: periodiškai įvykstant gryname ore ;
tags: ADV VERB ADJ NOUN PUNCT
tagged_tokens: periodiškai_įvykstant_VERB gryname_ADJ ore_NOUN ;_PUNCT

C) tokens: būanant gryname ore reguliariai ;
tags: VERB ADJ NOUN ADV PUNCT
tagged_tokens: būanant_VERB gryname_ADJ ore_NOUN reguliariai_ADV ;_PUNCTD) tokens: periodiškai būdami gryname ore ;
tags: ADV VERB ADJ NOUN PUNCT
tagged_tokens: periodiškai_ADV būdami_VERB gryname_ADJ ore_NOUN ;_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: sistemingai sportuodami ;
tags: ADV VERB PUNCT
tagged_tokens: sistemingai_ADV sportuodami_VERB ;_PUNCT

B) tokens: nuolat sportuodami ;
tags: ADV VERB PUNCT
tagged_tokens: nuolat_ADV sportuodami_VERB ;_PUNCT

C) tokens: reguliariai sportuodami ;
tags: ADV VERB PUNCT
tagged_tokens: reguliariai_ADV sportuodami_VERB ;_PUNCTD) tokens: reguliariai mankštindamiesi ;
tags: ADV VERB PUNCT
tagged_tokens: reguliariai_ADV mankštindamiesi_VERB ;_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: tinkamai ilsėdamiesi bei išsimiegodami ;
tags: ADV VERB CCONJ VERB PUNCT
tagged_tokens: tinkamai_ADV ilsėdamiesi_VERB bei_CCONJ išsimiegodami_VERB ;_PUNCT

B) tokens: padoriai ilsėdamiesi bei gerai išsimiegodami ;
tags: ADV VERB CCONJ VERB PUNCT
tagged_tokens: padoriai_ADV ilsėdamiesi_VERB bei_CCONJ gerai_ADV išsimiegodami_VERB ;_PUNCT

C) tokens: tinkamai pailsėdami ir išsimiegoję ;
tags: ADV VERB CCONJ VERB PUNCT
tagged_tokens: tinkamai_ADV pailsėdami_VERB ir_CCONJ išsimiegoję_VERB ;_PUNCTD) tokens: tinkamai ilsėdamiesi ir išsimiegodami ;
tags: ADV VERB CCONJ VERB PUNCT
tagged_tokens: tinkamai_ADV ilsėdamiesi_VERB ir_CCONJ išsimiegodami_VERB ;_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: reguliariai valgantys subalansuotą mitybą ;
tags: ADV VERB VERB NOUN PUNCT
tagged_tokens: reguliariai_ADV valgantys_VERB subalansuotą_VERB mitybą_NOUN ;_PUNCT

B) tokens: valgantys sveiką mitybą reguliariai ;
tags: VERB NOUN ADV PUNCT
tagged_tokens: valgantys_VERB sveiką_NOUN mitybą_NOUN reguliariai_ADV ;

C) tokens: laikantis sveikos mitybos reguliariai ;
tags: VERB NOUN ADV PUNCT
tagged_tokens: laikantis_VERB sveikos_NOUN mitybos_NOUN reguliariai_ADV ;D) tokens: reguliariai valgydami subalansuotą maistą ;
tags: ADV VERB VERB NOUN PUNCT
tagged_tokens: reguliariai_ADV valgydami_VERB subalansuotą_VERB maistą_NOUN ;_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: mažinandami stresą , įvaldą stresą valdymo būdą .
tags: VERB NOUN PUNCT VERB NOUN NOUN NOUN PUNCT
tagged_tokens: mažinandami_VERB stresą_NOUN ,_įvaldą_VERB stresą_NOUN valdymo_NOUN būdą_NOUN ._PUNCT

B) tokens: sumažiną įstempiamumo lygį , įvaldą įstempiamumo valdymo metodų .
tags: VERB NOUN NOUN PUNCT VERB NOUN NOUN NOUN PUNCT
tagged_tokens: sumažiną_VERB įstempiamumo_NOUN lygį_NOUN ,_įvaldą_VERB įstempiamumo_NOUN valdymo_NOUN metodų_NOUN ._PUNCT

C) tokens: sumažinantys įstemplės , mokomės įstemplės valdymo būdą .
tags: VERB NOUN PUNCT VERB NOUN NOUN NOUN PUNCT
tagged_tokens: sumažinantys_VERB įstemplės_NOUN ,_mokomės_VERB įstemplės_NOUN valdymo_NOUN būdą_NOUN ._PUNCTD) tokens: sumažindami stresą , išmokdami streso valdymo metodų .
tags: VERB NOUN PUNCT VERB NOUN NOUN NOUN PUNCT
tagged_tokens: sumažindami_VERB stresą_NOUN ,_PUNCT išmokdami_VERB streso_NOUN valdymo_NOUN metodų_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Viena jų - Lietuva mielo žalio atspalvio paviljone pristatėjo mūsų turistines galimybes ir Vilniū - 2009-jų Europos kultūros sostinę.
tags: PRON PRON PUNCT PROPN ADJ ADJ NOUN NOUN VERB PRON ADJ NOUN CCONJ PROPN PUNCT NUM PROPN NOUN NOUN PUNCT
tagged_tokens: Viena_PRON jų_PRON -_PUNCT Lietuva_PROPN mielo_žalio_ADJ atspalvio_NOUN paviljone_NOUN pristatėjo_VERB mūsų_PRON turistines_ADJ galimybes_NOUN ir_CCONJ Vilniū_PROPN -_PUNCT 2009-jų_NUM Europos_PROPN kultūros_NOUN sostinę_NOUN.

B) tokens: Viena iš jų - Lietuva jaukaus žalio tono paviljone demonstravo mūsų turistines galimybes bei Vilniū - 2009-jų Europos kultūros sostinę.
tags: PRON CCONJ PRON PUNCT PROPN ADJ ADJ NOUN NOUN VERB PRON ADJ NOUN CCONJ PROPN PUNCT NUM PROPN NOUN NOUN PUNCT
tagged_tokens: Viena_PRON iš_CCONJ jų_PRON -_PUNCT Lietuva_PROPN jaukaus_žalio_ADJ tono_NOUN paviljone_NOUN demonstravo_VERB mūsų_PRON turistines_ADJ galimybes_NOUN bei_CCONJ Vilniū_PROPN -_PUNCT 2009-jų_NUM Europos_PROPN kultūros_NOUN sostinę_NOUN.

C) tokens: Viena iš jų - Lietuva jaukaus žalio kolorito paviljone pristatė mūsų turistines galimybes ir Vilniū - 2009-jų Europos kultūros sostinę.
tags: PRON CCONJ PRON PUNCT PROPN ADJ ADJ NOUN NOUN VERB PRON ADJ NOUN CCONJ PROPN PUNCT NUM PROPN NOUN NOUN PUNCT
tagged_tokens: Viena_PRON iš_CCONJ jų_PRON -_PUNCT Lietuva_PROPN jaukaus_žalio_ADJ kolorito_NOUN paviljone_NOUN pristatė_VERB mūsų_PRON turistines_ADJ galimybes_NOUN ir_CCONJ Vilniū_PROPN -_PUNCT 2009-jų_NUM Europos_PROPN kultūros_NOUN sostinę_NOUN.D) tokens: Viena jų - Lietuva malonios žalios spalvos paviljone pristatė mūsų turistines galimybes ir Vilnių - 2009-ųjų Europos kultūros sostinę .
tags: PRON PRON PUNCT PROPN ADJ ADJ NOUN NOUN VERB PRON ADJ NOUN CCONJ PROPN PUNCT NUM PROPN NOUN NOUN PUNCT
tagged_tokens: Viena_PRON jų_PRON -_PUNCT Lietuva_PROPN malonios_ADJ žalios_ADJ spalvos_NOUN paviljone_NOUN pristatė_VERB mūsų_PRON turistines_ADJ galimybes_NOUN ir_CCONJ Vilnių_PROPN -_PUNCT 2009-ųjų_NUM Europos_PROPN kultūros_NOUN sostinę_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Įp ūgalvotą šventė buvo pakviesti ryūą piliečiai : ambasadorius Vygaudas Uūackas su partnerė , Ūkio ministerijos ąmonininkas Gediminas Miūkinis , įvairių agentūrų vadovai .
tags: ADP NOUN VERB AUX VERB ADJ PROPN NOUN PUNCT NOUN PROPN PROPN ADP NOUN PUNCT NOUN NOUN ąmonininkas NOUN PROPN PROPN PUNCT įvairų ADJ NOUN ūrų NOUN PUNCT
tagged_tokens: Įp_ADP ūgalvotą_NOUN šventė_VERB buvo_AUX pakviesti_VERB ryūą_ADJ piliečiai_NOUN :_PUNCT ambasadorius_NOUN Vygaudas_PROPN Uūackas_PROPN su_ADP partnerė_NOUN ,_PUNCT Ūkio_NOUN ministerijos_NOUN ąmonininkas_NOUN Gediminas_PROPN Miūkinis_PROPN ,_PUNCT įvairių_ADJ agentūrų_NOUN vadovai_NOUN ._PUNCT

B) tokens: Rytmetis ąvyko šalyje , o kviestiniai buvo svarbųs Lietuvos piliečiai : Vygaudas Uūackas su žsute , Ūkio ministerijos vyresnysis sekretorius Gediminas Miūkinis , kitą įteigą įteigąmis įteiginių turinčių agentūrų vadovai .
tags: NOUN VERB NOUN PUNCT ADP ADJ PROPN NOUN PUNCT NOUN PROPN ADP žsutė NOUN NOUN vyresnysis NOUN Gediminas PROPN PROPN PUNCT kitą ADJ įteigą įteigąmis įteiginių NOUN turinčių NOUN NOUN PUNCT
tagged_tokens: Rytmetis_NOUN ąvyko_VERB šalyje_NOUN ,_PUNCT o_ADP kviestiniai_ADJ buvo_AUX svarbųs_ADJ Lietuvos_PROPN piliečiai_NOUN :_PUNCT Vygaudas_NOUN Uūackas_PROPN su_ADP žsute_NOUN ,_PUNCT Ūkio_NOUN ministerijos_NOUN vyresnysis_ADJ sekretorius_NOUN Gediminas_PROPN Miūkinis_PROPN ,_PUNCT kitą_ADJ įteigą_įteigąmis_įteiginių_NOUN turinčių_NOUN agentūrų_NOUN vadovai_NOUN ._PUNCT

C) tokens: Įp ūgalvotą vakaronę vyko susitikimas , kuriame dalyvavo šie ryūą piliečiai : ambasadorius Vygaudas Uūackas su drauge , Ūkio ministerijos sekretoriaus pavaduotojas Gediminas Miūkinis ir kitą žinybingą valstybę institucijų vadovai .
tags: ADP NOUN NOUN vyko NOUN PUNCT KURIAME_PRON ADV šie_ADJ ryūą_ADJ piliečiai_NOUN PUNCT ambasadorius_NOUN Vygaudas_PROPN Uūackas_PROPN su_ADP drauge_NOUN PUNCT Ūkio_NOUN ministerijos_NOUN sekretoriaus_NOUN pavaduotojas_NOUN Gediminas_PROPN Miūkinis_PROPN ir_CONJ kitą_ADJ žinybingą_ADJ valstybę_NOUN institucijų_NOUN vadovai_NOUN PUNCT
tagged_tokens: Įp_ADP ūgalvotą_NOUN vakaronę_NOUN vyko_VERB susitikimas_NOUN ,_PUNCT kuriame_PRON dalyvavo_šie_ADJ ryūą_ADJ piliečiai_NOUN :_PUNCT ambasadorius_NOUN Vygaudas_PROPN Uūackas_PROPN su_ADP drauge_NOUN ,_PUNCT Ūkio_NOUN ministerijos_NOUN sekretoriaus_NOUN pavaduotojas_NOUN Gediminas_PROPN Miūkinis_PROPN ir_CONJ kitą_ADJ žinybingą_ADJ valstybę_NOUN institucijų_NOUN vadovai_NOUN ._PUNCTD) tokens: Į uždarą rytmetį buvo pakviesti svarbūs Lietuvai žmonės : ambasadorius Vygaudas Ušackas su žmona , Ūkio ministerijos sekretorius Gediminas Miškinis , įvairių agentūrų vadovai .
tags: ADP ADJ NOUN AUX VERB ADJ PROPN NOUN PUNCT NOUN PROPN PROPN ADP NOUN PUNCT NOUN NOUN NOUN PROPN PROPN PUNCT ADJ NOUN NOUN PUNCT
tagged_tokens: Į_ADP uždarą_ADJ rytmetį_NOUN buvo_AUX pakviesti_VERB svarbūs_ADJ Lietuvai_PROPN žmonės_NOUN :_PUNCT ambasadorius_NOUN Vygaudas_PROPN Ušackas_PROPN su_ADP žmona_NOUN ,_PUNCT Ūkio_NOUN ministerijos_NOUN sekretorius_NOUN Gediminas_PROPN Miškinis_PROPN ,_PUNCT įvairių_ADJ agentūrų_NOUN vadovai_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Rytmetį pradėjome kartu su saksofonininku Petru Vyšniausku , atlikdami mano ir animatoriaus Egidijaus Vaškevičiaus sukurtą audiovizualinį projektą "" Pasaulio sutvėrimas XXI amžiaus pradžiui "" pagal M . K . Čiurlionio paveikslus .
tags: NOUN VERB ADV ADP NOUN PROPN PROPN PUNCT VERB PRON CCONJ NOUN PROPN PROPN VERB ADJ NOUN PUNCT NOUN NOUN NUM NOUN NOUN PUNCT ADP X PUNCT X PUNCT PROPN NOUN PUNCT
tagged_tokens: Rytmetį_NOUN pradėjome_VERB kartu_ADV su_ADP saksofonininku_NOUN Petru_PROPN Vyšniausku_PROPN ,_PUNCT atlikdami_VERB mano_PRON ir_CCONJ animatoriaus_NOUN Egidijaus_PROPN Vaškevičiaus_PROPN sukurtą_VERB audiovizualinį_ADJ projektą_NOUN ""_PUNCT Pasaulio_NOUN sutvėrimas_NOUN XXI_NUM amžiaus_NOUN pradžiui_NOUN ""_PUNCT pagal_ADP M_X ._PUNCT K_X ._PUNCT Čiurlionio_PROPN paveikslus_NOUN ._PUNCT

B) tokens: Ritmą pradėjome kartu su saksofonininku Petru Vyšniausku , vėliau prisijungė prie mūsų ir kompozitoriaus Egidijaus Vaškevičiaus sukurtame audiovizualiniame projekte "" Pasaulio sutvėrimas XXI amžiaus aušrai "" pagal M . K . Čiurlionio paveikslus .
tags: NOUN VERB ADV ADP NOUN PROPN PROPN PUNCT ADV PRON ADP NOUN CCONJ NOUN PROPN VERB ADJ NOUN PUNCT NOUN NOUN NUM NOUN NOUN PUNCT ADP X PUNCT X PUNCT PROPN NOUN PUNCT
tagged_tokens: Ritmą_NOUN pradėjome_VERB kartu_ADV su_ADP saksofonininku_NOUN Petru_PROPN Vyšniausku_PROPN ,_PUNCT vėliau_ADV prisijungė_VERB prie_ADP mūsų_NOUN ir_CCONJ kompozitoriaus_NOUN Egidijaus_PROPN Vaškevičiaus_PROPN sukurtame_VERB audiovizualiniame_ADJ projekte_NOUN ""_PUNCT Pasaulio_NOUN sutvėrimas_NOUN XXI_NUM amžiaus_NOUN aušrai_NOUN ""_PUNCT pagal_ADP M_X ._PUNCT K_X ._PUNCT Čiurlionio_PROPN paveikslus_NOUN ._PUNCT

C) tokens: Tempą pradėjome kartu su saksofonininku Petru Vyšniausku , vėliau prisijungė prie mūsų ir kompozitoriaus Egidijaus Vaškevičiaus sukurtame audiovizualiniame projekte "" Pasaulio sutvėrimas XXI amžiaus pabaigai "" pagal M . K . Čiurlionio paveikslus .
tags: NOUN VERB ADV ADP NOUN PROPN PROPN PUNCT ADV PRON ADP NOUN CCONJ NOUN PROPN VERB ADJ NOUN PUNCT NOUN NOUN NUM NOUN NOUN PUNCT ADP X PUNCT X PUNCT PROPN NOUN PUNCT
tagged_tokens: Tempą_NOUN pradėjome_VERB kartu_ADV su_ADP saksofonininku_NOUN Petru_PROPN Vyšniausku_PROPN ,_PUNCT vėliau_ADV prisijungė_VERB prie_ADP mūsų_NOUN ir_CCONJ kompozitoriaus_NOUN Egidijaus_PROPN Vaškevičiaus_PROPN sukurtame_VERB audiovizualiniame_ADJ projekte_NOUN ""_PUNCT Pasaulio_NOUN sutvėrimas_NOUN XXI_NUM amžiaus_NOUN pabaigai_NOUN ""_PUNCT pagal_ADP M_X ._PUNCT K_X ._PUNCT Čiurlionio_PROPN paveikslus_NOUN ._PUNCTD) tokens: Rytmetį pradėjome kartu su saksofonininku Petru Vyšniausku , atlikdami mano ir animatoriaus Egidijaus Vaškevičiaus sukurtą audiovizualinį projektą „ Pasaulio sutvėrimas XXI amžiaus pradžiai “ pagal M . K . Čiurlionio paveikslus .
tags: NOUN VERB ADV ADP NOUN PROPN PROPN PUNCT VERB PRON CCONJ NOUN PROPN PROPN VERB ADJ NOUN PUNCT NOUN NOUN NUM NOUN NOUN PUNCT ADP X PUNCT X PUNCT PROPN NOUN PUNCT
tagged_tokens: Rytmetį_NOUN pradėjome_VERB kartu_ADV su_ADP saksofonininku_NOUN Petru_PROPN Vyšniausku_PROPN ,_PUNCT atlikdami_VERB mano_PRON ir_CCONJ animatoriaus_NOUN Egidijaus_PROPN Vaškevičiaus_PROPN sukurtą_VERB audiovizualinį_ADJ projektą_NOUN „_PUNCT Pasaulio_NOUN sutvėrimas_NOUN XXI_NUM amžiaus_NOUN pradžiai_NOUN “_PUNCT pagal_ADP M_X ._PUNCT K_X ._PUNCT Čiurlionio_PROPN paveikslus_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Netikėjome , kad šiuo darbu bus susidomėta ne ką mažiau nei lietuvišku midumi ar skilandžiais .
tags: VERB PUNCT SCONJ DET NOUN AUX VERB PART PRON ADV SCONJ ADJ NOUN CCONJ NOUN PUNCT
tagged_tokens: Netikėjome_VERB ,_PUNCT kad_SCONJ šiuo_DET darbu_NOUN bus_AUX susidomėta_VERB ne_PART ką_PRON mažiau_ADV nei_SCONJ lietuvišku_ADJ midumi_NOUN ar_CCONJ skilandžiais_NOUN ._PUNCT

B) tokens: Manėme , kad šis darbas sulauks tokio pat susidomėjimo kaip ir lietuviškas midus ar skilandis .
tags: VERB PUNCT SCONJ DET NOUN VAUX VERB ADJ SCONJ ADJ NOUN CCONJ NOUN PUNCT
tagged_tokens: Manėme_VERB ,_PUNCT kad_SCONJ šis_DET darbas_NOUN sulauks_VAUX tokio_ADJ pat_SCONJ susidomėjimo_VERB kaip_SCONJ ir_CONJ lietuviškas_ADJ midus_NOUN ar_CCONJ skilandis_NOUN ._PUNCT

C) tokens: Tikrai nesitikėjome , kad šiuo darbu bus susidomėta taip pat , kaip ir lietuvišku midumi ar skilandžiais .
tags: ADV VERB PUNCT SCONJ DET NOUN AUX VERB PART ADV SCONJ ADJ NOUN CCONJ NOUN PUNCT
tagged_tokens: Tikrai_ADV nesitikėjome_VERB ,_PUNCT kad_SCONJ šiuo_DET darbu_NOUN bus_AUX susidomėta_VERB taip_PART pat_ADV ,_SCONJ kaip_SCONJ ir_CONJ lietuvišku_ADJ midumi_NOUN ar_CCONJ skilandžiais_NOUN ._PUNCTD) tokens: Netikėjome , kad šiuo darbu bus susidomėta ne ką mažiau nei lietuvišku midumi ar skilandžiais .
tags: VERB PUNCT SCONJ DET NOUN AUX VERB PART PRON ADV SCONJ ADJ NOUN CCONJ NOUN PUNCT
tagged_tokens: Netikėjome_VERB ,_PUNCT kad_SCONJ šiuo_DET darbu_NOUN bus_AUX susidomėta_VERB ne_PART ką_PRON mažiau_ADV nei_SCONJ lietuvišku_ADJ midumi_NOUN ar_CCONJ skilandžiais_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Sekaną dieną vienas Londono laikraštis tą įvykį pavadino “Lietuva ant padėklo” .
tags: NOUN NOUN PRON PROPN NOUN DET NOUN VERB PUNCT PROPN ADP NOUN PUNCT PUNCT
tagged_tokens: Sekaną_NOUN dieną_NOUN vienas_PRON Londono_PROPN laikraštis_NOUN tą_įvykį_VERB pavadino_VERB “Lietuva_PROPN ant_ADP padėklo”_NOUN ._PUNCT

B) tokens: Vakar vienas Londono dienraštis tą renginį pavadino “Lietuva ant lėkštės” .
tags: ADV PRON PROPN NOUN DET NOUN VERB PUNCT PROPN ADP NOUN PUNCT PUNCT
tagged_tokens: Vakar_ADV vienas_PRON Londono_PROPN dienraštis_NOUN tą_DET renginį_NOUN pavadino_VERB “Lietuva_PROPN ant_ADP lėkštės”_NOUN ._PUNCT

C) tokens: Vakarykšte vienas Londono laikraštis šį renginį įvardijo “Lietuva ant padėklo” .
tags: ADV PRON PROPN NOUN ADP NOUN VERB PUNCT PROPN ADP NOUN PUNCT PUNCT
tagged_tokens: Vakarykšte_ADV vienas_PRON Londono_PROPN laikraštis_šį_NOUN renginį_įvardijo_VERB “Lietuva_PROPN ant_ADP padėklo”_NOUN ._PUNCTD) tokens: Kitą dieną vienas Londono dienraštis tą renginį pavadino „ Lietuva ant lėkštelės “ .
tags: PRON NOUN PRON PROPN NOUN DET NOUN VERB PUNCT PROPN ADP NOUN PUNCT PUNCT
tagged_tokens: Kitą_PRON dieną_NOUN vienas_PRON Londono_PROPN dienraštis_NOUN tą_DET renginį_NOUN pavadino_VERB „_PUNCT Lietuva_PROPN ant_ADP lėkštelės_NOUN “_PUNCT ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Gražus pabendravimas Lietuvos ambasadoje buvo naudingas ir net svarbus .
tags: ADJ NOUN PROPN NOUN VERB ADJ CCONJ PART ADJ PUNCT
tagged_tokens: Gražus_ADJ pabendravimas_NOUN Lietuvos_PROPN ambasadoje_NOUN buvo_VERB naudingas_ADJ ir_CCONJ net_PART svarbus_ADJ ._PUNCT

B) tokens: Malonus bendravimas Lietuvos ambasadoje buvo naudingas ir net lemiamas .
tags: ADJ NOUN PROPN NOUN VERB ADJ CCONJ PART ADJ PUNCT
tagged_tokens: Malonus_ADJ bendravimas_NOUN Lietuvos_PROPN ambasadoje_NOUN buvo_VERB naudingas_ADJ ir_CCONJ net_PART lemiamas_ADJ ._PUNCT

C) tokens: Draugiškas pabendravimas Lietuvos ambasadoje buvo naudingas ir net svarius .
tags: ADJ NOUN PROPN NOUN VERB ADJ CCONJ PART ADJ PUNCT
tagged_tokens: Draugiškas_ADJ pabendravimas_NOUN Lietuvos_PROPN ambasadoje_NOUN buvo_VERB naudingas_ADJ ir_CCONJ net_PART svarius_ADJ ._PUNCTD) tokens: Malonus pabendravimas Lietuvos ambasadoje buvo naudingas ir net reikšmingas .
tags: ADJ NOUN PROPN NOUN VERB ADJ CCONJ PART ADJ PUNCT
tagged_tokens: Malonus_ADJ pabendravimas_NOUN Lietuvos_PROPN ambasadoje_NOUN buvo_VERB naudingas_ADJ ir_CCONJ net_PART reikšmingas_ADJ ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Kiekvienas iš tų skambinusižjių net nepasidomėjo, ką ą veikiu Londone.
tags: PRON ADV CONJ PRON VERB PUNCT PRON PRON VERB PROPN PUNCT
tagged_tokens: Kiekvienas_PRON iš_ADV tų_CONJ skambinusižjių_PRON net_PART nepasidomėjo_VERB ,_PUNCT ką_PRON ą_PRON veikiu_VERB Londone_PROPN ._PUNCT

B) tokens: Joks iš tų skambinusižjių net nekreipė dėmesio į tai , ką ą veikiu Londone .
tags: PRON CONJ PRON VERB PUNCT PRON PRON VERB PREP PRON ,_PUNCT ką_PRON ą_PRON veikiu_VERB Londone_PROPN ._PUNCT
tagged_tokens: Joks_PRON iš_CONJ tų_PRON skambinusižjių_PRON net_PART nekreipė_VERB dėmesio_į_PREP tai_PRON ,_PUNCT ką_PRON ą_PRON veikiu_VERB Londone_PROPN ._PUNCT

C) tokens: Nei vienas iš tų paskambinusižjių nesiteiravo, ką aš įtebiu Londone .
tags: PART PRON CONJ PRON VERB PUNCT PRON PRON VERB PROPN PUNCT
tagged_tokens: Nei_PART vienas_PRON iš_CONJ tų_PRON paskambinusižjių_PRON nesiteiravo_VERB ,_PUNCT ką_PRON aš_PRON įtebiu_VERB Londone_PROPN ._PUNCTD) tokens: Nė vienas iš tų skambinusiųjų net nepasidomėjo , ką aš veikiu Londone .
tags: PRON X ADP DET VERB PART VERB PUNCT PRON PRON VERB PROPN PUNCT
tagged_tokens: Nė_PRON vienas_X iš_ADP tų_DET skambinusiųjų_VERB net_PART nepasidomėjo_VERB ,_PUNCT ką_PRON aš_PRON veikiu_VERB Londone_PROPN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Todėl , ževelgiant iš Londono visą mūsų gyvenimėlis yra tokia provincija su kasdien malamomis tomis pačiomis žiniomis ir pavardėmis , kad , atvirai tariant , pradedu visikai toleruoti iš čia išvykstanąiuosius .
tags: PART PUNCT VERB ADP PROPN DET PRON NOUN AUX DET NOUN ADP ADV VERB DET X NOUN CCONJ NOUN PUNCT PUNCT PUNCT ADV VERB PUNCT VERB ADV VERB ADP ADV VERB PUNCT
tagged_tokens: Todėl_PART ,_PUNCT ževelgiant_VERB iš_ADP Londono_PROPN visą_DET mūsų_PRON gyvenimėlis_NOUN yra_AUX tokia_DET provincija_NOUN su_ADP kasdien_ADV malamomis_VERB tomis_DET pačiomis_žiniomis_X ir_CCONJ pavardėmis_NOUN ,_PUNCT kad_PUNCT ,_PUNCT atvirai_ADV tariant_VERB ,_PUNCT pradedu_VERB visikai_ADV toleruoti_VERB iš_čia_ADP išvykstanąiuosius_VERB ._PUNCT

B) tokens: Vadinasi , ževėdami iš Londoną visą mūsų gyvenimėlis mums atrodo tarsi kokia provincija su kasdien sukiojamomis tomis pačiomis žiniomis ir pavardėmis , tad , švelniai griebtų , jau pradedu visiškai pakęsti iš čia vykstanąią .
tags: CONJ CCONJ PUNCT VERB ADP PROPN DET PRON NOUN AUX ADV DET NOUN ADP ADV VERB DET X NOUN CCONJ NOUN PUNCT PUNCT ADV VERB PUNCT VERB ADV VERB PUNCT PUNCT
tagged_tokens: Vadinasi_CONJ ,_CCONJ ževėdami_VERB iš_ADP Londoną_PROPN visą_DET mūsų_PRON gyvenimėlis_NOUN mums_ADV atrodo_AUX tarsi_ADV kokia_DET provincija_NOUN su_ADP kasdien_ADV sukiojamomis_VERB tomis_DET pačiomis_žiniomis_X ir_CCONJ pavardėmis_NOUN ,_PUNCT tad_PUNCT ,_PUNCT švelniai_ADV griebtų_VERB ,_PUNCT jau_ADV pradedu_VERB visiškai_ADV pakęsti_VERB iš_čia_ADP vykstanąią_VERB ._PUNCT

C) tokens: Todėl , ževelgiant iš Londoną mūsų gyvenimėlis iš akis krinta tarsi provincijos gyvenimas , kur kasdien sukasi vis tie patys veidai , vardai ir pavardės , tad , prisipažinus , man darosi visai nesunku suprasti , kodėl ž insanlar palieka mū .
tags: CONJ PUNCT VERB ADP PROPN NOUN ADP DET PUNCT PART VERB ADV ADJ DET NOUN PUNCT CCONJ NOUN PUNCT PUNCT ADV VERB VERB PUNCT PART VERB PUNCT ADV PUNCT VERB ADV VERB PUNCT PUNCT
tagged_tokens: Todėl_CONJ ,_PUNCT ževelgiant_VERB iš_ADP Londoną_PROPN mūsų_NOUN gyvenimėlis_NOUN iš_ADP akis_DET krinta_VERB tarsi_PART provincijos_NOUN gyvenimas_NOUN ,_PUNCT kur_CONJ kasdien_ADV sukasi_VERB vis_ADV tie_DET patys_ADJ veidai_NOUN ,_PUNCT vardai_NOUN ir_CCONJ pavardės_NOUN ,_PUNCT tad_PUNCT ,_PUNCT prisipažinus_ADV ,_PUNCT man_PRON darosi_VERB visai_ADV nesunku_ADJ suprasti_VERB ,_PUNCT kodėl_ž_PART insanlar_NOUN palieka_VERB mū_PRON ._PUNCTD) tokens: Taigi , žvelgiant iš Londono visas mūsų gyvenimėlis yra tokia provincija su kasdien malamomis tomis pačiomis žiniomis ir pavardėmis , kad , atvirai sakant , pradedu visiškai toleruoti iš čia išvažiuojančiuosius .
tags: PART PUNCT VERB ADP PROPN DET PRON NOUN AUX DET NOUN ADP ADV VERB DET X NOUN CCONJ NOUN PUNCT PUNCT PUNCT ADV VERB PUNCT VERB ADV VERB ADP ADV VERB PUNCT
tagged_tokens: Taigi_PART ,_PUNCT žvelgiant_VERB iš_ADP Londono_PROPN visas_DET mūsų_PRON gyvenimėlis_NOUN yra_AUX tokia_DET provincija_NOUN su_ADP kasdien_ADV malamomis_VERB tomis_DET pačiomis_X žiniomis_NOUN ir_CCONJ pavardėmis_NOUN ,_PUNCT kad_PUNCT ,_PUNCT atvirai_ADV sakant_VERB ,_PUNCT pradedu_VERB visiškai_ADV toleruoti_VERB iš_ADP čia_ADV išvažiuojančiuosius_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Jie , pasirinkę vakarietiškus kraštus , bent jau turi galimybiž eiti pirmyn , tolti nuo konservatyvaus ir dažnai buko lietuviško mentaliteto , neveiklumo , vulgarumo , chamizmo , nesuvokiamų dydžių korupcijos ir klestinčio girtuokliavimo .
tags: PRON PUNCT VERB ADJ NOUN PUNCT PART PART VERB NOUN eiti VERB ADV PUNCT VERB ADP ADJ CCONJ ADV NOUN ADJ NOUN PUNCT NOUN PUNCT NOUN PUNCT NOUN PUNCT VERB NOUN NOUN CCONJ VERB NOUN PUNCT
tagged_tokens: Jie_PRON ,_PUNCT pasirinkę_VERB vakarietiškus_ADJ kraštus_NOUN ,_PUNCT bent_PART jau_PART turi_VERB galimybiž_NOUN eiti_VERB pirmyn_ADV ,_PUNCT tolti_VERB nuo_ADP konservatyvaus_ADJ ir_CCONJ dažnai_ADV buko_NOUN lietuviško_ADJ mentaliteto_NOUN ,_PUNCT neveiklumo_NOUN ,_PUNCT vulgarumo_NOUN ,_PUNCT chamizmo_NOUN ,_PUNCT nesuvokiamų_VERB dydžių_NOUN korupcijos_NOUN ir_CCONJ klestinčio_VERB girtuokliavimo_NOUN ._PUNCT

B) tokens: Jie , pasirinkę vakarietiškus kraštus , bent jau turi galimybę eiti į priekį , tolti nuo konservatyvaus ir dažnai primityvaus lietuviško mentaliteto , neveiklumo , chamizmo , vulgarumo , nesuvokiamų dydžių korupcijos ir klestinčio girtuokliavimo .
tags: PRON PUNCT VERB ADJ NOUN PUNCT PART PART VERB NOUN VERB PUNCT VERB ADP ADJ CCONJ ADV ADJ NOUN ADJ NOUN PUNCT NOUN PUNCT NOUN PUNCT NOUN PUNCT VERB NOUN NOUN CCONJ VERB NOUN PUNCT
tagged_tokens: Jie_PRON ,_PUNCT pasirinkę_VERB vakarietiškus_ADJ kraštus_NOUN ,_PUNCT bent_PART jau_PART turi_VERB galimybę_NOUN eiti_į_VERB priekį_NOUN ,_PUNCT tolti_VERB nuo_ADP konservatyvaus_ADJ ir_CCONJ dažnai_ADV primityvaus_ADJ lietuviško_ADJ mentaliteto_NOUN ,_PUNCT neveiklumo_NOUN ,_PUNCT chamizmo_NOUN ,_PUNCT vulgarumo_NOUN ,_PUNCT nesuvokiamų_VERB dydžių_NOUN korupcijos_NOUN ir_CCONJ klestinčio_VERB girtuokliavimo_NOUN ._PUNCT

C) tokens: Jie , pasirinkę vakarietiškus regionus , bent jau turi galimybę progresuoti , tolti nuo neveiksnumo , chamizmo , vulgarumo , konservatyvaus ir dažnai primityvaus lietuviško mentaliteto , nesuvokiamų dydžių korupcijos ir klestinčio girtavimo .
tags: PRON PUNCT VERB ADJ NOUN PUNCT PART PART VERB NOUN VERB PUNCT VERB ADP NOUN PUNCT NOUN PUNCT NOUN PUNCT ADJ CCONJ ADV ADJ NOUN ADJ NOUN PUNCT NOUN PUNCT NOUN PUNCT VERB NOUN NOUN CCONJ VERB NOUN PUNCT
tagged_tokens: Jie_PRON ,_PUNCT pasirinkę_VERB vakarietiškus_ADJ regionus_NOUN ,_PUNCT bent_PART jau_PART turi_VERB galimybę_NOUN progresuoti_VERB ,_PUNCT tolti_VERB nuo_ADP neveiksnumo_NOUN ,_PUNCT chamizmo_NOUN ,_PUNCT vulgarumo_NOUN ,_PUNCT konservatyvaus_ADJ ir_CCONJ dažnai_ADV primityvaus_ADJ lietuviško_ADJ mentaliteto_NOUN ,_PUNCT nesuvokiamų_VERB dydžių_NOUN korupcijos_NOUN ir_CCONJ klestinčio_VERB girtavimo_NOUN ._PUNCTD) tokens: Jie , pasirinkę vakarietiškus kraštus , bent jau turi šansų eiti pirmyn , tolti nuo konservatyvaus ir dažnai buko lietuviško mentaliteto , neveiklumo , chamizmo , vulgarumo , nesuvokiamų dydžių korupcijos ir klestinčio girtuokliavimo .
tags: PRON PUNCT VERB ADJ NOUN PUNCT PART PART VERB NOUN VERB ADV PUNCT VERB ADP ADJ CCONJ ADV NOUN ADJ NOUN PUNCT NOUN PUNCT NOUN PUNCT NOUN PUNCT VERB NOUN NOUN CCONJ VERB NOUN PUNCT
tagged_tokens: Jie_PRON ,_PUNCT pasirinkę_VERB vakarietiškus_ADJ kraštus_NOUN ,_PUNCT bent_PART jau_PART turi_VERB šansų_NOUN eiti_VERB pirmyn_ADV ,_PUNCT tolti_VERB nuo_ADP konservatyvaus_ADJ ir_CCONJ dažnai_ADV buko_NOUN lietuviško_ADJ mentaliteto_NOUN ,_PUNCT neveiklumo_NOUN ,_PUNCT chamizmo_NOUN ,_PUNCT vulgarumo_NOUN ,_PUNCT nesuvokiamų_VERB dydžių_NOUN korupcijos_NOUN ir_CCONJ klestinčio_VERB girtuokliavimo_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Beje , kai atsidursite Londone , paklausykite , kokią muziką transliuoja ten esančios radijo stotys .
tags: PART PUNCT SCONJ VERB PROPN PUNCT VERB PUNCT DET NOUN VERB ADV VERB NOUN NOUN PUNCT
tagged_tokens: Beje_PART ,_PUNCT kai_SCONJ atsidursite_VERB Londone_PROPN ,_PUNCT paklausykite_VERB ,_PUNCT kokią_DET muziką_NOUN transliuoja_VERB ten_ADV esančios_VERB radijo_NOUN stotys_NOUN ._PUNCT

B) tokens: Beje , kai viešėsite Londone , paklausykite , kokią muziką groja ten veikiančios radijo stotys .
tags: PART PUNCT SCONJ VERB PROPN PUNCT VERB PUNCT DET NOUN VERB ADV VERB NOUN NOUN PUNCT
tagged_tokens: Beje_PART ,_PUNCT kai_SCONJ viešėsite_VERB Londone_PROPN ,_PUNCT paklausykite_VERB ,_PUNCT kokią_DET muziką_NOUN groja_VERB ten_ADV veikiančios_VERB radijo_NOUN stotys_NOUN ._PUNCT

C) tokens: Beje , jeigu būsite Londone , pasiklausykite , kokią muziką transliuoja ten funkcionuojančios radijo stotys .
tags: PART PUNCT CCONJ VERB PROPN PUNCT VERB PUNCT DET NOUN VERB ADV VERB NOUN NOUN PUNCT
tagged_tokens: Beje_PART ,_PUNCT jeigu_CCONJ būsite_VERB Londone_PROPN ,_PUNCT pasiklausykite_VERB ,_PUNCT kokią_DET muziką_NOUN transliuoja_VERB ten_ADV funkcionuojančios_VERB radijo_NOUN stotys_NOUN ._PUNCTD) tokens: Beje , kai būsite Londone , pasiklausykite , kokią muziką transliuoja ten veikiančios radijo stotys .
tags: PART PUNCT SCONJ VERB PROPN PUNCT VERB PUNCT DET NOUN VERB ADV VERB NOUN NOUN PUNCT
tagged_tokens: Beje_PART ,_PUNCT kai_SCONJ būsite_VERB Londone_PROPN ,_PUNCT pasiklausykite_VERB ,_PUNCT kokią_DET muziką_NOUN transliuoja_VERB ten_ADV veikiančios_VERB radijo_NOUN stotys_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Jaunuoliams, ragaujantiems vyną, ta daina atrodė labai artima.
tags: NOUN VERB NOUN DET NOUN VERB ADV PRON PUNCT
tagged_tokens: Jaunuoliams_NOUN ragaujantiems_VERB vyną_NOUN ta_DET daina_NOUN atrodė_VERB labai_ADV artima_PRON ._PUNCT

B) tokens: Jaunimas, geriantis vyną, pajuto, kad daina skirta jiems.
tags: NOUN VERB NOUN CONJ NOUN VERB PRON PUNCT
tagged_tokens: Jaunimas_NOUN geriantis_VERB vyną_NOUN pajuto_VERB kad_CONJ daina_NOUN skirta_VERB jiems_PRON ._PUNCT

C) tokens: Daina, kurią gurkšnojo jaunuoliai, buvo skirta jaunystei.
tags: NOUN REL VERB NOUN VERB NOUN PUNCT
tagged_tokens: Daina_NOUN kurią_REL gurkšnojo_VERB jaunuoliai_NOUN buvo_VERB skirta_VERB jaunystei_NOUN ._PUNCTD) tokens: Vyną gurkšnojusiems jaunuoliams ta daina pasirodė labai sava .
tags: NOUN VERB NOUN DET NOUN VERB ADV PRON PUNCT
tagged_tokens: Vyną_NOUN gurkšnojusiems_VERB jaunuoliams_NOUN ta_DET daina_NOUN pasirodė_VERB labai_ADV sava_PRON ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Žinau, prasti mano klausimai, bet geresnių šią savaitę nesugalvoju...
tags: VERB PUNCT ADJ PRON PROPN PUNCT CCONJ ADJ DET NOUN VERB PUNCT
tagged_tokens: Žinau_VERB ,_PUNCT prasti_ADJ mano_PRON klausimai_PROPN ,_PUNCT bet_CCONJ geresnių_ADJ šią_DET savaitę_NOUN nesugalvoju_VERB ..._PUNCT

B) tokens: Suvokiu, prastoki mano klausimai, bet geresnių šį savaitgalį nesugalvoju...
tags: VERB PUNCT ADJ PRON PROPN PUNCT CCONJ ADJ DET NOUN VERB PUNCT
tagged_tokens: Suvokiu_VERB ,_PUNCT prastoki_ADJ mano_PRON klausimai_PROPN ,_PUNCT bet_CCONJ geresnių_ADJ šį_DET savaitgalį_NOUN nesugalvoju_VERB ..._PUNCT

C) tokens: Suprantu, kvaili mano klausimai, bet geresnių šį savaitgalį nebesugalvoju...
tags: VERB PUNCT ADJ PRON PROPN PUNCT CCONJ ADJ DET NOUN VERB PUNCT
tagged_tokens: Suprantu_VERB ,_PUNCT kvaili_ADJ mano_PRON klausimai_PROPN ,_PUNCT bet_CCONJ geresnių_ADJ šį_DET savaitgalį_NOUN nebesugalvoju_VERB ..._PUNCTD) tokens: Žinau , negeri mano klausimai , bet geresnių šį savaitgalį nebesugalvoju ...
tags: VERB PUNCT ADJ PRON PROPN PUNCT CCONJ ADJ DET NOUN VERB PUNCT
tagged_tokens: Žinau_VERB ,_PUNCT negeri_ADJ mano_PRON klausimai_PROPN ,_PUNCT bet_CCONJ geresnių_ADJ šį_DET savaitgalį_NOUN nebesugalvoju_VERB ..._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Taisomame Vaidoto gatvelės ruože vakar trūkų vandentiekio vamzdis .
tags: VERB PROPN NOUN NOUN ADV VERB NOUN NOUN PUNCT
tagged_tokens: Taisomame_VERB Vaidoto_PROPN gatvelės_NOUN ruože_NOUN vakar_ADV trūkų_VERB vandentiekio_NOUN vamzdis_NOUN ._PUNCT

B) tokens: Remontuojamame Vaidoto gatvės ruože vakar nutrūkų vandentiekio vamzdis .
tags: VERB PROPN NOUN NOUN ADV VERB NOUN NOUN PUNCT
tagged_tokens: Remontuojamame_VERB Vaidoto_PROPN gatvės_NOUN ruože_NOUN vakar_ADV nutrūkų_VERB vandentiekio_NOUN vamzdis_NOUN ._PUNCT

C) tokens: Taisomame Vaidoto gatvės ruože vakar plyšo vandentiekio vamzdis .
tags: VERB PROPN NOUN NOUN ADV VERB NOUN NOUN PUNCT
tagged_tokens: Taisomame_VERB Vaidoto_PROPN gatvės_NOUN ruože_NOUN vakar_ADV plyšo_VERB vandentiekio_NOUN vamzdis_NOUN ._PUNCTD) tokens: Remontuojamame Vaidoto gatvės ruože vakar trūko vandentiekio vamzdis .
tags: VERB PROPN NOUN NOUN ADV VERB NOUN NOUN PUNCT
tagged_tokens: Remontuojamame_VERB Vaidoto_PROPN gatvės_NOUN ruože_NOUN vakar_ADV trūko_VERB vandentiekio_NOUN vamzdis_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Bėgantis iš vamzdžio vanduo nuplovė gruntą, todėl neasfaltuotoje gatvės dalyje susidarė gili įgriuva
tags: VERB ADP NOUN NOUN VERB NOUN PUNCT ADV VERB NOUN NOUN VERB ADJ NOUN PUNCT
tagged_tokens: Bėgantis_VERB iš_ADP vamzdžio_NOUN vanduo_NOUN nuplovė_VERB gruntą_NOUN ,_PUNCT todėl_ADV neasfaltuotoje_VERB gatvės_NOUN dalyje_NOUN susidarė_VERB gili_ADJ įgriuva_NOUN ._PUNCT

B) tokens: Tekantis vanduo iš vamzdžio plovė gruntą, todėl gruntiniame kelyje susidarė griova.
tags: VERB ADP NOUN VERB NOUN PUNCT ADV NOUN VERB NOUN PUNCT
tagged_tokens: Tekantis_VERB vanduo_NOUN iš_ADP vamzdžio_NOUN plovė_VERB gruntą_NOUN ,_PUNCT todėl_ADV gruntiniame_NOUN kelyje_NOUN susidarė_VERB griova_NOUN .

C) tokens: Iš vamzdžio bėgantis vanduo išplovė gruntą, dėl to neasfaltuotoje gatvės dalyje susidarė giloka įgriuva.
tags: ADP NOUN VERB ADP NOUN PUNCT CCONJ ADV NOUN NOUN VERB ADJ NOUN PUNCT
tagged_tokens: Iš_ADP vamzdžio_NOUN bėgantis_VERB vanduo_NOUN išplovė_VERB gruntą_NOUN ,_PUNCT dėl_CCONJ to_ADV neasfaltuotoje_NOUN gatvės_NOUN dalyje_NOUN susidarė_VERB giloka_ADJ įgriuva_NOUN .D) tokens: Tekantis iš vamzdžio vanduo išplovė gruntą , todėl neasfaltuotoje gatvės dalyje susidarė gili įduba .
tags: VERB ADP NOUN NOUN VERB NOUN PUNCT ADV VERB NOUN NOUN VERB ADJ NOUN PUNCT
tagged_tokens: Tekantis_VERB iš_ADP vamzdžio_NOUN vanduo_NOUN išplovė_VERB gruntą_NOUN ,_PUNCT todėl_ADV neasfaltuotoje_VERB gatvės_NOUN dalyje_NOUN susidarė_VERB gili_ADJ įduba_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Gyventojai pasakojo , kad rytą į duobė buvo įvažiąs lengvasis automobilis .
tags: NOUN VERB PUNCT SCONJ NOUN ADP NOUN AUX VERB ADJ NOUN PUNCT
tagged_tokens: Gyventojai_NOUN pasakojo_VERB ,_PUNCT kad_SCONJ rytą_NOUN į_ADP duobė_NOUN buvo_įvažiąs_VERB lengvasis_ADJ automobilis_NOUN ._PUNCT

B) tokens: Miesto gyventojai pasakojo , jog rytmetį į duobė buvo kliudį lengvasis automobilis .
tags: NOUN VERB PUNCT SCONJ NOUN ADP NOUN AUX VERB ADJ NOUN PUNCT
tagged_tokens: Miesto_NOUN gyventojai_NOUN pasakojo_VERB ,_PUNCT jog_SCONJ rytmetį_NOUN į_ADP duobė_NOUN buvo_AUX kliudį_VERB lengvasis_ADJ automobilis_NOUN ._PUNCT

C) tokens: Gyventojai kalbėjo , kad ąnksti ryte į duobė nulėkė lengvoji mašina .
tags: NOUN VERB PUNCT SCONJ ADJ NOUN ADP NOUN AUX VERB ADJ NOUN PUNCT
tagged_tokens: Gyventojai_NOUN kalbėjo_VERB ,_PUNCT kad_ąnksti_ADJ ryte_NOUN į_ADP duobė_NOUN nulėkė_VERB lengvoji_ADJ mašina_NOUN ._PUNCTD) tokens: Gyventojai pasakojo , kad ryte į duobę buvo įvažiavęs lengvasis automobilis .
tags: NOUN VERB PUNCT SCONJ NOUN ADP NOUN AUX VERB ADJ NOUN PUNCT
tagged_tokens: Gyventojai_NOUN pasakojo_VERB ,_PUNCT kad_SCONJ ryte_NOUN į_ADP duobę_NOUN buvo_AUX įvažiavęs_VERB lengvasis_ADJ automobilis_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Darbininkai aiškinosi , kad prie duobės pastatytas atitvaras , bet vairuotojas jo nepastebėjo .
tags: NOUN VERB PUNCT SCONJ ADP NOUN VERB NOUN PUNCT CCONJ PRON VERB PUNCT
tagged_tokens: Darbininkai_NOUN aiškinosi_VERB ,_PUNCT kad_SCONJ prie_ADP duobės_NOUN pastatytas_VERB atitvaras_NOUN ,_PUNCT bet_CCONJ jo_PRON nepastebėjo_VERB ._PUNCT

B) tokens: Statybininkai teisinosi , kad prie duobės pastatyta tvora , bet vairuotojas jos nepastebėjo .
tags: NOUN VERB PUNCT SCONJ ADP NOUN VERB NOUN PUNCT CCONJ PRON VERB PUNCT
tagged_tokens: Statybininkai_NOUN teisinosi_VERB ,_PUNCT kad_SCONJ prie_ADP duobės_NOUN pastatyta_VERB tvora_NOUN ,_PUNCT bet_CCONJ jos_PRON nepastebėjo_VERB ._PUNCT

C) tokens: Darbininkai gynėsi , kad prie duobės pastatytas barjeras , bet vairuotojas jo nepastebėjo .
tags: NOUN VERB PUNCT SCONJ ADP NOUN VERB NOUN PUNCT CCONJ PRON VERB PUNCT
tagged_tokens: Darbininkai_NOUN gynėsi_VERB ,_PUNCT kad_SCONJ prie_ADP duobės_NOUN pastatytas_VERB barjeras_NOUN ,_PUNCT bet_CCONJ jo_PRON nepastebėjo_VERB ._PUNCTD) tokens: Darbininkai teisinosi , kad prie duobės pastatyta užtvara , tačiau vairuotojas jos nepastebėjo .
tags: NOUN VERB PUNCT SCONJ ADP NOUN VERB NOUN PUNCT CCONJ NOUN PRON VERB PUNCT
tagged_tokens: Darbininkai_NOUN teisinosi_VERB ,_PUNCT kad_SCONJ prie_ADP duobės_NOUN pastatyta_VERB užtvara_NOUN ,_PUNCT tačiau_CCONJ vairuotojas_NOUN jos_PRON nepastebėjo_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Visą parą avariniai darbuotojai taisė vamzdį , dėl to daliai Panemunės gyventojų vanduo nebuvo tiekiamas .
tags: DET NOUN ADJ NOUN VERB VERB NOUN PUNCT ADP DET NOUN PROPN NOUN NOUN VERB VERB PUNCT
tagged_tokens: Visą_DET parą_NOUN avariniai_ADJ darbuotojai_NOUN taisė_VERB vamzdį_NOUN ,_PUNCT dėl_ADP to_DET daliai_NOUN Panemunės_PROPN gyventojų_NOUN vanduo_NOUN nebuvo_VERB tiekiamas_VERB ._PUNCT

B) tokens: Visą dieną avariniai darbuotojai tvarkę vamzdį , dėl to daliai Panemunės gyventojų vanduo nebuvo tiekiamas .
tags: DET NOUN ADJ NOUN VERB VERB NOUN PUNCT ADP DET NOUN PROPN NOUN NOUN VERB VERB PUNCT
tagged_tokens: Visą_DET dieną_NOUN avariniai_ADJ darbuotojai_NOUN tvarkę_VERB vamzdį_NOUN ,_PUNCT dėl_ADP to_DET daliai_NOUN Panemunės_PROPN gyventojų_NOUN vanduo_NOUN nebuvo_VERB tiekiamas_VERB ._PUNCT

C) tokens: Visą dieną avariniai darbuotojai taisė vamzdį , dėl to daliai Panemunės gyventojų nebuvo tiekiamas vanduo .
tags: DET NOUN ADJ NOUN VERB VERB NOUN PUNCT ADP DET NOUN PROPN NOUN NOUN VERB NOUN PUNCT
tagged_tokens: Visą_DET dieną_NOUN avariniai_ADJ darbuotojai_NOUN taisė_VERB vamzdį_NOUN ,_PUNCT dėl_ADP to_DET daliai_NOUN Panemunės_PROPN gyventojų_NOUN nebuvo_VERB tiekiamas_VERB vanduo_NOUN ._PUNCTD) tokens: Visą dieną avarinės darbuotojai remontavo trūkusį vamzdį , dėl to daliai Panemunės gyventojų vanduo nebuvo tiekiamas .
tags: DET NOUN ADJ NOUN VERB VERB NOUN PUNCT ADP DET NOUN PROPN NOUN NOUN VERB VERB PUNCT
tagged_tokens: Visą_DET dieną_NOUN avarinės_ADJ darbuotojai_NOUN remontavo_VERB trūkusį_VERB vamzdį_NOUN ,_PUNCT dėl_ADP to_DET daliai_NOUN Panemunės_PROPN gyventojų_NOUN vanduo_NOUN nebuvo_VERB tiekiamas_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Panemunės pilietinės bendruomenės centro valdybos pirmininkė Rūta Zabielienė teigė , kad panemuniškiai ilgą laiką tikisi , kada bus baigtas Vaidoto gatvės remontas .
tags: PROPN NOUN NOUN NOUN NOUN PROPN PROPN VERB PUNCT SCONJ NOUN ADV VERB PUNCT ADV AUX VERB PROPN NOUN NOUN PUNCT
tagged_tokens: Panemunės_PROPN pilietinės_NOUN bendruomenės_NOUN centro_NOUN valdybos_NOUN pirmininkė_NOUN Rūta_PROPN Zabielienė_PROPN teigė_VERB ,_PUNCT kad_SCONJ panemuniškiai_NOUN ilgą_ADV laiką_NOUN tikisi_VERB ,_PUNCT kada_ADV bus_AUX baigtas_VERB Vaidoto_PROPN gatvės_NOUN remontas_NOUN .

B) tokens: Panemunės bendruomenės centro vadovė Rūta Zabielienė minėjo , jog panemuniškiai nekantriai laukia , kada bus pabaigtas Vaidoto gatvės remontas .
tags: PROPN NOUN NOUN NOUN PROPN PROPN VERB PUNCT CCONJ NOUN ADV VERB PUNCT ADV AUX VERB PROPN NOUN NOUN PUNCT
tagged_tokens: Panemunės_PROPN bendruomenės_NOUN centro_NOUN vadovė_NOUN Rūta_PROPN Zabielienė_PROPN minėjo_VERB ,_PUNCT jog_CCONJ panemuniškiai_NOUN nekantriai_ADV laukia_VERB ,_PUNCT kada_ADV bus_AUX pabaigtas_VERB Vaidoto_PROPN gatvės_NOUN remontas_NOUN .

C) tokens: Panemunės bendruomenės centro vadovė Rūta Zabielienė sakė , jog panemuniškiai laukia , kol bus užbaigtas Vaidoto gatvės tvarkymas .
tags: PROPN NOUN NOUN NOUN PROPN PROPN VERB PUNCT CCONJ NOUN VERB PUNCT ADV AUX VERB PROPN NOUN NOUN PUNCT
tagged_tokens: Panemunės_PROPN bendruomenės_NOUN centro_NOUN vadovė_NOUN Rūta_PROPN Zabielienė_PROPN sakė_VERB ,_PUNCT jog_CCONJ panemuniškiai_NOUN laukia_VERB ,_PUNCT kol_ADV bus_AUX užbaigtas_VERB Vaidoto_PROPN gatvės_NOUN tvarkymas_NOUN .D) tokens: Panemunės bendruomenės centro valdybos narė Rūta Zabielienė sakė , kad panemuniškiai seniai laukia , kada bus baigtas Vaidoto gatvės remontas .
tags: PROPN NOUN NOUN NOUN NOUN PROPN PROPN VERB PUNCT SCONJ NOUN ADV VERB PUNCT ADV AUX VERB PROPN NOUN NOUN PUNCT
tagged_tokens: Panemunės_PROPN bendruomenės_NOUN centro_NOUN valdybos_NOUN narė_NOUN Rūta_PROPN Zabielienė_PROPN sakė_VERB ,_PUNCT kad_SCONJ panemuniškiai_NOUN seniai_ADV laukia_VERB ,_PUNCT kada_ADV bus_AUX baigtas_VERB Vaidoto_PROPN gatvės_NOUN remontas_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: „ Mums kelia nerimą , kad šioje judrioje gatvėje neatsivertų dar daugiau smegduobių .
tags: PUNCT PRON VERB PUNCT SCONJ DET ADJ NOUN VERB PART ADV NOUN PUNCT
tagged_tokens: „_PUNCT Mums_PRON kelia_VERB nerimą_PUNCT ,_PUNCT kad_SCONJ šioje_DET judrioje_ADJ gatvėje_NOUN neatsivertų_VERB dar_PART daugiau_ADV smegduobių_NOUN ._PUNCT

B) tokens: „ Mes esame susirūpinę , kad šioje judrioje gatvėje neatsivertų dar daugiau duobių .
tags: PUNCT PRON VERB PUNCT SCONJ DET ADJ NOUN VERB PART ADV NOUN PUNCT
tagged_tokens: „_PUNCT Mes_PRON esame_VERB susirūpinę_PUNCT ,_PUNCT kad_SCONJ šioje_DET judrioje_ADJ gatvėje_NOUN neatsivertų_VERB dar_PART daugiau_ADV duobių_NOUN ._PUNCT

C) tokens: „ Mums neramu , kad šioje judrioje gatvėje gali atsiverti dar daugiau duobių .
tags: PUNCT PRON VERB PUNCT SCONJ DET ADJ NOUN VERB PART ADV NOUN PUNCT
tagged_tokens: „_PUNCT Mums_PRON neramu_VERB ,_PUNCT kad_SCONJ šioje_DET judrioje_ADJ gatvėje_NOUN gali_VERB atsiverti_VERB dar_PART daugiau_ADV duobių_NOUN ._PUNCTD) tokens: „ Mus baugina , kad šioje judrioje gatvėje neatsivertų dar daugiau smegduobių .
tags: PUNCT PRON VERB PUNCT SCONJ DET ADJ NOUN VERB PART ADV NOUN PUNCT
tagged_tokens: „_PUNCT Mus_PRON baugina_VERB ,_PUNCT kad_SCONJ šioje_DET judrioje_ADJ gatvėje_NOUN neatsivertų_VERB dar_PART daugiau_ADV smegduobių_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: - Miesto valdžia taip pat galėtų geriau pasirūpint gatvių priežiūros . “
tags: PUNCT NOUN NOUN PART X VERB ADV VERB NOUN ADJ PUNCT PUNCT
tagged_tokens: -_PUNCT Miesto_NOUN valdžia_NOUN taip_PART pat_X galėtų_VERB geriau_ADV pasirūpint_VERB gatvių_NOUN priežiūros_ADJ ._PUNCT “_PUNCT

B) tokens: - Miesto savivaldybė taip pat galėtų geriau prižiūroti gatvių būklę . “
tags: PUNCT NOUN NOUN PART X VERB ADV VERB NOUN ADV PUNCT PUNCT
tagged_tokens: -_PUNCT Miesto_NOUN savivaldybė_NOUN taip_PART pat_X galėtų_VERB geriau_ADV prižiūroti_VERB gatvių_NOUN būklę_ADV ._PUNCT “_PUNCT

C) tokens: - Miesto valdžia taip pat galėtų geriau tvarkyti gatves . “
tags: PUNCT NOUN NOUN PART X VERB ADV VERB NOUN PUNCT PUNCT
tagged_tokens: -_PUNCT Miesto_NOUN valdžia_NOUN taip_PART pat_X galėtų_VERB geriau_ADV tvarkyti_VERB gatves_NOUN ._PUNCT “_PUNCTD) tokens: - Miesto valdžia taip pat galėtų geriau rūpintis gatvių būkle . “
tags: PUNCT NOUN NOUN PART X VERB ADV VERB NOUN NOUN PUNCT PUNCT
tagged_tokens: -_PUNCT Miesto_NOUN valdžia_NOUN taip_PART pat_X galėtų_VERB geriau_ADV rūpintis_VERB gatvių_NOUN būkle_NOUN ._PUNCT “_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Gyventojai nerimauja , kad ištrūkūjusio vamzdžio ilgai bėgųs vanduo nebūtų išplovės daugiau žmo po visą gatvę .
tags: NOUN VERB PUNCT SCONJ ADP VERB NOUN ADV VERB NOUN VERB VERB ADV NOUN ADP DET NOUN PUNCT
tagged_tokens: Gyventojai_NOUN nerimauja_VERB ,_PUNCT kad_SCONJ į_ADP trūkūjusio_VERB vamzdžio_NOUN ilgai_ADV bėgųs_VERB vanduo_NOUN nebūtų_VERB išplovės_VERB daugiau_ADV žmo_NOUN po_ADP visą_DET gatvę_NOUN ._PUNCT

B) tokens: Miesto gyventojai sunerimę , kad ištrūkūjusio vamzdyno vanduo ilgai tvyrantis nebūtų išplovės daugiau žmo po visą gatvę .
tags: NOUN NOUN VERB PUNCT SCONJ ADP VERB NOUN ADV VERB NOUN VERB VERB ADV NOUN ADP DET NOUN PUNCT
tagged_tokens: Miesto_NOUN gyventojai_NOUN sunerimę_VERB ,_PUNCT kad_SCONJ į_ADP trūkūjusio_VERB vamzdyno_NOUN vanduo_NOUN ilgai_ADV tvyrantis_VERB nebūtų_VERB išplovės_VERB daugiau_ADV žmo_NOUN po_ADP visą_DET gatvę_NOUN ._PUNCT

C) tokens: Gyventojai nerimauja , kad ištrūkūjusio vamzdžio vanduo išsiliejės nebūtų išplovės daugiau žmo po visą gatvę .
tags: NOUN VERB PUNCT SCONJ ADP VERB NOUN VERB NOUN VERB VERB VERB ADV NOUN ADP DET NOUN PUNCT
tagged_tokens: Gyventojai_NOUN nerimauja_VERB ,_PUNCT kad_SCONJ į_ADP trūkūjusio_VERB vamzdžio_NOUN vanduo_NOUN įsiliejės_VERB nebūtų_VERB išplovės_VERB daugiau_ADV žmo_NOUN po_ADP visą_DET gatvę_NOUN ._PUNCTD) tokens: Gyventojai susirūpinę , kad iš trūkusio vamzdžio ilgai tekėjęs vanduo nebūtų išplovęs daugiau grunto po visą gatvę .
tags: NOUN VERB PUNCT SCONJ ADP VERB NOUN ADV VERB NOUN VERB VERB ADV NOUN ADP DET NOUN PUNCT
tagged_tokens: Gyventojai_NOUN susirūpinę_VERB ,_PUNCT kad_SCONJ iš_ADP trūkusio_VERB vamzdžio_NOUN ilgai_ADV tekėjęs_VERB vanduo_NOUN nebūtų_VERB išplovęs_VERB daugiau_ADV grunto_NOUN po_ADP visą_DET gatvę_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Savivaldybės Komunalinio ŭ. skyriaus vedėjas Zenonas Girčys bandė nuraminti kauniečius .
tags: NOUN ADJ NOUN NOUN NOUN PROPN PROPN VERB VERB NOUN PUNCT
tagged_tokens: Savivaldybės_NOUN Komunalinio_ADJ ŭ._NOUN skyriaus_NOUN vedėjas_NOUN Zenonas_PROPN Girčys_PROPN bandė_VERB nuraminti_VERB kauniečius_NOUN .

B) tokens: Miesto Ūkio departamento direktoriaus pavaduotojas Zenonas Girčys bandė nuraminti kauniečius .
tags: NOUN NOUN NOUN NOUN PROPN VERB VERB NOUN PUNCT
tagged_tokens: Miesto_NOUN Ūkio_NOUN departamento_NOUN direktoriaus_NOUN pavaduotojas_NOUN Zenonas_PROPN Girčys_PROPN bandė_VERB nuraminti_VERB kauniečius_NOUN .

C) tokens: Savivaldybės komunalininkai bando nuraminti kauniečius .
tags: NOUN VERB VERB NOUN PUNCT
tagged_tokens: Savivaldybės_NOUN komunalininkai_NOUN bando_VERB nuraminti_VERB kauniečius_NOUN .D) tokens: Savivaldybės Komunalinio ūkio skyriaus pavaduotojas Zenonas Girčys bandė nuraminti kauniečius .
tags: NOUN ADJ NOUN NOUN NOUN PROPN PROPN VERB VERB NOUN PUNCT
tagged_tokens: Savivaldybės_NOUN Komunalinio_ADJ ūkio_NOUN skyriaus_NOUN pavaduotojas_NOUN Zenonas_PROPN Girčys_PROPN bandė_VERB nuraminti_VERB kauniečius_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: - Tikrai nereikia baimintis važiuoti Vaidoto gatve . ”
tags: PUNCT ADV VERB VERB VERB PROPN NOUN PUNCT PUNCT
tagged_tokens: -_PUNCT Tikrai_ADV nereikia_VERB baimintis_VERB važuoti_VERB Vaidoto_PROPN gatve_NOUN .”_PUNCT

B) tokens: - Tikrai nereikia vengti važiuoti Vaidoto gatve . ”
tags: PUNCT ADV VERB VERB VERB PROPN NOUN PUNCT PUNCT
tagged_tokens: -_PUNCT Tikrai_ADV nereikia_VERB vengti_VERB važuoti_VERB Vaidoto_PROPN gatve_NOUN .”_PUNCT

C) tokens: - Tikrai nereikia atsisakyti keliauti Vaidoto gatve . ”
tags: PUNCT ADV VERB VERB VERB PROPN NOUN PUNCT PUNCT
tagged_tokens: -_PUNCT Tikrai_ADV nereikia_VERB atsisakyti_VERB keliauti_VERB Vaidoto_PROPN gatve_NOUN .”_PUNCTD) tokens: - Tikrai nereikia bijoti važiuoti Vaidoto gatve . “
tags: PUNCT ADV VERB VERB VERB PROPN NOUN PUNCT PUNCT
tagged_tokens: -_PUNCT Tikrai_ADV nereikia_VERB bijoti_VERB važiuoti_VERB Vaidoto_PROPN gatve_NOUN ._PUNCT “_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Kai kurie gyventojai skundėsi , kad Vaidoto gatvėje uždugo vasarą trunkaną remontą .
tags: PRON X NOUN VERB PUNCT SCONJ PROPN NOUN VERB ADP NOUN VERB NOUN PUNCT
tagged_tokens: Kai_PRON kurie_X gyventojai_NOUN skundėsi_VERB ,_PUNCT kad_SCONJ Vaidoto_PROPN gatvėje_NOUN uždugo_VERB nuo_ADP vasaros_NOUN trunkaną_VERB remontą_NOUN ._PUNCT

B) tokens: Kai kurie gyventojai teigė , kad Vaidoto gatvėje uždugo vasarą trunkantys remonto darbai .
tags: PRON X NOUN VERB PUNCT SCONJ PROPN NOUN VERB ADP NOUN VERB NOUN PUNCT
tagged_tokens: Kai_PRON kurie_X gyventojai_NOUN teigė_VERB ,_PUNCT kad_SCONJ Vaidoto_PROPN gatvėje_NOUN uždugo_VERB nuo_ADP vasaros_NOUN trunkantys_VERB remonto_NOUN darbai_NOUN ._PUNCT

C) tokens: Dalis gyventojų skundėsi , kad Vaidoto gatvėje išsitėsę remontas .
tags: NOUN X NOUN VERB PUNCT SCONJ PROPN NOUN VERB PUNCT
tagged_tokens: Dalis_NOUN gyventojų_NOUN skundėsi_VERB ,_PUNCT kad_SCONJ Vaidoto_PROPN gatvėje_NOUN išsitėsę_VERB remontas_NOUN ._PUNCTD) tokens: Kai kurie gyventojai skundėsi , kad Vaidoto gatvėje užtruko nuo vasaros trunkantys remonto darbai .
tags: PRON X NOUN VERB PUNCT SCONJ PROPN NOUN VERB ADP NOUN VERB NOUN NOUN PUNCT
tagged_tokens: Kai_PRON kurie_X gyventojai_NOUN skundėsi_VERB ,_PUNCT kad_SCONJ Vaidoto_PROPN gatvėje_NOUN užtruko_VERB nuo_ADP vasaros_NOUN trunkantys_VERB remonto_NOUN darbai_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Ekipą .
tags: NOUN PUNCT
tagged_tokens: Ekipą_NOUN ._PUNCT

B) tokens: Grupė .
tags: NOUN PUNCT
tagged_tokens: Grupė_NOUN ._PUNCT

C) tokens: Komanda .
tags: NOUN PUNCT
tagged_tokens: Komanda_NOUN ._PUNCTD) tokens: Komanda .
tags: NOUN PUNCT
tagged_tokens: Komanda_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Kauno m. vadovas Andrius Kupčinskas netrukus suburs būrį visuomeninių patarėjų .
tags: PROPN NOUN PROPN PROPN ADV VERB NOUN ADJ NOUN PUNCT
tagged_tokens: Kauno_PROPN m._NOUN vadovas_NOUN Andrius_PROPN Kupčinskas_PROPN netrukus_ADV suburs_VERB būri_NOUN visuomeninių_ADJ patarėjų_NOUN ._PUNCT

B) tokens: Kauno miesto galva Andrius Kupčinskas greitu laiku gaus būrį visuomenės konsultantų .
tags: PROPN NOUN PROPN PROPN ADV NOUN VERB NOUN ADJ NOUN PUNCT
tagged_tokens: Kauno_PROPN miesto_NOUN galva_NOUN Andrius_PROPN Kupčinskas_PROPN greitu_ADV laiku_NOUN gaus_VERB būri_NOUN visuomenės_ADJ konsultantų_NOUN ._PUNCT

C) tokens: Kauno meras Andrius Kupčinskas artimiausiu laiku suformuos būrį visuomeninių padėjėjų .
tags: PROPN NOUN PROPN PROPN ADV VERB NOUN ADJ NOUN PUNCT
tagged_tokens: Kauno_PROPN meras_NOUN Andrius_PROPN Kupčinskas_PROPN artimiausiu_ADV laiku_NOUN suformuos_VERB būri_NOUN visuomeninių_ADJ padėjėjų_NOUN ._PUNCTD) tokens: Kauno miesto meras Andrius Kupčinskas netrukus turės būrį visuomeninių patarėjų .
tags: PROPN NOUN NOUN PROPN PROPN ADV VERB NOUN ADJ NOUN PUNCT
tagged_tokens: Kauno_PROPN miesto_NOUN meras_NOUN Andrius_PROPN Kupčinskas_PROPN netrukus_ADV turės_VERB būrį_NOUN visuomeninių_ADJ patarėjų_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Urbanistikos klausimais merui patarimus teiks Lietuvos architektų sąjungos Kauno skyriaus vadovas Gintaras Balčžytis , verslo plėtros - Kauno pramonės , prekybos ir amatų rūmai prezidentas Mečislovas Rondomanskas bei Kauno krašto pramonininkų asociacijos prezidentas Algimantas Jankauskas , akademinės bendruomenės - Kauno technologijos universiteto senato pirmininkas Ramutis Bansevičius , Kauno medicinos universiteto senato pirmininkas Vilius Grabauskas , kultūros - Justinas Krėpšta .
tags: NOUN NOUN NOUN NOUN VERB PROPN NOUN NOUN PROPN NOUN NOUN PROPN PROPN PUNCT NOUN NOUN PUNCT PROPN NOUN , PUNCT verslo NOUN plėtros NOUN - PUNCT Kauno PROPN pramonės NOUN , PUNCT prekybos NOUN ir CCONJ amatų NOUN rūmai NOUN prezidentas NOUN Mečislovas PROPN Rondomanskas PROPN bei CCONJ Kauno PROPN krašto NOUN pramonininkų NOUN asociacijos NOUN prezidentas NOUN Algimantas PROPN Jankauskas PROPN , PUNCT akademinės ADJ bendruomenės NOUN - PUNCT Kauno PROPN technologijos NOUN universiteto NOUN senato NOUN pirmininkas NOUN Ramutis PROPN Bansevičius PROPN , PUNCT Kauno PROPN medicinos NOUN universiteto NOUN senato NOUN pirmininkas NOUN Vilius PROPN Grabauskas PROPN , PUNCT kultūros NOUN - PUNCT Justinas PROPN Krėpšta PROPN . PUNCT
tagged_tokens: Urbanistikos_NOUN klausimais_NOUN merui_NOUN patarimus_NOUN teiks_VERB Lietuvos_PROPN architektų_NOUN sąjungos_NOUN Kauno_PROPN skyriaus_NOUN vadovas_NOUN Gintaras_PROPN Balčžytis_PROPN ,_PUNCT verslo_NOUN plėtros_NOUN -_PUNCT Kauno_PROPN pramonės_NOUN ,_PUNCT prekybos_NOUN ir_CCONJ amatų_NOUN rūmai_NOUN prezidentas_NOUN Mečislovas_PROPN Rondomanskas_PROPN bei_CCONJ Kauno_PROPN krašto_NOUN pramonininkų_NOUN asociacijos_NOUN prezidentas_NOUN Algimantas_PROPN Jankauskas_PROPN ,_PUNCT akademinės_ADJ bendruomenės_NOUN -_PUNCT Kauno_PROPN technologijos_NOUN universiteto_NOUN senato_NOUN pirmininkas_NOUN Ramutis_PROPN Bansevičius_PROPN ,_PUNCT Kauno_PROPN medicinos_NOUN universiteto_NOUN senato_NOUN pirmininkas_NOUN Vilius_PROPN Grabauskas_PROPN ,_PUNCT kultūros_NOUN -_PUNCT Justinas_PROPN Krėpšta_PROPN ._PUNCT

B) tokens: Urbanistikos klausimais merui idėjas dalys Lietuvos architektų sąjungos Kauno skyriaus vedlys Gintaras Balčžytis , verslo plėtros - Kauno pramonės , prekybos ir amatų rūmai pirmininkas Mečislovas Rondomanskas bei Kauno krašto pramonininkų asociacijos prezidentas Algimantas Jankauskas , akademinės visuomenės - Kauno technologijos universiteto senato vadovas Ramutis Bansevičius , Kauno medicinos universiteto senato vadovas Vilius Grabauskas , kultūros - Justinas Krėpšta .
tags: NOUN NOUN NOUN NOUN VERB PROPN NOUN NOUN PROPN NOUN NOUN PROPN PROPN PUNCT NOUN NOUN PUNCT PROPN NOUN , PUNCT verslo NOUN plėtros NOUN - PUNCT Kauno PROPN pramonės NOUN , PUNCT prekybos NOUN ir CCONJ amatų NOUN rūmai NOUN pirmininkas NOUN Mečislovas PROPN Rondomanskas PROPN bei CCONJ Kauno PROPN krašto NOUN pramonininkų NOUN asociacijos NOUN prezidentas NOUN Algimantas PROPN Jankauskas PROPN , PUNCT akademinės ADJ visuomenės NOUN - PUNCT Kauno PROPN technologijos NOUN universiteto NOUN senato NOUN vadovas NOUN Ramutis PROPN Bansevičius PROPN , PUNCT Kauno PROPN medicinos NOUN universiteto NOUN senato NOUN vadovas NOUN Vilius PROPN Grabauskas PROPN , PUNCT kultūros NOUN - PUNCT Justinas PROPN Krėpšta PROPN . PUNCT
tagged_tokens: Urbanistikos_NOUN klausimais_NOUN merui_NOUN idėjas_NOUN dalys_VERB Lietuvos_PROPN architektų_NOUN sąjungos_NOUN Kauno_PROPN skyriaus_NOUN vedlys_NOUN Gintaras_PROPN Balčžytis_PROPN ,_PUNCT verslo_NOUN plėtros_NOUN -_PUNCT Kauno_PROPN pramonės_NOUN ,_PUNCT prekybos_NOUN ir_CCONJ amatų_NOUN rūmai_NOUN pirmininkas_NOUN Mečislovas_PROPN Rondomanskas_PROPN bei_CCONJ Kauno_PROPN krašto_NOUN pramonininkų_NOUN asociacijos_NOUN prezidentas_NOUN Algimantas_PROPN Jankauskas_PROPN ,_PUNCT akademinės_ADJ visuomenės_NOUN -_PUNCT Kauno_PROPN technologijos_NOUN universiteto_NOUN senato_NOUN vadovas_NOUN Ramutis_PROPN Bansevičius_PROPN ,_PUNCT Kauno_PROPN medicinos_NOUN universiteto_NOUN senato_NOUN vadovas_NOUN Vilius_PROPN Grabauskas_PROPN ,_PUNCT kultūros_NOUN -_PUNCT Justinas_PROPN Krėpšta_PROPN ._PUNCT

C) tokens: Miesto plėtros klausimais merui patarimus teiks Lietuvos architektų sąjungos Kauno skyriaus vadovas Gintaras Balčžytis , verslo plėtros - Kauno pramonės , prekybos ir amatų rūmai prezidentas Mečislovas Rondomanskas bei Kauno regiono pramonininkų asociacijos prezidentas Algimantas Jankauskas , akademinės visuomenės - Kauno technologijos universiteto senato pirmininkas Ramutis Bansevičius , Kauno medicinos universiteto senato pirmininkas Vilius Grabauskas , kultūros - Justinas Krėpšta .
tags: NOUN NOUN NOUN NOUN VERB PROPN NOUN NOUN PROPN NOUN NOUN PROPN PROPN PUNCT NOUN NOUN PUNCT PROPN NOUN , PUNCT verslo NOUN plėtros NOUN - PUNCT Kauno PROPN pramonės NOUN , PUNCT prekybos NOUN ir CCONJ amatų NOUN rūmai NOUN prezidentas NOUN Mečislovas PROPN Rondomanskas PROPN bei CCONJ Kauno PROPN regiono NOUN pramonininkų NOUN asociacijos NOUN prezidentas NOUN Algimantas PROPN Jankauskas PROPN , PUNCT akademinės ADJ visuomenės NOUN - PUNCT Kauno PROPN technologijos NOUN universiteto NOUN senato NOUN pirmininkas NOUN Ramutis PROPN Bansevičius PROPN , PUNCT Kauno PROPN medicinos NOUN universiteto NOUN senato NOUN pirmininkas NOUN Vilius PROPN Grabauskas PROPN , PUNCT kultūros NOUN - PUNCT Justinas PROPN Krėpšta PROPN . PUNCT
tagged_tokens: Miesto_NOUN plėtros_NOUN klausimais_NOUN merui_NOUN patarimus_NOUN teiks_VERB Lietuvos_PROPN architektų_NOUN sąjungos_NOUN Kauno_PROPN skyriaus_NOUN vadovas_NOUN Gintaras_PROPN Balčžytis_PROPN ,_PUNCT verslo_NOUN plėtros_NOUN -_PUNCT Kauno_PROPN pramonės_NOUN ,_PUNCT prekybos_NOUN ir_CCONJ amatų_NOUN rūmai_NOUN prezidentas_NOUN Mečislovas_PROPN Rondomanskas_PROPN bei_CCONJ Kauno_PROPN regiono_NOUN pramonininkų_NOUN asociacijos_NOUN prezidentas_NOUN Algimantas_PROPN Jankauskas_PROPN ,_PUNCT akademinės_ADJ visuomenės_NOUN -_PUNCT Kauno_PROPN technologijos_NOUN universiteto_NOUN senato_NOUN pirmininkas_NOUN Ramutis_PROPN Bansevičius_PROPN ,_PUNCT Kauno_PROPN medicinos_NOUN universiteto_NOUN senato_NOUN pirmininkas_NOUN Vilius_PROPN Grabauskas_PROPN ,_PUNCT kultūros_NOUN -_PUNCT Justinas_PROPN Krėpšta_PROPN ._PUNCTD) tokens: Urbanistikos klausimais merui patarimus dalys Lietuvos architektų sąjungos Kauno skyriaus vadovas Gintaras Balčytis , verslo plėtros - Kauno pramonės , prekybos ir amatų rūmų prezidentas Mečislovas Rondomanskas bei Kauno krašto pramonininkų asociacijos prezidentas Algimantas Jankauskas , akademinės bendruomenės - Kauno technologijos universiteto senato pirmininkas Ramutis Bansevičius , Kauno medicinos universiteto senato pirmininkas Vilius Grabauskas , kultūros - Justinas Krėpšta .
tags: NOUN NOUN NOUN NOUN VERB PROPN NOUN NOUN PROPN NOUN NOUN PROPN PROPN PUNCT NOUN NOUN PUNCT PROPN NOUN PUNCT NOUN CCONJ NOUN NOUN NOUN PROPN PROPN CCONJ PROPN NOUN NOUN NOUN NOUN PROPN PROPN PUNCT ADJ NOUN PUNCT PROPN NOUN NOUN NOUN NOUN PROPN PROPN PUNCT PROPN NOUN NOUN NOUN NOUN PROPN PROPN PUNCT NOUN PUNCT PROPN PROPN PUNCT
tagged_tokens: Urbanistikos_NOUN klausimais_NOUN merui_NOUN patarimus_NOUN dalys_VERB Lietuvos_PROPN architektų_NOUN sąjungos_NOUN Kauno_PROPN skyriaus_NOUN vadovas_NOUN Gintaras_PROPN Balčytis_PROPN ,_PUNCT verslo_NOUN plėtros_NOUN -_PUNCT Kauno_PROPN pramonės_NOUN ,_PUNCT prekybos_NOUN ir_CCONJ amatų_NOUN rūmų_NOUN prezidentas_NOUN Mečislovas_PROPN Rondomanskas_PROPN bei_CCONJ Kauno_PROPN krašto_NOUN pramonininkų_NOUN asociacijos_NOUN prezidentas_NOUN Algimantas_PROPN Jankauskas_PROPN ,_PUNCT akademinės_ADJ bendruomenės_NOUN -_PUNCT Kauno_PROPN technologijos_NOUN universiteto_NOUN senato_NOUN pirmininkas_NOUN Ramutis_PROPN Bansevičius_PROPN ,_PUNCT Kauno_PROPN medicinos_NOUN universiteto_NOUN senato_NOUN pirmininkas_NOUN Vilius_PROPN Grabauskas_PROPN ,_PUNCT kultūros_NOUN -_PUNCT Justinas_PROPN Krėpšta_PROPN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Parodė. Pristatę.
tags: VERB PUNCT VERB PUNCT
tagged_tokens: Parodė_VERB . PUNCT Pristatę_VERB . PUNCT

B) tokens: Apibūdino. Pristatę.
tags: VERB PUNCT VERB PUNCT
tagged_tokens: Apibūdino_VERB . PUNCT Pristatę_VERB . PUNCT

C) tokens: Pateikė. Pristatę.
tags: VERB PUNCT VERB PUNCT
tagged_tokens: Pateikė_VERB . PUNCT Pristatę_VERB . PUNCTD) tokens: Pristatė .
tags: VERB PUNCT
tagged_tokens: Pristatė_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Kauno miesto galva Andrius Kupčinskas tikino , kad krašto valdži parodyta , jog Kaune vyksta apibrėžti darbai .
tags: PROPN NOUN NOUN PROPN PROPN VERB PUNCT SCONJ NOUN NOUN VERB PUNCT SCONJ PROPN VERB ADJ NOUN PUNCT
tagged_tokens: Kauno_PROPN miesto_NOUN galva_NOUN Andrius_PROPN Kupčinskas_PROPN tikino_VERB ,_PUNCT kad_SCONJ krašto_NOUN valdži_NOUN parodyta_VERB ,_PUNCT jog_SCONJ Kaune_PROPN vyksta_VERB apibrėžti_ADJ darbai_NOUN .

B) tokens: Kauno miesto meras Andrius Kupčinskas tvirtino , kad valstybės valdži įrodyta , jog Kaune vyksta konkrečės darbai .
tags: PROPN NOUN NOUN PROPN PROPN VERB PUNCT SCONJ NOUN NOUN VERB PUNCT SCONJ PROPN VERB ADJ NOUN PUNCT
tagged_tokens: Kauno_PROPN miesto_NOUN meras_NOUN Andrius_PROPN Kupčinskas_PROPN tvirtino_VERB ,_PUNCT kad_SCONJ valstybės_NOUN valdži_įrodyta_VERB ,_PUNCT jog_SCONJ Kaune_PROPN vyksta_VERB konkrečės_ADJ darbai_NOUN .

C) tokens: Kauno miesto vadovas Andrius Kupčinskas akcentavo , kad respublikos valdži parodyta , jog Kaune verda tikri darbai .
tags: PROPN NOUN NOUN PROPN PROPN VERB PUNCT SCONJ NOUN NOUN VERB PUNCT SCONJ PROPN VERB ADJ NOUN PUNCT
tagged_tokens: Kauno_PROPN miesto_NOUN vadovas_NOUN Andrius_PROPN Kupčinskas_PROPN akcentavo_VERB ,_PUNCT kad_SCONJ respublikos_NOUN valdži_NOUN parodyta_VERB ,_PUNCT jog_SCONJ Kaune_PROPN verda_VERB tikri_ADJ darbai_NOUN .D) tokens: Kauno miesto meras Andrius Kupčinskas tikino , kad šalies valdžiai parodyta , jog Kaune vyksta konkretūs darbai .
tags: PROPN NOUN NOUN PROPN PROPN VERB PUNCT SCONJ NOUN NOUN VERB PUNCT SCONJ PROPN VERB ADJ NOUN PUNCT
tagged_tokens: Kauno_PROPN miesto_NOUN meras_NOUN Andrius_PROPN Kupčinskas_PROPN tikino_VERB ,_PUNCT kad_SCONJ šalies_NOUN valdžiai_NOUN parodyta_VERB ,_PUNCT jog_SCONJ Kaune_PROPN vyksta_VERB konkretūs_ADJ darbai_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Miesto galva tikisi , kad valstybės biudžete skirta 40 milijonų litų parama neišnyks .
tags: NOUN NOUN VERB PUNCT SCONJ NOUN NOUN VERB NUM NUM NOUN NOUN VERB PUNCT
tagged_tokens: Miesto_NOUN galva_NOUN tikisi_VERB ,_PUNCT kad_SCONJ valstybės_NOUN biudžte_NOUN skirta_VERB 40_NUM milijonų_NUM litų_NOUN parama_NOUN neišnyks_VERB ._PUNCT

B) tokens: Miesto meras tikisi , kad valstybės biudžetas numatyta 40 milijonų litų parama nepradings .
tags: NOUN NOUN VERB PUNCT SCONJ NOUN NOUN VERB NUM NUM NOUN NOUN VERB PUNCT
tagged_tokens: Miesto_NOUN meras_NOUN tikisi_VERB ,_PUNCT kad_SCONJ valstybės_NOUN biudžetas_NOUN numatyta_VERB 40_NUM milijonų_NUM litų_NOUN parama_NOUN nepradings_VERB ._PUNCT

C) tokens: Miesto viršininkas tikisi , kad valstybės kišenė numatyta 40 milijonų litų parama neišnyks .
tags: NOUN NOUN VERB PUNCT SCONJ NOUN NOUN VERB NUM NUM NOUN NOUN VERB PUNCT
tagged_tokens: Miesto_NOUN viršininkas_NOUN tikisi_VERB ,_PUNCT kad_SCONJ valstybės_NOUN kišenė_NOUN numatyta_VERB 40_NUM milijonų_NUM litų_NOUN parama_NOUN neišnyks_VERB ._PUNCTD) tokens: Miesto vadovas tikisi , kad valstybės biudžete numatyta 40 milijonų litų parama nepradings .
tags: NOUN NOUN VERB PUNCT SCONJ NOUN NOUN VERB NUM NUM NOUN NOUN VERB PUNCT
tagged_tokens: Miesto_NOUN vadovas_NOUN tikisi_VERB ,_PUNCT kad_SCONJ valstybės_NOUN biudžete_NOUN numatyta_VERB 40_NUM milijonų_NUM litų_NOUN parama_NOUN nepradings_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Siūlymas.
tags: NOUN PUNCT
tagged_tokens: Siūlymas_NOUN ._PUNCT

B) tokens: Pasiūžymas.
tags: NOUN PUNCT
tagged_tokens: Pasiūžymas_NOUN ._PUNCT

C) tokens: Rinkinys.
tags: NOUN PUNCT
tagged_tokens: Rinkinys_NOUN ._PUNCTD) tokens: Pasiūlymas .
tags: NOUN PUNCT
tagged_tokens: Pasiūlymas_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Kauno savivaldybės administracija rekomenduoja efektyviau panaudoti patalpas, kurios skirtos bendrijai „Viltis“ .
tags: PROPN NOUN NOUN VERB ADV VERB NOUN PUNCT DET VERB NOUN PUNCT NOUN PUNCT PUNCT
tagged_tokens: Kauno_PROPN savivaldybės_NOUN administracija_NOUN rekomenduoja_VERB efektyviau_ADV panaudoti_VERB patalpas_NOUN ,_PUNCT kurios_DET skirtos_VERB bendrijai_NOUN „Viltis“_NOUN ._PUNCT

B) tokens: Kauno savivaldybės valdžia teigia, kad efektyviau bus galima naudoti patalpas, kurios priklauso bendrijai „Viltis“ .
tags: PROPN NOUN NOUN VERB ADV VERB AUX VERB VERB NOUN PUNCT DET VERB NOUN PUNCT NOUN PUNCT PUNCT
tagged_tokens: Kauno_PROPN savivaldybės_NOUN valdžia_NOUN teigia_VERB ,_PUNCT kad_CONJ efektyviau_ADV bus_AUX galima_VERB naudoti_VERB patalpas_NOUN ,_PUNCT kurios_DET priklauso_VERB bendrijai_NOUN „Viltis“_NOUN ._PUNCT

C) tokens: Kauno miesto savivaldybės valdininkai praneša, jog racionaliau panaudoti patalpas, priklausančias bendrijai „Viltis“, bus galima efektyviau .
tags: PROPN NOUN NOUN VERB PUNCT ADV VERB NOUN PUNCT DET VERB NOUN PUNCT NOUN PUNCT PUNCT
tagged_tokens: Kauno_PROPN miesto_NOUN savivaldybės_NOUN valdininkai_NOUN praneša_VERB ,_PUNCT jog_CONJ racionaliau_ADV panaudoti_VERB patalpas_NOUN ,_PUNCT priklausančias_VERB bendrijai_NOUN „Viltis“_NOUN ,_PUNCT bus_AUX galima_VERB efektyviau_ADV ._PUNCTD) tokens: Kauno savivaldybės administracija siūlo efektyviau panaudoti patalpas , kurios skirtos bendrijai „ Viltis “ .
tags: PROPN NOUN NOUN VERB ADV VERB NOUN PUNCT DET VERB NOUN PUNCT NOUN PUNCT PUNCT
tagged_tokens: Kauno_PROPN savivaldybės_NOUN administracija_NOUN siūlo_VERB efektyviau_ADV panaudoti_VERB patalpas_NOUN ,_PUNCT kurios_DET skirtos_VERB bendrijai_NOUN „_PUNCT Viltis_NOUN “_PUNCT ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Bendrija neišnaudoja visų jiems skirtų dviejų tūkstančių kvadratinių metrų ploto patalpų Partizanų gatvėje 34 .
tags: NOUN VERB DET PRON VERB NUM NUM ADJ NOUN NOUN NOUN NOUN NOUN NUM PUNCT
tagged_tokens: Bendrija_NOUN neišnaudoja_VERB visų_DET jiems_PRON skirtų_VERB dviejų_NUM tūkstančių_NUM kvadratinių_ADJ metrų_NOUN ploto_NOUN patalpų_NOUN Partizanų_NOUN gatvėje_NOUN 34_NUM PUNCT

B) tokens: Bendruomenė neišnaudoja visų jiems skirtų dviejų tūkstančių kvadratinių metrų ploto patalpų Partizanų gatvėje 34 .
tags: NOUN VERB DET PRON VERB NUM NUM ADJ NOUN NOUN NOUN NOUN NOUN NUM PUNCT
tagged_tokens: Bendruomenė_NOUN neišnaudoja_VERB visų_DET jiems_PRON skirtų_VERB dviejų_NUM tūkstančių_NUM kvadratinių_ADJ metrų_NOUN ploto_NOUN patalpų_NOUN Partizanų_NOUN gatvėje_NOUN 34_NUM PUNCT

C) tokens: Bendrija neišnaudoja visų joms skirtų dviejų tūkstančių kvadratinių metrų ploto patalpų Partizanų gatvėje 34 .
tags: NOUN VERB DET PRON VERB NUM NUM ADJ NOUN NOUN NOUN NOUN NOUN NUM PUNCT
tagged_tokens: Bendrija_NOUN neišnaudoja_VERB visų_DET joms_PRON skirtų_VERB dviejų_NUM tūkstančių_NUM kvadratinių_ADJ metrų_NOUN ploto_NOUN patalpų_NOUN Partizanų_NOUN gatvėje_NOUN 34_NUM PUNCTD) tokens: Bendrija nepanaudoja visų jiems skirtų dviejų tūkstančių kvadratinių metrų ploto patalpų Partizanų gatvėje 34 .
tags: NOUN VERB DET PRON VERB NUM NUM ADJ NOUN NOUN NOUN NOUN NOUN NUM PUNCT
tagged_tokens: Bendrija_NOUN nepanaudoja_VERB visų_DET jiems_PRON skirtų_VERB dviejų_NUM tūkstančių_NUM kvadratinių_ADJ metrų_NOUN ploto_NOUN patalpų_NOUN Partizanų_NOUN gatvėje_NOUN 34_NUM ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Čia kasdienai eina tik maždaug 13 vaikų.
tags: ADV ADV VERB PART ADP NUM NOUN PUNCT
tagged_tokens: Čia_ADV kasdienai_ADV eina_VERB tik_PART maždaug_ADP 13_NUM vaikų_NOUN ._PUNCT

B) tokens: Čia kaskartą lanko tik maždaug 13 vaikų.
tags: ADV ADV VERB PART ADP NUM NOUN PUNCT
tagged_tokens: Čia_ADV kaskartą_ADV lanko_VERB tik_PART maždaug_ADP 13_NUM vaikų_NOUN ._PUNCT

C) tokens: Čia kasdien lanko tik apie 13 palikuonių.
tags: ADV ADV VERB PART ADP NUM NOUN PUNCT
tagged_tokens: Čia_ADV kasdien_ADV lanko_VERB tik_PART apie_ADP 13_NUM palikuonių_NOUN ._PUNCTD) tokens: Čia kasdien lankosi tik apie 13 vaikų .
tags: ADV ADV VERB PART ADP NUM NOUN PUNCT
tagged_tokens: Čia_ADV kasdien_ADV lankosi_VERB tik_PART apie_ADP 13_NUM vaikų_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: “ Todėl didžią dalį jiems skirtų patalpų būtų galima skirti kitoms neįgaliesiems žes organizacijoms , pagyvenusių žmonių , vaikų iš rizikos grupės šeimų dienos centrams “ , - įsisavinė Socialinių reikalų departamento direktorius Gediminas Jankus .
tags: PUNCT ADV NOUN PRON VERB NOUN AUX VERB VERB PRON NOUN NOUN PUNCT ADJ NOUN PUNCT NOUN ADP NOUN NOUN NOUN NOUN NOUN PUNCT PUNCT PUNCT VERB ADJ NOUN NOUN NOUN PROPN PROPN PUNCT
tagged_tokens: “_PUNCT Todėl_ADV didžią_NOUN dalį_NOUN jiems_PRON skirtų_VERB patalpų_NOUN būtų_AUX galima_VERB skirti_VERB kitoms_PRON neįgaliesiems_NOUN žes_NOUN organizacijoms_NOUN ,_PUNCT pagyvenusių_ADJ žmonių_NOUN ,_PUNCT vaikų_NOUN iš_ADP rizikos_NOUN grupės_NOUN šeimų_NOUN dienos_NOUN centrams_NOUN “_PUNCT ,_PUNCT -_PUNCT įsisavinė_VERB Socialinių_ADJ reikalų_NOUN departamento_NOUN direktorius_NOUN Gediminas_PROPN Jankus_PROPN ._PUNCT

B) tokens: “ Taigi šalį dalį joms skirtų patalpų būtų leistina skirti kitoms neįgaliesiems žes organizacijoms , pagyvenusių žmonių , vaikų iš rizikos grupės šeimų dienos centrams “ , - įsitikinė Socialinių reikalų departamento vadovas Gediminas Jankus .
tags: PUNCT ADV NOUN PRON VERB NOUN AUX VERB VERB PRON NOUN NOUN PUNCT ADJ NOUN PUNCT NOUN ADP NOUN NOUN NOUN NOUN NOUN PUNCT PUNCT PUNCT VERB ADJ NOUN NOUN NOUN PROPN PROPN PUNCT
tagged_tokens: “_PUNCT Taigi_ADV šalį_NOUN dalį_NOUN joms_PRON skirtų_VERB patalpų_NOUN būtų_AUX leistina_VERB skirti_VERB kitoms_PRON neįgaliesiems_NOUN žes_NOUN organizacijoms_NOUN ,_PUNCT pagyvenusių_ADJ žmonių_NOUN ,_PUNCT vaikų_NOUN iš_ADP rizikos_NOUN grupės_NOUN šeimų_NOUN dienos_NOUN centrams_NOUN “_PUNCT ,_PUNCT -_PUNCT įsitikinė_VERB Socialinių_ADJ reikalų_NOUN departamento_NOUN vadovas_NOUN Gediminas_PROPN Jankus_PROPN ._PUNCT

C) tokens: “ Dėl to dalį iš joms numatytų patalpų galėtume skirti kitoms neįgaliesiems žes organizacijoms , senyvo amžiaus žmonių , rizikos grupės vaikų šeimų dienos centrams “ , - tvirtina Socialinių reikalų departamento vadovas Gediminas Jankus .
tags: PUNCT ADV CCONJ NOUN PRON VERB NOUN AUX VERB VERB PRON NOUN NOUN PUNCT ADJ NOUN PUNCT NOUN NOUN NOUN NOUN NOUN NOUN PUNCT PUNCT PUNCT VERB ADJ NOUN NOUN NOUN PROPN PROPN PUNCT
tagged_tokens: “_PUNCT Dėl_ADV to_CCONJ dalį_NOUN iš_PRON joms_PRON numatytų_VERB patalpų_NOUN galėtume_AUX skirti_VERB kitoms_PRON neįgaliesiems_NOUN žes_NOUN organizacijoms_NOUN ,_PUNCT senyvo_ADJ amžiaus_NOUN žmonių_NOUN ,_PUNCT rizikos_NOUN grupės_NOUN vaikų_NOUN šeimų_NOUN dienos_NOUN centrams_NOUN “_PUNCT ,_PUNCT -_PUNCT tvirtina_VERB Socialinių_ADJ reikalų_NOUN departamento_NOUN vadovas_NOUN Gediminas_PROPN Jankus_PROPN ._PUNCTD) tokens: „ Todėl dalį jiems skirtų patalpų būtų galima skirti kitoms neįgaliųjų organizacijoms , pagyvenusių žmonių , vaikų iš rizikos grupės šeimų dienos centrams “ , - įsitikinęs Socialinių reikalų departamento direktorius Gediminas Jankus .
tags: PUNCT ADV NOUN PRON VERB NOUN AUX VERB VERB PRON NOUN NOUN PUNCT ADJ NOUN PUNCT NOUN ADP NOUN NOUN NOUN NOUN NOUN PUNCT PUNCT PUNCT VERB ADJ NOUN NOUN NOUN PROPN PROPN PUNCT
tagged_tokens: „_PUNCT Todėl_ADV dalį_NOUN jiems_PRON skirtų_VERB patalpų_NOUN būtų_AUX galima_VERB skirti_VERB kitoms_PRON neįgaliųjų_NOUN organizacijoms_NOUN ,_PUNCT pagyvenusių_ADJ žmonių_NOUN ,_PUNCT vaikų_NOUN iš_ADP rizikos_NOUN grupės_NOUN šeimų_NOUN dienos_NOUN centrams_NOUN “_PUNCT ,_PUNCT -_PUNCT įsitikinęs_VERB Socialinių_ADJ reikalų_NOUN departamento_NOUN direktorius_NOUN Gediminas_PROPN Jankus_PROPN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Šiąnakt užsnūdau ir sapnavau , jog Kauno dainių dainiaus Petro Palilionio rinktinei išspausdinti Europos Bendrijos fondai skyrė dešimt milijardų litų .
tags: ADV VERB CCONJ VERB PUNCT SCONJ PROPN NOUN NOUN PROPN PROPN NOUN VERB PROPN NOUN NOUN VERB NUM NUM NOUN PUNCT
tagged_tokens: Šiąnakt_ADV užnūsnau_VERB ir_CCONJ sapnavau_VERB ,_PUNCT jog_SCONJ Kauno_PROPN dainiū_NOUN dainiaus_NOUN Petro_PROPN Palilionio_PROPN rinktinei_NOUN išspausdinti_VERB Europos_PROPN Bendrijos_NOUN fondai_NOUN skyrė_VERB dešimt_NUM milijardų_NUM litų_NOUN ._PUNCT

B) tokens: Šiąnakt užmigau ir regėjau , jog Kauno bardų bardo Petro Palilionio rinktinei paleisti Europos Bendrijos lėšos skyrė dešimt milijardų litų .
tags: ADV VERB CCONJ VERB PUNCT SCONJ PROPN NOUN NOUN PROPN PROPN NOUN VERB PROPN NOUN NOUN VERB NUM NUM NOUN PUNCT
tagged_tokens: Šiąnakt_ADV užmigau_VERB ir_CCONJ regėjau_VERB ,_PUNCT jog_SCONJ Kauno_PROPN bardų_NOUN bardo_NOUN Petro_PROPN Palilionio_PROPN rinktinei_NOUN paleisti_VERB Europos_PROPN Bendrijos_NOUN lėšos_NOUN skyrė_VERB dešimt_NUM milijardų_NUM litų_NOUN ._PUNCT

C) tokens: Ankstė naktį numigau ir sapnavau , jog Kauno raūytojų raūytojo Petro Palilionio poezijos knygai spausdinti Europos Sąjungos pinigai skyrė dešimt milijardų litų .
tags: ADV NOUN VERB CCONJ VERB PUNCT SCONJ PROPN NOUN NOUN PROPN PROPN NOUN VERB PROPN NOUN NOUN VERB NUM NUM NOUN PUNCT
tagged_tokens: Ankstė_ADV naktį_NOUN numigau_VERB ir_CCONJ sapnavau_VERB ,_PUNCT jog_SCONJ Kauno_PROPN raūytojų_NOUN raūytojo_NOUN Petro_PROPN Palilionio_PROPN poezijos_NOUN knygai_NOUN spausdinti_VERB Europos_PROPN Sąjungos_NOUN pinigai_NOUN skyrė_VERB dešimt_NUM milijardų_NUM litų_NOUN ._PUNCTD) tokens: Šiąnakt užmigau ir susapnavau , jog Kauno poetų poeto Petro Palilionio rinktinei išleisti Europos Sąjungos fondai skyrė dešimt milijardų litų .
tags: ADV VERB CCONJ VERB PUNCT SCONJ PROPN NOUN NOUN PROPN PROPN NOUN VERB PROPN NOUN NOUN VERB NUM NUM NOUN PUNCT
tagged_tokens: Šiąnakt_ADV užmigau_VERB ir_CCONJ susapnavau_VERB ,_PUNCT jog_SCONJ Kauno_PROPN poetų_NOUN poeto_NOUN Petro_PROPN Palilionio_PROPN rinktinei_NOUN išleisti_VERB Europos_PROPN Sąjungos_NOUN fondai_NOUN skyrė_VERB dešimt_NUM milijardų_NUM litų_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Pabudęs ilgą laiką galvojau , kokio grožio tai turėtų būti raštas ir iš kokios nepramušamos medžiagos bus jo viršelis .
tags: VERB ADV VERB PUNCT DET NOUN DET VERB AUX NOUN CCONJ ADP DET VERB NOUN VERB PRON NOUN PUNCT
tagged_tokens: Pabudęs_VERB ilgą_ADV laiką_NOUN galvojau_VERB ,_PUNCT kokio_DET grožio_NOUN tai_DET turėtų_VERB būti_AUX raštas_NOUN ir_CCONJ iš_ADP kokios_DET nepramušamos_VERB medžiagos_NOUN bus_VERB jo_PRON viršelis_NOUN ._PUNCT

B) tokens: Atsibudęs ilgą laiką mąsčiau , kokio gražumo ta turėtų būti knyga ir iš kokios neįveikiamos medžiagos bus jos viršelio puslapis .
tags: VERB ADV VERB PUNCT DET NOUN DET VERB AUX NOUN CCONJ ADP DET VERB NOUN VERB PRON NOUN PUNCT
tagged_tokens: Atsibudęs_VERB ilgą_ADV laiką_NOUN mąsčiau_VERB ,_PUNCT kokio_DET gražumo_NOUN ta_DET turėtų_VERB būti_AUX knyga_NOUN ir_CCONJ iš_ADP kokios_DET neįveikiamos_VERB medžiagos_NOUN bus_VERB jos_PRON viršelio_NOUN puslapis_NOUN ._PUNCT

C) tokens: Prabudusi ilgai svarsčiau , kokio grožio tai turėtų būti traktatas ir iš kokios neprasiskverbiančios medžiagos bus jo užvalkalas .
tags: VERB ADV VERB PUNCT DET NOUN DET VERB AUX NOUN CCONJ ADP DET VERB NOUN VERB PRON NOUN PUNCT
tagged_tokens: Prabudusi_VERB ilgai_ADV svarsčiau_VERB ,_PUNCT kokio_DET grožio_NOUN tai_DET turėtų_VERB būti_AUX traktatas_NOUN ir_CCONJ iš_ADP kokios_DET neprasiskverbiančios_VERB medžiagos_NOUN bus_VERB jo_PRON užvalkalas_NOUN ._PUNCTD) tokens: Nubudęs ilgai mąsčiau , kokio gražumo tai turėtų būti knyga ir iš kokios neperšaunamos medžiagos bus jos viršelis .
tags: VERB ADV VERB PUNCT DET NOUN DET VERB AUX NOUN CCONJ ADP DET VERB NOUN VERB PRON NOUN PUNCT
tagged_tokens: Nubudęs_VERB ilgai_ADV mąsčiau_VERB ,_PUNCT kokio_DET gražumo_NOUN tai_DET turėtų_VERB būti_AUX knyga_NOUN ir_CCONJ iš_ADP kokios_DET neperšaunamos_VERB medžiagos_NOUN bus_VERB jos_PRON viršelis_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Ir tiktai tuomet sapnas išsisklaidė, ir liko paprasta realybė.
tags: CCONJ PART ADV NOUN VERB PUNCT CCONJ VERB ADJ NOUN PUNCT
tagged_tokens: Ir_CCONJ tiktai_PART tuomet_ADV sapnas_NOUN išsisklaidė_VERB ,_PUNCT ir_CCONJ liko_VERB paprasta_ADJ realybė_NOUN ._PUNCT

B) tokens: Ir tik tada vizija išsisklaidė, ir liko vien tik realybė.
tags: CCONJ PART ADV NOUN VERB PUNCT CCONJ VERB PRON ADJ NOUN PUNCT
tagged_tokens: Ir_CCONJ tik_PART tada_ADV vizija_NOUN išsisklaidė_VERB ,_PUNCT ir_CCONJ liko_VERB vien_PRON tik_ADV realybė_NOUN ._PUNCT

C) tokens: Ir tiktai tuomet iliuzija išsisklaidė, ir liko vien tikrovė.
tags: CCONJ PART ADV NOUN VERB PUNCT CCONJ VERB PRON NOUN PUNCT
tagged_tokens: Ir_CCONJ tiktai_PART tuomet_ADV iliuzija_NOUN išsisklaidė_VERB ,_PUNCT ir_CCONJ liko_VERB vien_PRON tikrovė_NOUN ._PUNCTD) tokens: Ir tik tada sapnas išsisklaidė , ir liko banali realybė .
tags: CCONJ PART ADV NOUN VERB PUNCT CCONJ VERB ADJ NOUN PUNCT
tagged_tokens: Ir_CCONJ tik_PART tada_ADV sapnas_NOUN išsisklaidė_VERB ,_PUNCT ir_CCONJ liko_VERB banali_ADJ realybė_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Knyga juk energijos negamins, ją gamins naujoji elektrinė, dėl kurios jau pasigirdo verslo titanų skambesys.
tags: NOUN PART NOUN VERB PUNCT PRON VERB ADJ NOUN PUNCT ADP DET PART VERB NOUN NOUN NOUN NOUN PUNCT
tagged_tokens: Knyga_NOUN juk_PART energijos_NOUN negamins_VERB ,_PUNCT ją_PRON gamins_VERB naujoji_ADJ elektrinė_NOUN ,_PUNCT dėl_ADP kurios_DET jau_PART pasigirdo_VERB verslo_NOUN titanų_NOUN skambesys_NOUN ._PUNCT

B) tokens: Raštas juk elektros negamins, ją gamins naujoji elektrinė, dėl kurios jau pasigirdo verslo milžinų skambesys.
tags: NOUN PART NOUN VERB PUNCT PRON VERB ADJ NOUN PUNCT ADP DET PART VERB NOUN NOUN NOUN NOUN PUNCT
tagged_tokens: Raštas_NOUN juk_PART elektros_NOUN negamins_VERB ,_PUNCT ją_PRON gamins_VERB naujoji_ADJ elektrinė_NOUN ,_PUNCT dėl_ADP kurios_DET jau_PART pasigirdo_VERB verslo_NOUN milžinų_NOUN skambesys_NOUN ._PUNCT

C) tokens: Knygelė juk elektros negamins, ją gamins naujoji elektrinė, dėl kurios jau nuskambėjo verslo ryklių skambesys.
tags: NOUN PART NOUN VERB PUNCT PRON VERB ADJ NOUN PUNCT ADP DET PART VERB NOUN NOUN NOUN NOUN PUNCT
tagged_tokens: Knygelė_NOUN juk_PART elektros_NOUN negamins_VERB ,_PUNCT ją_PRON gamins_VERB naujoji_ADJ elektrinė_NOUN ,_PUNCT dėl_ADP kurios_DET jau_PART nuskambėjo_VERB verslo_NOUN ryklių_NOUN skambesys_NOUN ._PUNCTD) tokens: Knyga juk elektros negamins , ją gamins naujoji elektrinė , dėl kurios jau pasigirdo verslo didžiūnų ginklų skambesys .
tags: NOUN PART NOUN VERB PUNCT PRON VERB ADJ NOUN PUNCT ADP DET PART VERB NOUN NOUN NOUN NOUN PUNCT
tagged_tokens: Knyga_NOUN juk_PART elektros_NOUN negamins_VERB ,_PUNCT ją_PRON gamins_VERB naujoji_ADJ elektrinė_NOUN ,_PUNCT dėl_ADP kurios_DET jau_PART pasigirdo_VERB verslo_NOUN didžiūnų_NOUN ginklų_NOUN skambesys_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Abi ginčijasi pusės kuria nemažapą įtąmpą , tad jei prie šių kibirkšąuojančių pasisakymų būtų įmanoma prijungti laidus , elektra jais tekėtų jau dabar .
tags: PRON VERB NOUN VERB ADJ NOUN PUNCT CCONJ SCONJ ADP DET VERB NOUN AUX ADJ VERB NOUN PUNCT NOUN PRON VERB PART ADV PUNCT
tagged_tokens: Abi_PRON ginčijasi_VERB pusės_NOUN kuria_VERB nemažą_ADJ įtampą_NOUN ,_PUNCT tad_CCONJ jei_SCONJ prie_ADP šių_DET kibirkščiuojančių_VERB pasisakymų_NOUN būtų_AUX įmanoma_ADJ prijungti_VERB laidus_NOUN ,_PUNCT elektra_NOUN jais_PRON tekėtų_VERB jau_PART dabar_ADV .

B) tokens: Abipus besiginčiančios pusės generuoja nemažapą įtąmpą , todėl jei prie šitų kibirkšąuojančių pareiškimų būtų įmanoma prijungti laidus , elektros srovė jais tekėtų jau dabar .
tags: PRON VERB NOUN VERB ADJ NOUN PUNCT CCONJ SCONJ ADP DET VERB NOUN AUX ADJ VERB NOUN PUNCT NOUN AUX VERB PART ADV PUNCT
tagged_tokens: Abipus_PRON besiginčijančios_VERB pusės_NOUN generuoja_VERB nemažą_ADJ įtampą_NOUN ,_PUNCT todėl_CCONJ jei_SCONJ prie_ADP šitų_DET kibirkščiuojančių_VERB pareiškimų_NOUN būtų_AUX įmanoma_ADJ prijungti_VERB laidus_NOUN ,_PUNCT elektros_NOUN srovė_AUX tekėtų_VERB jau_PART dabar_ADV .

C) tokens: Abiejų besivaržiančių pusių kuria nemažapą įtąmpą , tad jei prie šitų sprogstančių pasisakymų būtų įmanoma prijungti laidus , elektros srovė per juos tekėtų jau dabar .
tags: DET VERB NOUN VERB ADJ NOUN PUNCT CCONJ SCONJ ADP DET VERB NOUN AUX ADJ VERB NOUN PUNCT NOUN AUX VERB PART ADV PUNCT
tagged_tokens: Abiejų_DET besivaržančių_VERB pusių_NOUN kuria_VERB nemažą_ADJ įtampą_NOUN ,_PUNCT tad_CCONJ jei_SCONJ prie_ADP šitų_DET sprogstančių_VERB pasisakymų_NOUN būtų_AUX įmanoma_ADJ prijungti_VERB laidus_NOUN ,_PUNCT elektros_NOUN srovė_AUX tekėtų_VERB jau_PART dabar_ADV .D) tokens: Abi besivaidijančios pusės kuria nemažą įtampą , tad jei prie šių kibirkščiuojančių pasisakymų būtų įmanoma prijungti laidus , elektra jais tekėtų jau dabar .
tags: PRON VERB NOUN VERB ADJ NOUN PUNCT CCONJ SCONJ ADP DET VERB NOUN AUX ADJ VERB NOUN PUNCT NOUN PRON VERB PART ADV PUNCT
tagged_tokens: Abi_PRON besivaidijančios_VERB pusės_NOUN kuria_VERB nemažą_ADJ įtampą_NOUN ,_PUNCT tad_CCONJ jei_SCONJ prie_ADP šių_DET kibirkščiuojančių_VERB pasisakymų_NOUN būtų_AUX įmanoma_ADJ prijungti_VERB laidus_NOUN ,_PUNCT elektra_NOUN jais_PRON tekėtų_VERB jau_PART dabar_ADV ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Kitaip tariant , vėl atsirado rusas .
tags: ADV X PUNCT ADV VERB NOUN PUNCT
tagged_tokens: Kitaip_ADV tariant_X ,_PUNCT vėl_ADV atsirado_VERB rusas_NOUN ._PUNCT

B) tokens: Kita vertus , iškilo rusas .
tags: ADV X PUNCT ADV VERB NOUN PUNCT
tagged_tokens: Kita_ADV vertus_X ,_PUNCT iškilo_VERB rusas_NOUN ._PUNCT

C) tokens: Kitaip tariant , pasirodė rusas .
tags: ADV X PUNCT ADV VERB NOUN PUNCT
tagged_tokens: Kitaip_ADV tariant_X ,_PUNCT pasirodė_VERB rusas_NOUN ._PUNCTD) tokens: Kita vertus , vėl atsirado rusas .
tags: ADV X PUNCT ADV VERB NOUN PUNCT
tagged_tokens: Kita_ADV vertus_X ,_PUNCT vėl_ADV atsirado_VERB rusas_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Rusas amžiniems Lietuvai darė ir darys.
tags: NOUN ADV PROPN VERB ADV CCONJ VERB PUNCT
tagged_tokens: Rusas_NOUN amžiniems_ADV Lietuvai_PROPN darė_VERB ir_CCONJ darys_VERB ._PUNCT

B) tokens: Rusas amžiniems Lietuvai kenkė ir kenks.
tags: NOUN ADV PROPN VERB CCONJ VERB PUNCT
tagged_tokens: Rusas_NOUN amžiniems_ADV Lietuvai_PROPN kenkė_VERB ir_CCONJ kenks_VERB ._PUNCT

C) tokens: Rusas amžiniems Lietuvai pakenkė ir pakenks.
tags: NOUN ADV PROPN VERB CCONJ VERB PUNCT
tagged_tokens: Rusas_NOUN amžiniems_ADV Lietuvai_PROPN pakenkė_VERB ir_CCONJ pakenks_VERB ._PUNCTD) tokens: Rusas amžinai Lietuvai kenkė ir kenks .
tags: NOUN ADV PROPN VERB CCONJ VERB PUNCT
tagged_tokens: Rusas_NOUN amžinai_ADV Lietuvai_PROPN kenkė_VERB ir_CCONJ kenks_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: O privalėtų, nes būtent lietuviai tais metais tūsōjo Kremliuje ir dar nežią ką ten veikė.
tags: O_CCONJ privalėtė_VERB ,_PUNCT nes_SCONJ būtenti_PART lietuviai_NOUN tais_DET metais_NOUN tūsōjo_VERB Kremliuje_PROPN ir_CCONJ dar_PART nežią_ADV ką_PRON ten_ADV veikė_VERB .
tagged_tokens: O_CCONJ privalėtė_VERB ,_PUNCT nes_SCONJ būtenti_PART lietuviai_NOUN tais_DET metais_NOUN tūsōjo_VERB Kremliuje_PROPN ir_CCONJ dar_PART nežią_ADV ką_PRON ten_ADV veikė_VERB .

B) tokens: O turėtų, nes juk lietuviai tais metais posėdavo Kremliuje ir net nežią, ką ten krutėjo.
tags: O_CCONJ turėtų_VERB ,_PUNCT nes_SCONJ juk_PART lietuviai_NOUN tais_DET metais_NOUN posėdavo_VERB Kremliuje_PROPN ir_CCONJ net_PART nežią_ADV ,_PUNCT ką_PRON ten_ADV krutėjo_VERB .
tagged_tokens: O_CCONJ turėtų_VERB ,_PUNCT nes_SCONJ juk_PART lietuviai_NOUN tais_DET metais_NOUN posėdavo_VERB Kremliuje_PROPN ir_CCONJ net_PART nežią_ADV ,_PUNCT ką_PRON ten_ADV krutėjo_VERB .

C) tokens: O turėtų, nes lygiai šiemet lietuviai rezidavo Kremliuje ir apskritai neaišku ką ten įvykdė.
tags: O_CCONJ turėtų_VERB ,_PUNCT nes_SCONJ lygiai_PART šiemet_NOUN lietuviai_NOUN rezidavo_VERB Kremliuje_PROPN ir_CCONJ apskritai_PART neaišku_ADV ką_PRON ten_ADV įvykdė_VERB .
tagged_tokens: O_CCONJ turėtų_VERB ,_PUNCT nes_SCONJ lygiai_PART šiemet_NOUN lietuviai_NOUN rezidavo_VERB Kremliuje_PROPN ir_CCONJ apskritai_PART neaišku_ADV ką_PRON ten_ADV įvykdė_VERB .D) tokens: O turėtų , nes būtent lietuviai tais metais sėdėjo Kremliuje ir dar nežinia ką ten veikė .
tags: CCONJ VERB PUNCT SCONJ PART NOUN DET NOUN VERB PROPN CCONJ PART ADV PRON ADV VERB PUNCT
tagged_tokens: O_CCONJ turėtų_VERB ,_PUNCT nes_SCONJ būtent_PART lietuviai_NOUN tais_DET metais_NOUN sėdėjo_VERB Kremliuje_PROPN ir_CCONJ dar_PART nežinia_ADV ką_PRON ten_ADV veikė_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Kremliuje jam ir vieta , nors kai kas gal mano , jog kurioj nors „ Norfoj “ .
tags: PROPN PRON CCONJ NOUN PUNCT SCONJ PRON X PART VERB PUNCT SCONJ DET X PUNCT PROPN PUNCT PUNCT
tagged_tokens: Kremliuje_PROPN jam_PRON ir_CCONJ vieta_NOUN ,_PUNCT nors_SCONJ kai_PRON kas_X gal_PART mano_VERB ,_PUNCT jog_SCONJ kurioj_DET nors_X „_PUNCT Norfoj_PROPN “_PUNCT ._PUNCT

B) tokens: Kremliuje jam ir vieta , nors kai kas galvoja , jog kurioj nors „ Iki “ .
tags: PROPN PRON CCONJ NOUN PUNCT SCONJ PRON X ADV PUNCT SCONJ DET X PUNCT PROPN PUNCT PUNCT
tagged_tokens: Kremliuje_PROPN jam_PRON ir_CCONJ vieta_NOUN ,_PUNCT nors_SCONJ kai_PRON kas_X galvoja_ADV ,_PUNCT jog_SCONJ kurioj_DET nors_X „_PUNCT Iki_PROPN “_PUNCT ._PUNCT

C) tokens: Kremliuje jam ir vieta , nors kai kas mano , jog kurioj nors „ Rimi “ .
tags: PROPN PRON CCONJ NOUN PUNCT SCONJ PRON X PART VERB PUNCT SCONJ DET X PUNCT PROPN PUNCT PUNCT
tagged_tokens: Kremliuje_PROPN jam_PRON ir_CCONJ vieta_NOUN ,_PUNCT nors_SCONJ kai_PRON kas_X gal_PART mano_VERB ,_PUNCT jog_SCONJ kurioj_DET nors_X „_PUNCT Rimi_PROPN “_PUNCT ._PUNCTD) tokens: Kremliuje jam ir vieta , nors kai kas gal mano , jog kurioj nors „ Maximoj “ .
tags: PROPN PRON CCONJ NOUN PUNCT SCONJ PRON X PART VERB PUNCT SCONJ DET X PUNCT PROPN PUNCT PUNCT
tagged_tokens: Kremliuje_PROPN jam_PRON ir_CCONJ vieta_NOUN ,_PUNCT nors_SCONJ kai_PRON kas_X gal_PART mano_VERB ,_PUNCT jog_SCONJ kurioj_DET nors_X „_PUNCT Maximoj_PROPN “_PUNCT ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Tiek pat , ponai susitars , kuris prie lovio pirmesnis , susapnuotoji P . Palilionio knyga taip ir nebus leidžiama , nors labai norėtume , o mes už elektrą ir toliau mokėsim vis daugiau , nes vis puošnesnę mūsų buitį ji nušvies .
tags: ADV X PUNCT NOUN VERB PUNCT DET NOUN PART VERB PUNCT DET ADP NOUN ADJ PUNCT VERB X PUNCT PROPN NOUN ADV PART VERB VERB PUNCT SCONJ ADV VERB PUNCT CCONJ PRON ADP NOUN PART ADV VERB PART ADV PUNCT SCONJ PART ADJ PRON NOUN PRON VERB PUNCT
tagged_tokens: Tiek_ADV pat_X ,_PUNCT ponai_NOUN susitars_VERB ,_PUNCT kuris_DET prie_ADP lovio_NOUN pirmesnis_ADJ ,_PUNCT susapnuotoji_VERB P_X ._PUNCT Palilionio_PROPN knyga_NOUN taip_ADV ir_PART nebus_VERB leidžiama_VERB ,_PUNCT nors_SCONJ labai_ADV norėtume_VERB ,_PUNCT o_CCONJ mes_PRON už_ADP elektrą_NOUN ir_PART toliau_ADV mokėsim_VERB vis_PART daugiau_ADV ,_PUNCT nes_SCONJ vis_PART puošnesnę_ADJ mūsų_PRON buitį_NOUN ji_PRON nušvies_VERB ._PUNCT

B) tokens: Tiek to , ponai išsiaiškins , kuris prie lovio pirmesnis , susapnuotoji P . Palilionio knyga taip ir nebus leidžiama , nors labai norėtume , o mes už elektrą ir toliau mokėsim vis daugiau , nes vis puošnesnė mūsų buitis ją nušvies .
tags: ADV X PUNCT NOUN VERB PUNCT DET ADP NOUN ADJ PUNCT VERB X PUNCT PROPN NOUN ADV PART VERB VERB PUNCT SCONJ ADV VERB PUNCT CCONJ PRON ADP NOUN PART ADV VERB PART ADV PUNCT SCONJ PART ADJ PRON NOUN PRON VERB PUNCT
tagged_tokens: Tiek_ADV to_X ,_PUNCT ponai_NOUN išsiaiškins_VERB ,_PUNCT kuris_DET prie_ADP lovio_NOUN pirmesnis_ADJ ,_PUNCT susapnuotoji_VERB P_X ._PUNCT Palilionio_PROPN knyga_NOUN taip_ADV ir_PART nebus_VERB leidžiama_VERB ,_PUNCT nors_SCONJ labai_ADV norėtume_VERB ,_PUNCT o_CCONJ mes_PRON už_ADP elektrą_NOUN ir_PART toliau_ADV mokėsim_VERB vis_PART daugiau_ADV ,_PUNCT nes_SCONJ vis_PART puošnesnė_ADJ mūsų_PRON buitis_NOUN ją_PRON nušvies_VERB ._PUNCT

C) tokens: Tiek to , ponai susitars , kuris prie girdyklos pirmesnis , susapnuotoji P . Palilionio knyga taip ir neišvys dienos šviesos , nors labai norėtųsi , o mes už elektrą ir toliau mokėsim vis daugiau , nes vis gražesnė mūsų buitis ji nušvies .
tags: ADV X PUNCT NOUN VERB PUNCT DET ADP NOUN ADJ PUNCT VERB X PUNCT PROPN NOUN ADV PART VERB VERB PUNCT SCONJ ADV VERB PUNCT CCONJ PRON ADP NOUN PART ADV VERB PART ADV PUNCT SCONJ PART ADJ PRON NOUN PRON VERB PUNCT
tagged_tokens: Tiek_ADV to_X ,_PUNCT ponai_NOUN susitars_VERB ,_PUNCT kuris_DET prie_ADP girdyklos_NOUN pirmesnis_ADJ ,_PUNCT susapnuotoji_VERB P_X ._PUNCT Palilionio_PROPN knyga_NOUN taip_ADV ir_PART neišvys_VERB dienos_NOUN šviesos_NOUN ,_PUNCT nors_SCONJ labai_ADV norėtume_VERB ,_PUNCT o_CCONJ mes_PRON už_ADP elektrą_NOUN ir_PART toliau_ADV mokėsim_VERB vis_PART daugiau_ADV ,_PUNCT nes_SCONJ vis_PART gražesnę_ADJ mūsų_PRON buitis_NOUN ji_PRON nušvies_VERB ._PUNCTD) tokens: Tiek to , didžiūnai išsiaiškins , kuris prie girdyklos pirmesnis , susapnuotoji P . Palilionio knyga taip ir nebus išleista , nors labai norėtųsi , o mes už elektrą ir toliau mokėsim vis daugiau , nes vis prašmatnesnę mūsų buitį ji apšvies .
tags: ADV X PUNCT NOUN VERB PUNCT DET ADP NOUN ADJ PUNCT VERB X PUNCT PROPN NOUN ADV PART VERB VERB PUNCT SCONJ ADV VERB PUNCT CCONJ PRON ADP NOUN PART ADV VERB PART ADV PUNCT SCONJ PART ADJ PRON NOUN PRON VERB PUNCT
tagged_tokens: Tiek_ADV to_X ,_PUNCT didžiūnai_NOUN išsiaiškins_VERB ,_PUNCT kuris_DET prie_ADP girdyklos_NOUN pirmesnis_ADJ ,_PUNCT susapnuotoji_VERB P_X ._PUNCT Palilionio_PROPN knyga_NOUN taip_ADV ir_PART nebus_VERB išleista_VERB ,_PUNCT nors_SCONJ labai_ADV norėtųsi_VERB ,_PUNCT o_CCONJ mes_PRON už_ADP elektrą_NOUN ir_PART toliau_ADV mokėsim_VERB vis_PART daugiau_ADV ,_PUNCT nes_SCONJ vis_PART prašmatnesnę_ADJ mūsų_PRON buitį_NOUN ji_PRON apšvies_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Yra ir sveikintinų dalykų.
tags: VERB PART VERB NOUN PUNCT
tagged_tokens: Yra_VERB ir_PART sveikintinų_VERB dalykų_NOUN ._PUNCT

B) tokens: Egzistuoja ir giriamo dalykų.
tags: VERB PART VERB NOUN PUNCT
tagged_tokens: Egzistuoja_VERB ir_PART giriamo_VERB dalykų_NOUN ._PUNCT

C) tokens: Esama ir sveikintinų dalykų.
tags: VERB PART VERB NOUN PUNCT
tagged_tokens: Esama_VERB ir_PART sveikintinų_VERB dalykų_NOUN ._PUNCTD) tokens: Yra ir sveikintinų dalykų .
tags: VERB PART VERB NOUN PUNCT
tagged_tokens: Yra_VERB ir_PART sveikintinų_VERB dalykų_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Net žinomas ankstesnių Kauno merų naikintojas A . Karalius buvo pakviestas .
tags: PART VERB ADJ PROPN NOUN NOUN X PUNCT PROPN AUX VERB PUNCT
tagged_tokens: Net_PART žinomas_VERB ankstesnių_ADJ Kauno_PROPN merų_NOUN naikintojas_NOUN A_X ._PUNCT Karalius_PROPN buvo_AUX pakviestas_VERB ._PUNCT

B) tokens: Netgi pagarsėjų ankstesnių Kauno merų planų priešininkas A . Karalius buvo pakviestas .
tags: PART VERB ADJ PROPN NOUN VERB X PUNCT PROPN AUX VERB PUNCT
tagged_tokens: Netgi_PART pagarsėjų_VERB ankstesnių_ADJ Kauno_PROPN merų_NOUN planų_NOUN priešininkas_VERB A_X ._PUNCT Karalius_PROPN buvo_AUX pakviestas_VERB ._PUNCT

C) tokens: Nepaisant to garsėjantis ankstesnių Kauno merų projektų šalininkas A . Karalius buvo kviečiamas .
tags: CONJ VERB ADJ PROPN NOUN NOUN X PUNCT PROPN AUX VERB PUNCT
tagged_tokens: Nepaisant_CONJ to_NOUN garsėjantis_VERB ankstesnių_ADJ Kauno_PROPN merų_NOUN projektų_NOUN šalininkas_NOUN A_X ._PUNCT Karalius_PROPN buvo_AUX kviečiamas_VERB ._PUNCTD) tokens: Net žinomas ankstesnių Kauno merų planų žlugdytojas A . Karalius buvo pakviestas .
tags: PART VERB ADJ PROPN NOUN NOUN NOUN X PUNCT PROPN AUX VERB PUNCT
tagged_tokens: Net_PART žinomas_VERB ankstesnių_ADJ Kauno_PROPN merų_NOUN planų_NOUN žlugdytojas_NOUN A_X ._PUNCT Karalius_PROPN buvo_AUX pakviestas_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Įvepia .
tags: VERB PUNCT
tagged_tokens: Įvepia_VERB ._PUNCT

B) tokens: Suteikia įkvėpimo .
tags: VERB PUNCT
tagged_tokens: Suteikia_ĮKVĖPIMO ._PUNCT

C) tokens: Paskatina .
tags: VERB PUNCT
tagged_tokens: Paskatina_VERB ._PUNCTD) tokens: Įkvepia .
tags: VERB PUNCT
tagged_tokens: Įkvepia_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Žavinga.
tags: VERB PUNCT
tagged_tokens: Žavinga_VERB ._PUNCT

B) tokens: Gražu.
tags: VERB PUNCT
tagged_tokens: Gražu_VERB ._PUNCT

C) tokens: Grobž.
tags: VERB PUNCT
tagged_tokens: Grobž_VERB ._PUNCTD) tokens: Žavi .
tags: VERB PUNCT
tagged_tokens: Žavi_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Guodžia .
tags: VERB PUNCT
tagged_tokens: Guodžia_VERB ._PUNCT

B) tokens: Paguodžia .
tags: VERB PUNCT
tagged_tokens: Paguodžia_VERB ._PUNCT

C) tokens: Paguoda .
tags: NOUN PUNCT
tagged_tokens: Paguoda_NOUN ._PUNCTD) tokens: Guodžia .
tags: VERB PUNCT
tagged_tokens: Guodžia_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Tačiau ankstesni merai irgi , atrodo , `` tardavosi '' su specialistais .
tags: CCONJ ADJ NOUN ADV PUNCT PART PUNCT PUNCT VERB PUNCT ADP NOUN PUNCT
tagged_tokens: Tačiau_CCONJ ankstesni_ADJ merai_NOUN irgi_ADV ,_PUNCT atrodo_PART ,_PUNCT ``_PUNCT tardavosi_VERB ''_PUNCT su_ADP specialistais_NOUN ._PUNCT

B) tokens: Vis dėlto buvę merai irgi , matyt , `` tardavosi '' su specialistais .
tags: CONJ NOUN PUNCT ADV PUNCT PART PUNCT PUNCT VERB PUNCT ADP NOUN PUNCT
tagged_tokens: Vis_CONJ dėlto_NOUN buvę_NOUN merai_NOUN irgi_ADV ,_PUNCT matyt_PART ,_PUNCT ``_PUNCT tardavosi_VERB ''_PUNCT su_ADP specialistais_NOUN ._PUNCT

C) tokens: Bet buvę merai irgi , regis , `` tardavosi '' su specialistais .
tags: CONJ NOUN PUNCT ADV PUNCT PART PUNCT PUNCT VERB PUNCT ADP NOUN PUNCT
tagged_tokens: Bet_CONJ buvę_NOUN merai_NOUN irgi_ADV ,_PUNCT regis_PART ,_PUNCT ``_PUNCT tardavosi_VERB ''_PUNCT su_ADP specialistais_NOUN ._PUNCTD) tokens: Tačiau ankstesni merai irgi , rodos , „ tardavosi “ su specialistais .
tags: CCONJ ADJ NOUN ADV PUNCT PART PUNCT PUNCT VERB PUNCT ADP NOUN PUNCT
tagged_tokens: Tačiau_CCONJ ankstesni_ADJ merai_NOUN irgi_ADV ,_PUNCT rodos_PART ,_PUNCT „_PUNCT tardavosi_VERB “_PUNCT su_ADP specialistais_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Tada vėliau buvo tas pats .
tags: ADV CCONJ ADV VERB SCONJ VERB PUNCT
tagged_tokens: Tada_ADV vėliau_ADV buvo_VERB tas_SCONJ pats_VERB ._PUNCT

B) tokens: Tuomet po to buvo taip pat .
tags: ADV CCONJ ADV VERB ADV VERB PUNCT
tagged_tokens: Tuomet_ADV po_ADV to_VERB buvo_VERB taip_ADV pat_VERB ._PUNCT

C) tokens: Po to tas pats pasikartodavo .
tags: SCONJ PRON VERB PUNCT
tagged_tokens: Po_SCONJ tas_PRON pats_VERB pasikartodavo_VERB ._PUNCTD) tokens: Tik po to būdavo kaip buvę .
tags: CCONJ ADV X VERB SCONJ VERB PUNCT
tagged_tokens: Tik_CCONJ po_ADV to_X būdavo_VERB kaip_SCONJ buvę_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Kauno_PROPN miestas_NOUN burmistras_NOUN Andrius_PROPN Kupčinskas_PROPN teigė_VERB ,_PUNCT jog_SCONJ šalies_NOUN vyriausybei_NOUN paaiškinta_VERB ,_PUNCT jog_SCONJ Kaune_PROPN tėra_VERB konkretūs_ADJ veikla_NOUN ._PUNCT
tags: PROPN NOUN NOUN PROPN PROPN VERB PUNCT SCONJ NOUN NOUN VERB PUNCT SCONJ PROPN VERB ADJ NOUN PUNCT
tagged_tokens: Kauno_PROPN miestas_NOUN burmistras_NOUN Andrius_PROPN Kupčinskas_PROPN teigė_VERB ,_PUNCT jog_SCONJ šalies_NOUN vyriausybei_NOUN paaiškinta_VERB ,_PUNCT jog_SCONJ Kaune_PROPN tėra_VERB konkretūs_ADJ veikla_NOUN ._PUNCT

B) tokens: Kauno_PROPN miestas_NOUN galva_NOUN Andrius_PROPN Kupčinskas_PROPN pabrėžė_VERB ,_PUNCT kad_SCONJ šalies_NOUN valdžiai_NOUN parodyta_VERB ,_PUNCT kad_SCONJ Kaune_PROPN vykdoma_VERB konkreti_ADJ darbą_NOUN ._PUNCT
tags: PROPN NOUN NOUN PROPN PROPN VERB PUNCT SCONJ NOUN NOUN VERB PUNCT SCONJ PROPN VERB ADJ NOUN PUNCT
tagged_tokens: Kauno_PROPN miestas_NOUN galva_NOUN Andrius_PROPN Kupčinskas_PROPN pabrėžė_VERB ,_PUNCT kad_SCONJ šalies_NOUN valdžiai_NOUN parodyta_VERB ,_PUNCT kad_SCONJ Kaune_PROPN vykdoma_VERB konkreti_ADJ darbą_NOUN ._PUNCT

C) tokens: Kauno_PROPN miestas_NOUN vadovas_NOUN Andrius_PROPN Kupčinskas_PROPN tikino_VERB ,_PUNCT jog_SCONJ valstybės_NOUN valdžiai_NOUN įrodyta_VERB ,_PUNCT kad_SCONJ Kaune_PROPN vykdomi_VERB konkretūs_ADJ darbai_NOUN ._PUNCT
tags: PROPN NOUN NOUN PROPN PROPN VERB PUNCT SCONJ NOUN NOUN VERB PUNCT SCONJ PROPN VERB ADJ NOUN PUNCT
tagged_tokens: Kauno_PROPN miestas_NOUN vadovas_NOUN Andrius_PROPN Kupčinskas_PROPN tikino_VERB ,_PUNCT jog_SCONJ valstybės_NOUN valdžiai_NOUN įrodyta_VERB ,_PUNCT kad_SCONJ Kaune_PROPN vykdomi_VERB konkretūs_ADJ darbai_NOUN ._PUNCTD) tokens: Kauno miesto meras Andrius Kupčinskas tikino , kad šalies valdžiai parodyta , jog Kaune vyksta konkretūs darbai .
tags: PROPN NOUN NOUN PROPN PROPN VERB PUNCT SCONJ NOUN NOUN VERB PUNCT SCONJ PROPN VERB ADJ NOUN PUNCT
tagged_tokens: Kauno_PROPN miesto_NOUN meras_NOUN Andrius_PROPN Kupčinskas_PROPN tikino_VERB ,_PUNCT kad_SCONJ šalies_NOUN valdžiai_NOUN parodyta_VERB ,_PUNCT jog_SCONJ Kaune_PROPN vyksta_VERB konkretūs_ADJ darbai_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Miesto valdytojas laukia , kad valstybės biudžete suprojektuota 40 milijonų litų parama neišnyks .
tags: NOUN NOUN VERB PUNCT SCONJ NOUN NOUN VERB NUM NUM NOUN NOUN VERB PUNCT
tagged_tokens: Miesto_NOUN valdytojas_NOUN laukia_VERB ,_PUNCT kad_SCONJ valstybės_NOUN biudžete_NOUN suprojektuota_VERB 40_NUM milijonų_NUM litų_NOUN parama_NOUN neišnyks_VERB ._PUNCT

B) tokens: Miesto burmistras mano , kad valstybės ižde suplanuota 40 milijonų litų dotacija nesibaigs .
tags: NOUN NOUN VERB PUNCT SCONJ NOUN NOUN VERB NUM NUM NOUN NOUN VERB PUNCT
tagged_tokens: Miesto_NOUN burmistras_NOUN mano_VERB ,_PUNCT kad_SCONJ valstybės_NOUN ižde_NOUN suplanuota_VERB 40_NUM milijonų_NUM litų_NOUN dotacija_NOUN nesibaigs_VERB ._PUNCT

C) tokens: Miesto meras tikisi , kad šalies biudžete suplanuota 40 milijonų litų parama nepasibaigs .
tags: NOUN NOUN VERB PUNCT SCONJ NOUN NOUN VERB NUM NUM NOUN NOUN VERB PUNCT
tagged_tokens: Miesto_NOUN meras_NOUN tikisi_VERB ,_PUNCT kad_SCONJ šalies_NOUN biudžete_NOUN suplanuota_VERB 40_NUM milijonų_NUM litų_NOUN parama_NOUN nepasibaigs_VERB ._PUNCTD) tokens: Miesto vadovas tikisi , kad valstybės biudžete numatyta 40 milijonų litų parama nepradings .
tags: NOUN NOUN VERB PUNCT SCONJ NOUN NOUN VERB NUM NUM NOUN NOUN VERB PUNCT
tagged_tokens: Miesto_NOUN vadovas_NOUN tikisi_VERB ,_PUNCT kad_SCONJ valstybės_NOUN biudžete_NOUN numatyta_VERB 40_NUM milijonų_NUM litų_NOUN parama_NOUN nepradings_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Skaičiuota, kad vien arenos statyba atsieis 153 milijonus litų, o į infrastruktūrą numatyta investuoti dar 63 milijonus litų.
tags: VERB PUNCT SCONJ PART NOUN NOUN VERB NUM NUM NOUN PUNCT CCONJ ADP NOUN AUX VERB PART NUM NUM NOUN PUNCT
tagged_tokens: Skaičiuota_VERB ,_PUNCT kad_SCONJ vien_PART arenos_NOUN statyba_NOUN atsieis_VERB 153_NUM milijonus_NUM litų_NOUN ,_PUNCT o_CCONJ į_ADP infrastruktūrą_NOUN numatyta_AUX investuoti_VERB dar_PART 63_NUM milijonus_NUM litų_NOUN ._PUNCT

B) tokens: Nustatyta, kad ta arenos statyba kainuos 153 milijonus eurų, o į infrastruktūrą planuojama įdėti dar 63 milijonus eurų.
tags: VERB PUNCT SCONJ PART NOUN NOUN VERB NUM NUM NOUN PUNCT CCONJ ADP NOUN AUX VERB PART NUM NUM NOUN PUNCT
tagged_tokens: Nustatyta_VERB ,_PUNCT kad_SCONJ ta_PART arenos_NOUN statyba_NOUN kainuos_VERB 153_NUM milijonus_NUM eurų_NOUN ,_PUNCT o_CCONJ į_ADP infrastruktūrą_NOUN planuojama_AUX įdėti_VERB dar_PART 63_NUM milijonus_NUM eurų_NOUN ._PUNCT

C) tokens: Išaiškinta, kad ši arenos konstrukcija atsieis 153 milijonus eurų, o į infrastruktūrą ketinama investuoti dar 63 milijonus eurų.
tags: VERB PUNCT SCONJ PART NOUN NOUN VERB NUM NUM NOUN PUNCT CCONJ ADP NOUN AUX VERB PART NUM NUM NOUN PUNCT
tagged_tokens: Išaiškinta_VERB ,_PUNCT kad_SCONJ ši_PART arenos_NOUN konstrukcija_NOUN atsieis_VERB 153_NUM milijonus_NUM eurų_NOUN ,_PUNCT o_CCONJ į_ADP infrastruktūrą_NOUN ketinama_AUX investuoti_VERB dar_PART 63_NUM milijonus_NUM eurų_NOUN ._PUNCTD) tokens: Paskaičiuota , kad vien arenos statyba kainuos 153 milijonus litų , o į infrastruktūrą bus investuoti dar 63 milijonai litų .
tags: VERB PUNCT SCONJ PART NOUN NOUN VERB NUM NUM NOUN PUNCT CCONJ ADP NOUN AUX VERB PART NUM NUM NOUN PUNCT
tagged_tokens: Paskaičiuota_VERB ,_PUNCT kad_SCONJ vien_PART arenos_NOUN statyba_NOUN kainuos_VERB 153_NUM milijonus_NUM litų_NOUN ,_PUNCT o_CCONJ į_ADP infrastruktūrą_NOUN bus_AUX investuoti_VERB dar_PART 63_NUM milijonai_NUM litų_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Idėja_NOUN . _PUNCT
tags: NOUN PUNCT
tagged_tokens: Idėja_NOUN ._PUNCT

B) tokens: Pasišlymas_NOUN . _PUNCT
tags: NOUN PUNCT
tagged_tokens: Pasišlymas_NOUN ._PUNCT

C) tokens: Siūlymas_NOUN . _PUNCT
tags: NOUN PUNCT
tagged_tokens: Siūlymas_NOUN ._PUNCTD) tokens: Pasiūlymas .
tags: NOUN PUNCT
tagged_tokens: Pasiūlymas_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Kauno_PROPN miesto_NOUN valdžios_NOUN ketina_VERB efektyviau_ADV pritaikyti_VERB patalpas_NOUN ,_PUNCT kurios_DET skirtos_VERB bendruomenei_NOUN „_PUNCT Viltis_NOUN “_PUNCT ._PUNCT
tags: PROPN NOUN NOUN VERB ADV VERB NOUN PUNCT DET VERB NOUN PUNCT NOUN PUNCT PUNCT
tagged_tokens: Kauno_PROPN miesto_NOUN valdžios_NOUN ketina_VERB efektyviau_ADV pritaikyti_VERB patalpas_NOUN ,_PUNCT kurios_DET skirtos_VERB bendruomenei_NOUN „_PUNCT Viltis_NOUN “_PUNCT ._PUNCT

B) tokens: Kauno_PROPN savivaldybės_NOUN tvarkymas_NOUN siūlo_VERB racionalesnės_ADV panaudojimas_NOUN patalpų_NOUN ,_PUNCT kurios_DET skirtos_VERB asociacijai_NOUN „_PUNCT Viltis_NOUN “_PUNCT ._PUNCT
tags: PROPN NOUN NOUN VERB ADV NOUN NOUN PUNCT DET VERB NOUN PUNCT NOUN PUNCT PUNCT
tagged_tokens: Kauno_PROPN savivaldybės_NOUN tvarkymas_NOUN siūlo_VERB racionalesnės_ADV panaudojimas_NOUN patalpų_NOUN ,_PUNCT kurios_DET skirtos_VERB asociacijai_NOUN „_PUNCT Viltis_NOUN “_PUNCT ._PUNCT

C) tokens: Kauno_PROPN rajono_NOUN valdyba_NOUN numato_VERB naudingiau_ADV panaudoti_VERB patalpas_NOUN ,_PUNCT kurios_DET numatytos_VERB draugijai_NOUN „_PUNCT Viltis_NOUN “_PUNCT ._PUNCT
tags: PROPN NOUN NOUN VERB ADV VERB NOUN PUNCT DET VERB NOUN PUNCT NOUN PUNCT PUNCT
tagged_tokens: Kauno_PROPN rajono_NOUN valdyba_NOUN numato_VERB naudingiau_ADV panaudoti_VERB patalpas_NOUN ,_PUNCT kurios_DET numatytos_VERB draugijai_NOUN „_PUNCT Viltis_NOUN “_PUNCT ._PUNCTD) tokens: Kauno savivaldybės administracija siūlo efektyviau panaudoti patalpas , kurios skirtos bendrijai „ Viltis “ .
tags: PROPN NOUN NOUN VERB ADV VERB NOUN PUNCT DET VERB NOUN PUNCT NOUN PUNCT PUNCT
tagged_tokens: Kauno_PROPN savivaldybės_NOUN administracija_NOUN siūlo_VERB efektyviau_ADV panaudoti_VERB patalpas_NOUN ,_PUNCT kurios_DET skirtos_VERB bendrijai_NOUN „_PUNCT Viltis_NOUN “_PUNCT ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Bendruomenė neišnaudoja visų jiems skirtų dviejų tūkstančių kvadratinių metrų dydžio patalpų Partizanų gatvėje 34 .
tags: NOUN VERB DET PRON VERB NUM NUM ADJ NOUN NOUN NOUN NOUN NOUN NUM PUNCT
tagged_tokens: Bendruomenė_NOUN neišnaudoja_VERB visų_DET jiems_PRON skirtų_VERB dviejų_NUM tūkstančių_NUM kvadratinių_ADJ metrų_NOUN dydžio_NOUN patalpų_NOUN Partizanų_NOUN gatvėje_NOUN 34_NUM ._PUNCT

B) tokens: Sąjunga nepanaudoja visų jiems skirtų dviejų tūkstančių kvadratinių metrų ploto patalpų Partizanų gatvėje 34 .
tags: NOUN VERB DET PRON VERB NUM NUM ADJ NOUN NOUN NOUN NOUN NOUN NUM PUNCT
tagged_tokens: Sąjunga_NOUN nepanaudoja_VERB visų_DET jiems_PRON skirtų_VERB dviejų_NUM tūkstančių_NUM kvadratinių_ADJ metrų_NOUN ploto_NOUN patalpų_NOUN Partizanų_NOUN gatvėje_NOUN 34_NUM ._PUNCT

C) tokens: Asociacija nepanaudoja visų jiems skirtų dviejų tūkstančių kvadratinių metrų ploto patalpų Partizanų gatvėje 34 .
tags: NOUN VERB DET PRON VERB NUM NUM ADJ NOUN NOUN NOUN NOUN NOUN NUM PUNCT
tagged_tokens: Asociacija_NOUN nepanaudoja_VERB visų_DET jiems_PRON skirtų_VERB dviejų_NUM tūkstančių_NUM kvadratinių_ADJ metrų_NOUN ploto_NOUN patalpų_NOUN Partizanų_NOUN gatvėje_NOUN 34_NUM ._PUNCTD) tokens: Bendrija nepanaudoja visų jiems skirtų dviejų tūkstančių kvadratinių metrų ploto patalpų Partizanų gatvėje 34 .
tags: NOUN VERB DET PRON VERB NUM NUM ADJ NOUN NOUN NOUN NOUN NOUN NUM PUNCT
tagged_tokens: Bendrija_NOUN nepanaudoja_VERB visų_DET jiems_PRON skirtų_VERB dviejų_NUM tūkstančių_NUM kvadratinių_ADJ metrų_NOUN ploto_NOUN patalpų_NOUN Partizanų_NOUN gatvėje_NOUN 34_NUM ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: „ Todėl dalį jiems skirtų patalpų būtų galima skirti kitoms neįgaliųjų organizacijoms , senyvo amžiaus žmonių , vaikų iš pavojaus grupės šeimų dienos centrams “ , - mano Socialinės paramos departamento vedėjas Gediminas Jankus .
tags: PUNCT ADV NOUN PRON VERB NOUN AUX VERB VERB PRON NOUN NOUN PUNCT ADJ NOUN PUNCT NOUN ADP NOUN NOUN NOUN NOUN NOUN PUNCT PUNCT PUNCT VERB NOUN ADJ NOUN NOUN NOUN PROPN PROPN PUNCT
tagged_tokens: „_PUNCT Todėl_ADV dalį_NOUN jiems_PRON skirtų_VERB patalpų_NOUN būtų_AUX galima_VERB skirti_VERB kitoms_PRON neįgaliųjų_NOUN organizacijoms_NOUN ,_PUNCT senyvo_ADJ amžiaus_NOUN žmonių_NOUN ,_PUNCT vaikų_NOUN iš_ADP pavojaus_NOUN grupės_NOUN šeimų_NOUN dienos_NOUN centrams_NOUN “_PUNCT ,_PUNCT -_PUNCT mano_VERB Socialinės_ADJ paramos_NOUN departamento_NOUN vedėjas_NOUN Gediminas_PROPN Jankus_PROPN ._PUNCT

B) tokens: „ Taigi dalį jiems skirtų patalpų būtų galima skirti kitoms negalios organizacijoms , pagyvenusių žmonių , vaikų iš nelaimės grupės šeimų globos centrams “ , - teigia Socialinės paramos departamento vadovas Gediminas Jankus .
tags: PUNCT CCONJ NOUN PRON VERB NOUN AUX VERB VERB PRON NOUN NOUN PUNCT ADJ NOUN PUNCT NOUN ADP NOUN NOUN NOUN NOUN NOUN PUNCT PUNCT PUNCT VERB VERB ADJ NOUN NOUN NOUN PROPN PROPN PUNCT
tagged_tokens: „_PUNCT Taigi_CCONJ dalį_NOUN jiems_PRON skirtų_VERB patalpų_NOUN būtų_AUX galima_VERB skirti_VERB kitoms_PRON negalios_NOUN organizacijoms_NOUN ,_PUNCT pagyvenusių_ADJ žmonių_NOUN ,_PUNCT vaikų_NOUN iš_ADP nelaimės_NOUN grupės_NOUN šeimų_NOUN globos_NOUN centrams_NOUN “_PUNCT ,_PUNCT -_PUNCT teigia_VERB Socialinės_ADJ paramos_NOUN departamento_NOUN vadovas_NOUN Gediminas_PROPN Jankus_PROPN ._PUNCT

C) tokens: „ Vadinasi dalį jiems skirtų patalpų būtų galima skirti kitoms neįgaliųjų institucijoms , pagyvenusių žmonių , vaikų iš keblios padėties šeimų dienos centrams “ , - tvirtina Socialinės rūpybos departamento viršininkas Gediminas Jankus .
tags: PUNCT CCONJ NOUN PRON VERB NOUN AUX VERB VERB PRON NOUN NOUN PUNCT ADJ NOUN PUNCT NOUN ADP NOUN NOUN NOUN NOUN NOUN PUNCT PUNCT PUNCT VERB ADJ NOUN NOUN NOUN PROPN PROPN PUNCT
tagged_tokens: „_PUNCT Vadinasi_CCONJ dalį_NOUN jiems_PRON skirtų_VERB patalpų_NOUN būtų_AUX galima_VERB skirti_VERB kitoms_PRON neįgaliųjų_NOUN institucijoms_NOUN ,_PUNCT pagyvenusių_ADJ žmonių_NOUN ,_PUNCT vaikų_NOUN iš_ADP keblios_NOUN padėties_NOUN šeimų_NOUN dienos_NOUN centrams_NOUN “_PUNCT ,_PUNCT -_PUNCT tvirtina_VERB Socialinės_ADJ rūpybos_NOUN departamento_NOUN viršininkas_NOUN Gediminas_PROPN Jankus_PROPN ._PUNCTD) tokens: „ Todėl dalį jiems skirtų patalpų būtų galima skirti kitoms neįgaliųjų organizacijoms , pagyvenusių žmonių , vaikų iš rizikos grupės šeimų dienos centrams “ , - įsitikinęs Socialinių reikalų departamento direktorius Gediminas Jankus .
tags: PUNCT ADV NOUN PRON VERB NOUN AUX VERB VERB PRON NOUN NOUN PUNCT ADJ NOUN PUNCT NOUN ADP NOUN NOUN NOUN NOUN NOUN PUNCT PUNCT PUNCT VERB ADJ NOUN NOUN NOUN PROPN PROPN PUNCT
tagged_tokens: „_PUNCT Todėl_ADV dalį_NOUN jiems_PRON skirtų_VERB patalpų_NOUN būtų_AUX galima_VERB skirti_VERB kitoms_PRON neįgaliųjų_NOUN organizacijoms_NOUN ,_PUNCT pagyvenusių_ADJ žmonių_NOUN ,_PUNCT vaikų_NOUN iš_ADP rizikos_NOUN grupės_NOUN šeimų_NOUN dienos_NOUN centrams_NOUN “_PUNCT ,_PUNCT -_PUNCT įsitikinęs_VERB Socialinių_ADJ reikalų_NOUN departamento_NOUN direktorius_NOUN Gediminas_PROPN Jankus_PROPN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Šiandįnakt žengiau ir susapnavau , jog Kauno poetų poetui Petrui Palilioniui leidiniui paruošti Europos Sajungos ištekliai suteikė dešimt milijardų litų .
tags: ADV VERB CCONJ VERB PUNCT SCONJ PROPN NOUN NOUN PROPN PROPN NOUN VERB PROPN NOUN NOUN VERB PROPN NOUN NOUN VERB NUM NUM NOUN PUNCT
tagged_tokens: Šiandįnakt_ADV žengiau_VERB ir_CCONJ susapnavau_VERB ,_PUNCT jog_SCONJ Kauno_PROPN poetų_NOUN poetui_NOUN Petrui_PROPN Palilioniui_PROPN leidiniui_NOUN paruošti_VERB Europos_PROPN Sajungos_NOUN ištekliai_NOUN suteikė_VERB dešimt_NUM milijardų_NUM litų_NOUN ._PUNCT

B) tokens: Šiandien nusimusiau ir sapnavau , kad Vilniaus poetų dainiaus Tado Daugirdo knygai parengti Europos Sąjungos resursai skyrė dešimt milijardų litų .
tags: ADV VERB CCONJ VERB PUNCT SCONJ PROPN NOUN NOUN PROPN PROPN NOUN VERB PROPN NOUN NOUN VERB PROPN NOUN NOUN VERB NUM NUM NOUN PUNCT
tagged_tokens: Šiandien_ADV nusimusiau_VERB ir_CCONJ sapnavau_VERB ,_PUNCT kad_SCONJ Vilniaus_PROPN poetų_NOUN dainiaus_NOUN Tado_PROPN Daugirdo_PROPN knygai_NOUN parengti_VERB Europos_PROPN Sąjungos_NOUN resursai_NOUN skyrė_VERB dešimt_NUM milijardų_NUM litų_NOUN ._PUNCT

C) tokens: Šiandien atsiguliau ir susapnavau , jog Kauno poetų meistro Petro Palilionio knygai sukurti Europos Sąjungos pinigai skyrė dešimt milijardų litų .
tags: ADV VERB CCONJ VERB PUNCT SCONJ PROPN NOUN NOUN PROPN PROPN NOUN VERB PROPN NOUN NOUN VERB PROPN NOUN NOUN VERB NUM NUM NOUN PUNCT
tagged_tokens: Šiandien_ADV atsiguliau_VERB ir_CCONJ susapnavau_VERB ,_PUNCT jog_SCONJ Kauno_PROPN poetų_NOUN meistro_NOUN Petro_PROPN Palilionio_PROPN knygai_NOUN sukurti_VERB Europos_PROPN Sąjungos_NOUN pinigai_NOUN skyrė_VERB dešimt_NUM milijardų_NUM litų_NOUN ._PUNCTD) tokens: Šiąnakt užmigau ir susapnavau , jog Kauno poetų poeto Petro Palilionio rinktinei išleisti Europos Sąjungos fondai skyrė dešimt milijardų litų .
tags: ADV VERB CCONJ VERB PUNCT SCONJ PROPN NOUN NOUN PROPN PROPN NOUN VERB PROPN NOUN NOUN VERB NUM NUM NOUN PUNCT
tagged_tokens: Šiąnakt_ADV užmigau_VERB ir_CCONJ susapnavau_VERB ,_PUNCT jog_SCONJ Kauno_PROPN poetų_NOUN poeto_NOUN Petro_PROPN Palilionio_PROPN rinktinei_NOUN išleisti_VERB Europos_PROPN Sąjungos_NOUN fondai_NOUN skyrė_VERB dešimt_NUM milijardų_NUM litų_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Pabudęs ilgai svarstau , kokio grožio tai turi būti knyga ir iš kokios nepalaužiamos medžiagos bus jos viršelis .
tags: VERB ADV VERB PUNCT DET NOUN DET VERB AUX NOUN CCONJ ADP DET VERB NOUN VERB PRON NOUN PUNCT
tagged_tokens: Pabudęs_VERB ilgai_ADV svarstau_VERB ,_PUNCT kokio_DET grožio_NOUN tai_DET turi_VERB būti_AUX knyga_NOUN ir_CCONJ iš_ADP kokios_DET nepalaužiamos_VERB medžiagos_NOUN bus_VERB jos_PRON viršelis_NOUN ._PUNCT

B) tokens: Atsibudęs ilgai galvoju , kokios didybės tai turi būti knyga ir iš kokios nesunaikinamos medžiagos bus jos viršelis .
tags: VERB ADV VERB PUNCT DET NOUN DET VERB AUX NOUN CCONJ ADP DET VERB NOUN VERB PRON NOUN PUNCT
tagged_tokens: Atsibudęs_VERB ilgai_ADV galvoju_VERB ,_PUNCT kokios_DET didybės_NOUN tai_DET turi_VERB būti_AUX knyga_NOUN ir_CCONJ iš_ADP kokios_DET nesunaikinamos_VERB medžiagos_NOUN bus_VERB jos_PRON viršelis_NOUN ._PUNCT

C) tokens: Išbudęs ilgai mąstau , kokios elegancijos tai turėtų būti knyga ir iš kokios nepažeidžiamos medžiagos bus jos viršelis .
tags: VERB ADV VERB PUNCT DET NOUN DET VERB AUX NOUN CCONJ ADP DET VERB NOUN VERB PRON NOUN PUNCT
tagged_tokens: Išbudęs_VERB ilgai_ADV mąstau_VERB ,_PUNCT kokios_DET elegancijos_NOUN tai_DET turėtų_VERB būti_AUX knyga_NOUN ir_CCONJ iš_ADP kokios_DET nepažeidžiamos_VERB medžiagos_NOUN bus_VERB jos_PRON viršelis_NOUN ._PUNCTD) tokens: Nubudęs ilgai mąsčiau , kokio gražumo tai turėtų būti knyga ir iš kokios neperšaunamos medžiagos bus jos viršelis .
tags: VERB ADV VERB PUNCT DET NOUN DET VERB AUX NOUN CCONJ ADP DET VERB NOUN VERB PRON NOUN PUNCT
tagged_tokens: Nubudęs_VERB ilgai_ADV mąsčiau_VERB ,_PUNCT kokio_DET gražumo_NOUN tai_DET turėtų_VERB būti_AUX knyga_NOUN ir_CCONJ iš_ADP kokios_DET neperšaunamos_VERB medžiagos_NOUN bus_VERB jos_PRON viršelis_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Beje, ir tik tada iliuzija išsisklaidė , ir liko įprastinė tikrovė .
tags: INTJ CCONJ PART ADV NOUN VERB PUNCT CCONJ VERB ADJ NOUN PUNCT
tagged_tokens: Beje,_INTJ ir_CCONJ tik_PART tada_ADV iliuzija_NOUN išsisklaidė_VERB ,_PUNCT ir_CCONJ liko_VERB įprastinė_ADJ tikrovė_NOUN ._PUNCT

B) tokens: Todėl ir tik tada regėjimas išsisklaidė , ir liko triviali realybe .
tags: ADV CCONJ PART ADV NOUN VERB PUNCT CCONJ VERB ADJ NOUN PUNCT
tagged_tokens: Todėl_ADV ir_CCONJ tik_PART tada_ADV regėjimas_NOUN išsisklaidė_VERB ,_PUNCT ir_CCONJ liko_VERB triviali_ADJ realybe_NOUN ._PUNCT

C) tokens: Galop ir tik tada haliucinacija išsisklaidė , ir liko kasdieniška realybė .
tags: ADV CCONJ PART ADV NOUN VERB PUNCT CCONJ VERB ADJ NOUN PUNCT
tagged_tokens: Galop_ADV ir_CCONJ tik_PART tada_ADV haliucinacija_NOUN išsisklaidė_VERB ,_PUNCT ir_CCONJ liko_VERB kasdieniška_ADJ realybė_NOUN ._PUNCTD) tokens: Ir tik tada sapnas išsisklaidė , ir liko banali realybė .
tags: CCONJ PART ADV NOUN VERB PUNCT CCONJ VERB ADJ NOUN PUNCT
tagged_tokens: Ir_CCONJ tik_PART tada_ADV sapnas_NOUN išsisklaidė_VERB ,_PUNCT ir_CCONJ liko_VERB banali_ADJ realybė_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Leidinys_NOUN juk_PART elektros_NOUN nesukurs_VERB ,_PUNCT jį_PRON gamins_VERB moderni_ADJ elektrinė_NOUN ,_PUNCT dėl_ADP kurios_DET jau_PART pasigirdo_VERB verslo_NOUN gigantų_NOUN ginklų_NOUN žvangesys_NOUN ._PUNCT
tags: NOUN PART NOUN VERB PUNCT PRON VERB ADJ NOUN PUNCT ADP DET PART VERB NOUN NOUN NOUN NOUN PUNCT
tagged_tokens: Leidinys_NOUN juk_PART elektros_NOUN nesukurs_VERB ,_PUNCT jį_PRON gamins_VERB moderni_ADJ elektrinė_NOUN ,_PUNCT dėl_ADP kurios_DET jau_PART pasigirdo_VERB verslo_NOUN gigantų_NOUN ginklų_NOUN žvangesys_NOUN ._PUNCT

B) tokens: Raštas_NOUN juk_PART elektros_NOUN negamins_VERB ,_PUNCT jį_PRON gamins_VERB nauja_ADJ elektrinė_NOUN ,_PUNCT dėl_ADP kurios_DET jau_PART pasigirdo_VERB verslo_NOUN didžiūnų_NOUN ginklų_NOUN gaudesys_NOUN ._PUNCT
tags: NOUN PART NOUN VERB PUNCT PRON VERB ADJ NOUN PUNCT ADP DET PART VERB NOUN NOUN NOUN NOUN PUNCT
tagged_tokens: Raštas_NOUN juk_PART elektros_NOUN negamins_VERB ,_PUNCT jį_PRON gamins_VERB nauja_ADJ elektrinė_NOUN ,_PUNCT dėl_ADP kurios_DET jau_PART pasigirdo_VERB verslo_NOUN didžiūnų_NOUN ginklų_NOUN gaudesys_NOUN ._PUNCT

C) tokens: Knyga_NOUN juk_PART elektros_NOUN nesukurs_VERB ,_PUNCT ją_PRON gamins_VERB naujoji_ADJ elektrinė_NOUN ,_PUNCT dėl_ADP kurios_DET jau_PART pasigirdo_VERB verslo_NOUN milžinų_NOUN ginklų_NOUN šauksmas_NOUN ._PUNCT
tags: NOUN PART NOUN VERB PUNCT PRON VERB ADJ NOUN PUNCT ADP DET PART VERB NOUN NOUN NOUN NOUN PUNCT
tagged_tokens: Knyga_NOUN juk_PART elektros_NOUN nesukurs_VERB ,_PUNCT ją_PRON gamins_VERB naujoji_ADJ elektrinė_NOUN ,_PUNCT dėl_ADP kurios_DET jau_PART pasigirdo_VERB verslo_NOUN milžinų_NOUN ginklų_NOUN šauksmas_NOUN ._PUNCTD) tokens: Knyga juk elektros negamins , ją gamins naujoji elektrinė , dėl kurios jau pasigirdo verslo didžiūnų ginklų skambesys .
tags: NOUN PART NOUN VERB PUNCT PRON VERB ADJ NOUN PUNCT ADP DET PART VERB NOUN NOUN NOUN NOUN PUNCT
tagged_tokens: Knyga_NOUN juk_PART elektros_NOUN negamins_VERB ,_PUNCT ją_PRON gamins_VERB naujoji_ADJ elektrinė_NOUN ,_PUNCT dėl_ADP kurios_DET jau_PART pasigirdo_VERB verslo_NOUN didžiūnų_NOUN ginklų_NOUN skambesys_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Visos ginčijančios šalys kuria didelę įtampą , tad jeigu prie šių žėrinčių teiginių būtų įmanoma sujungti laidus , srovė jais judėtų jau dabar .
tags: PRON VERB NOUN VERB DID NOUN PUNCT CCONJ SCONJ ADP DET VERB NOUN AUX ADJ VERB NOUN PUNCT NOUN PRON VERB PART ADV PUNCT
tagged_tokens: Visos_PRON ginčijančios_VERB šalys_NOUN kuria_VERB didelę_DID įtampą_NOUN ,_PUNCT tad_CCONJ jeigu_SCONJ prie_ADP šių_DET žėrinčių_VERB teiginių_NOUN būtų_AUX įmanoma_ADJ sujungti_VERB laidus_NOUN ,_PUNCT srovė_NOUN jais_PRON judėtų_VERB jau_PART dabar_ADV ._PUNCT

B) tokens: Visos ginčytis mėgstančios pusės sukuria nemenką įtampą , tad jei prie tų liepsnojančių pasisakymų būtų leidžiama prijungti laidus , elektra jais bėgtų jau dabar .
tags: PRON VERB NOUN VERB NOUN VERB NOUN PUNCT CCONJ SCONJ ADP DET VERB NOUN AUX ADJ VERB NOUN PUNCT NOUN PRON VERB PART ADV PUNCT
tagged_tokens: Visos_PRON ginčytis_VERB mėgstančios_NOUN pusės_NOUN sukuria_VERB nemenką_NOUN įtampą_NOUN ,_PUNCT tad_CCONJ jei_SCONJ prie_ADP tų_DET liepsnojančių_VERB pasisakymų_NOUN būtų_AUX leidžiama_ADJ prijungti_VERB laidus_NOUN ,_PUNCT elektra_NOUN jais_PRON bėgtų_VERB jau_PART dabar_ADV ._PUNCT

C) tokens: Abi besistumdančios šalys kuria didelę įtampą , tad jei prie šių raudonuojančių pasisakymų būtų leistina prijungti laidus , elektra jais tekėtų jau dabar .
tags: PRON VERB NOUN VERB DID NOUN PUNCT CCONJ SCONJ ADP DET VERB NOUN AUX ADJ VERB NOUN PUNCT NOUN PRON VERB PART ADV PUNCT
tagged_tokens: Abi_PRON besistumdančios_VERB šalys_NOUN kuria_VERB didelę_DID įtampą_NOUN ,_PUNCT tad_CCONJ jei_SCONJ prie_ADP šių_DET raudonuojančių_VERB pasisakymų_NOUN būtų_AUX leistina_ADJ prijungti_VERB laidus_NOUN ,_PUNCT elektra_NOUN jais_PRON tekėtų_VERB jau_PART dabar_ADV ._PUNCTD) tokens: Abi besivaidijančios pusės kuria nemažą įtampą , tad jei prie šių kibirkščiuojančių pasisakymų būtų įmanoma prijungti laidus , elektra jais tekėtų jau dabar .
tags: PRON VERB NOUN VERB ADJ NOUN PUNCT CCONJ SCONJ ADP DET VERB NOUN AUX ADJ VERB NOUN PUNCT NOUN PRON VERB PART ADV PUNCT
tagged_tokens: Abi_PRON besivaidijančios_VERB pusės_NOUN kuria_VERB nemažą_ADJ įtampą_NOUN ,_PUNCT tad_CCONJ jei_SCONJ prie_ADP šių_DET kibirkščiuojančių_VERB pasisakymų_NOUN būtų_AUX įmanoma_ADJ prijungti_VERB laidus_NOUN ,_PUNCT elektra_NOUN jais_PRON tekėtų_VERB jau_PART dabar_ADV ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Kita vertus , dar sykį atsirado ruskis .
tags: ADV X PUNCT ADV VERB NOUN PUNCT
tagged_tokens: Kita_ADV vertus_X ,_PUNCT dar sykį_ADV atsirado_VERB ruskis_NOUN ._PUNCT

B) tokens: Kita vertus , antrą kartą atsirado rusas .
tags: ADV X PUNCT ADV VERB NOUN PUNCT
tagged_tokens: Kita_ADV vertus_X ,_PUNCT antrą kartą_ADV atsirado_VERB rusas_NOUN ._PUNCT

C) tokens: Kita vertus , vėliau atsirado rusas .
tags: ADV X PUNCT ADV VERB NOUN PUNCT
tagged_tokens: Kita_ADV vertus_X ,_PUNCT vėliau_ADV atsirado_VERB rusas_NOUN ._PUNCTD) tokens: Kita vertus , vėl atsirado rusas .
tags: ADV X PUNCT ADV VERB NOUN PUNCT
tagged_tokens: Kita_ADV vertus_X ,_PUNCT vėl_ADV atsirado_VERB rusas_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Vyras_NOUN visada_ADV Lietuvai_PROPN kenkė_VERB ir_CCONJ kenks_VERB ._PUNCT
tags: NOUN ADV PROPN VERB CCONJ VERB PUNCT
tagged_tokens: Vyras_NOUN visada_ADV Lietuvai_PROPN kenkė_VERB ir_CCONJ kenks_VERB ._PUNCT

B) tokens: Žmogus_NOUN amžinai_ADV Lietuvai_PROPN darė_VERB ir_CCONJ darys_VERB žalos._NOUN
tags: NOUN ADV PROPN VERB CCONJ VERB NOUN
tagged_tokens: Žmogus_NOUN amžinai_ADV Lietuvai_PROPN darė_VERB ir_CCONJ darys_VERB žalos_NOUN ._PUNCT

C) tokens: Rusas_NOUN per amžius_ADV Lietuvai_PROPN gadino_VERB ir_CCONJ gadins_VERB ._PUNCT
tags: NOUN ADV PROPN VERB CCONJ VERB PUNCT
tagged_tokens: Rusas_NOUN per amžius_ADV Lietuvai_PROPN gadino_VERB ir_CCONJ gadins_VERB ._PUNCTD) tokens: Rusas amžinai Lietuvai kenkė ir kenks .
tags: NOUN ADV PROPN VERB CCONJ VERB PUNCT
tagged_tokens: Rusas_NOUN amžinai_ADV Lietuvai_PROPN kenkė_VERB ir_CCONJ kenks_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: O turėtų , nes būtent lietuviai tais metais įsitaisė Kremliuje ir dar nežinia ką ten veikė .
tags: CCONJ VERB PUNCT SCONJ PART NOUN DET NOUN VERB PROPN CCONJ PART ADV PRON ADV VERB PUNCT
tagged_tokens: O_CCONJ turėtų_VERB ,_PUNCT nes_SCONJ būtent_PART lietuviai_NOUN tais_DET metais_NOUN įsitaisė_VERB Kremliuje_PROPN ir_CCONJ dar_PART nežinia_ADV ką_PRON ten_ADV veikė_VERB ._PUNCT

B) tokens: O galėtų , nes konkrečiai lietuviai tais metais posėdžiavo Kremliuje ir dar nežinia ką ten darė .
tags: CCONJ VERB PUNCT SCONJ PART NOUN DET NOUN VERB PROPN CCONJ PART ADV PRON ADV VERB PUNCT
tagged_tokens: O_CCONJ galėtų_VERB ,_PUNCT nes_SCONJ konkrečiai_PART lietuviai_NOUN tais_DET metais_NOUN posėdžiavo_VERB Kremliuje_PROPN ir_CCONJ dar_PART nežinia_ADV ką_PRON ten_ADV darė_VERB ._PUNCT

C) tokens: O reikėtų , nes kaip tik lietuviai tais metais viešpatavo Kremliuje ir dar nežinia ką ten veikė .
tags: CCONJ VERB PUNCT SCONJ PART NOUN DET NOUN VERB PROPN CCONJ PART ADV PRON ADV VERB PUNCT
tagged_tokens: O_CCONJ reikėtų_VERB ,_PUNCT nes_SCONJ kaip_PART tik_ADV lietuviai_NOUN tais_DET metais_NOUN viešpatavo_VERB Kremliuje_PROPN ir_CCONJ dar_PART nežinia_ADV ką_PRON ten_ADV veikė_VERB ._PUNCTD) tokens: O turėtų , nes būtent lietuviai tais metais sėdėjo Kremliuje ir dar nežinia ką ten veikė .
tags: CCONJ VERB PUNCT SCONJ PART NOUN DET NOUN VERB PROPN CCONJ PART ADV PRON ADV VERB PUNCT
tagged_tokens: O_CCONJ turėtų_VERB ,_PUNCT nes_SCONJ būtent_PART lietuviai_NOUN tais_DET metais_NOUN sėdėjo_VERB Kremliuje_PROPN ir_CCONJ dar_PART nežinia_ADV ką_PRON ten_ADV veikė_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Jei esantys sėdėję lig šiol , tenai , maniau , bei pastatytų naujosios atominės elektrinės reaktorių .
tags: SCONJ VERB VERB ADV X , ADV PUNCT VERB , CCONJ AUX VERB ADJ ADJ NOUN NOUN PUNCT
tagged_tokens: Jei_SCONJ esantys_VERB sėdėję_VERB lig_ADV šiol_X ,_PUNCT tenai_ADV ,_PUNCT maniau_VERB ,_CCONJ bei_AUX pastatytų_VERB naujosios_ADJ atominės_ADJ elektrinės_NOUN reaktorių_NOUN .

B) tokens: Tuo atveju jeigu likę iki dabar , čia pat , manau , ir būtų pastatę naujosios atominės elektrinės reaktorių .
tags: SCONJ ADV VERB PREP ADV , PUNCT ADV PUNCT VERB PUNCT CCONJ AUX VERB ADJ ADJ NOUN NOUN PUNCT
tagged_tokens: Tuo_SCONJ atveju_ADV likę_VERB iki_PREP dabar_ADV ,_PUNCT čia_ADV pat_PUNCT ,_PUNCT manau_VERB ,_CCONJ ir_AUX būtų_VERB pastatę_VERB naujosios_ADJ atominės_ADJ elektrinės_NOUN reaktorių_NOUN .

C) tokens: Jeigu būtų tebesėdintys ligi šiolei , ten pat , manyčiau , ir būtų pastatę naujutės atominės elektrinės reaktorių .
tags: SCONJ AUX VERB VERB ADV ADV PUNCT ADV PUNCT VERB PUNCT CCONJ AUX VERB ADJ ADJ NOUN NOUN PUNCT
tagged_tokens: Jeigu_SCONJ būtų_AUX tebesėdintys_VERB ligi_ADV šiolei_ADV ,_PUNCT ten_ADV pat_PUNCT ,_PUNCT manyčiau_VERB ,_CCONJ ir_AUX būtų_VERB pastatę_VERB naujutės_ADJ atominės_ADJ elektrinės_NOUN reaktorių_NOUN .D) tokens: Jei būtų tebesėdėję ligi šiol , ten , manau , ir būtų pastatę naujosios atominės elektrinės reaktorių .
tags: SCONJ AUX VERB ADV X PUNCT ADV PUNCT VERB PUNCT CCONJ AUX VERB ADJ ADJ NOUN NOUN PUNCT
tagged_tokens: Jei_SCONJ būtų_AUX tebesėdėję_VERB ligi_ADV šiol_X ,_PUNCT ten_ADV ,_PUNCT manau_VERB ,_PUNCT ir_CCONJ būtų_AUX pastatę_VERB naujosios_ADJ atominės_ADJ elektrinės_NOUN reaktorių_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Kremliuje_PROPN jam_PRON irgi_CCONJ vieta_NOUN ,_PUNCT nes_SCONJ kai_PRON kas_X gal_PART mano_VERB ,_PUNCT jog_SCONJ kurioj_DET nors_X „_PUNCT Iki_PROPN “_PUNCT ._PUNCT
tags: PROPN PRON CCONJ NOUN PUNCT SCONJ PRON X PART VERB PUNCT SCONJ DET X PUNCT PROPN PUNCT PUNCT
tagged_tokens: Kremliuje_PROPN jam_PRON irgi_CCONJ vieta_NOUN ,_PUNCT nes_SCONJ kai_PRON kas_X gal_PART mano_VERB ,_PUNCT jog_SCONJ kurioj_DET nors_X „_PUNCT Iki_PROPN “_PUNCT ._PUNCT

B) tokens: Kremliuje_PROPN jam_PRON ir_CCONJ vieta_NOUN ,_PUNCT nors_SCONJ kai_PRON kas_X gal_PART spėja_VERB ,_PUNCT jog_SCONJ kurioj_DET nors_X „_PUNCT Norfoje_PROPN “_PUNCT ._PUNCT
tags: PROPN PRON CCONJ NOUN PUNCT SCONJ PRON X PART VERB PUNCT SCONJ DET X PUNCT PROPN PUNCT PUNCT
tagged_tokens: Kremliuje_PROPN jam_PRON ir_CCONJ vieta_NOUN ,_PUNCT nors_SCONJ kai_PRON kas_X gal_PART spėja_VERB ,_PUNCT jog_SCONJ kurioj_DET nors_X „_PUNCT Norfoje_PROPN “_PUNCT ._PUNCT

C) tokens: Kremliuje_PROPN jam_PRON ir_CCONJ vieta_NOUN ,_PUNCT nors_SCONJ kai_PRON kas_X gal_PART mano_VERB ,_PUNCT jog_SCONJ kurioj_DET nors_X „_PUNCT Lidle_PROPN “_PUNCT ._PUNCT
tags: PROPN PRON CCONJ NOUN PUNCT SCONJ PRON X PART VERB PUNCT SCONJ DET X PUNCT PROPN PUNCT PUNCT
tagged_tokens: Kremliuje_PROPN jam_PRON ir_CCONJ vieta_NOUN ,_PUNCT nors_SCONJ kai_PRON kas_X gal_PART mano_VERB ,_PUNCT jog_SCONJ kurioj_DET nors_X „_PUNCT Lidle_PROPN “_PUNCT ._PUNCTD) tokens: Kremliuje jam ir vieta , nors kai kas gal mano , jog kurioj nors „ Maximoj “ .
tags: PROPN PRON CCONJ NOUN PUNCT SCONJ PRON X PART VERB PUNCT SCONJ DET X PUNCT PROPN PUNCT PUNCT
tagged_tokens: Kremliuje_PROPN jam_PRON ir_CCONJ vieta_NOUN ,_PUNCT nors_SCONJ kai_PRON kas_X gal_PART mano_VERB ,_PUNCT jog_SCONJ kurioj_DET nors_X „_PUNCT Maximoj_PROPN “_PUNCT ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Yra_VERB ir_PART palaikomų_VERB dalykų_NOUN ._PUNCT
tags: VERB PART VERB NOUN PUNCT
tagged_tokens: Yra_VERB ir_PART palaikomų_VERB dalykų_NOUN ._PUNCT

B) tokens: Yra_VERB ir_PART sveikinamų_VERB dalykų_NOUN ._PUNCT
tags: VERB PART VERB NOUN PUNCT
tagged_tokens: Yra_VERB ir_PART sveikinamų_VERB dalykų_NOUN ._PUNCT

C) tokens: Egzistuoja_VERB ir_PART giriamo_VERB dalykų_NOUN ._PUNCT
tags: VERB PART VERB NOUN PUNCT
tagged_tokens: Egzistuoja_VERB ir_PART giriamo_VERB dalykų_NOUN ._PUNCTD) tokens: Yra ir sveikintinų dalykų .
tags: VERB PART VERB NOUN PUNCT
tagged_tokens: Yra_VERB ir_PART sveikintinų_VERB dalykų_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Kauno_PROPN seniūnas_NOUN ,_PUNCT visus_DET nustebinęs_VERB gyvenamųjų_ADJ statybų_NOUN Nemuno_PROPN pakrantėje_NOUN planais_NOUN ,_PUNCT staiga_ADV sukvietė_VERB visą_DET būrį_NOUN architektų_NOUN -_PUNCT gal_PART ką_PRON naudingo_ADJ pasakys_VERB ._PUNCT
tags: PROPN NOUN PUNCT DET VERB ADJ NOUN PROPN NOUN NOUN PUNCT ADV VERB DET NOUN NOUN PUNCT PART PRON ADJ VERB PUNCT
tagged_tokens: Kauno_PROPN seniūnas_NOUN ,_PUNCT visus_DET nustebinęs_VERB gyvenamųjų_ADJ statybų_NOUN Nemuno_PROPN pakrantėje_NOUN planais_NOUN ,_PUNCT staiga_ADV sukvietė_VERB visą_DET būrį_NOUN architektų_NOUN -_PUNCT gal_PART ką_PRON naudingo_ADJ pasakys_VERB ._PUNCT

B) tokens: Kauno_PROPN valdovas_NOUN ,_PUNCT visus_DET sukrėtęs_VERB pramoninių_ADJ statybų_NOUN Nemuno_PROPN krante_NOUN idėjomis_NOUN ,_PUNCT greitai_ADV sukvietė_VERB visą_DET grupę_NOUN architektų_NOUN -_PUNCT gal_PART ką_PRON prasmingo_ADJ pasakys_VERB ._PUNCT
tags: PROPN NOUN PUNCT DET VERB ADJ NOUN PROPN NOUN NOUN PUNCT ADV VERB DET NOUN NOUN PUNCT PART PRON ADJ VERB PUNCT
tagged_tokens: Kauno_PROPN valdovas_NOUN ,_PUNCT visus_DET sukrėtęs_VERB pramoninių_ADJ statybų_NOUN Nemuno_PROPN krante_NOUN idėjomis_NOUN ,_PUNCT greitai_ADV sukvietė_VERB visą_DET grupę_NOUN architektų_NOUN -_PUNCT gal_PART ką_PRON prasmingo_ADJ pasakys_VERB ._PUNCT

C) tokens: Kauno_PROPN meras_NOUN ,_PUNCT visus_DET sužavėjęs_VERB valstybinių_ADJ pastatų_NOUN Nemuno_PROPN krantinėje_NOUN svajonėmis_NOUN ,_PUNCT staiga_ADV sukvietė_VERB visą_DET būrį_NOUN architektų_NOUN -_PUNCT gal_PART ką_PRON sumaniai_ADJ pasakys_VERB ._PUNCT
tags: PROPN NOUN PUNCT DET VERB ADJ NOUN PROPN NOUN NOUN PUNCT ADV VERB DET NOUN NOUN PUNCT PART PRON ADJ VERB PUNCT
tagged_tokens: Kauno_PROPN meras_NOUN ,_PUNCT visus_DET sužavėjęs_VERB valstybinių_ADJ pastatų_NOUN Nemuno_PROPN krantinėje_NOUN svajonėmis_NOUN ,_PUNCT staiga_ADV sukvietė_VERB visą_DET būrį_NOUN architektų_NOUN -_PUNCT gal_PART ką_PRON sumaniai_ADJ pasakys_VERB ._PUNCTD) tokens: Kauno meras , visus nustebinęs komercinių statybų Nemuno saloje planais , staiga susikvietė visą tuntą architektų - gal ką gero pasakys .
tags: PROPN NOUN PUNCT DET VERB ADJ NOUN PROPN NOUN NOUN PUNCT ADV VERB DET NOUN NOUN PUNCT PART PRON ADJ VERB PUNCT
tagged_tokens: Kauno_PROPN meras_NOUN ,_PUNCT visus_DET nustebinęs_VERB komercinių_ADJ statybų_NOUN Nemuno_PROPN saloje_NOUN planais_NOUN ,_PUNCT staiga_ADV susikvietė_VERB visą_DET tuntą_NOUN architektų_NOUN -_PUNCT gal_PART ką_PRON gero_ADJ pasakys_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Net pagarsėtas ankstesnių Kauno merų sumanymų griovėjas A . Karalius buvo kviečiamas .
tags: PART VERB ADJ PROPN NOUN NOUN NOUN X PUNCT PROPN AUX VERB PUNCT
tagged_tokens: Net_PART pagarsėtas_VERB ankstesnių_ADJ Kauno_PROPN merų_NOUN sumanymų_NOUN griovėjas_NOUN A_X ._PUNCT Karalius_PROPN buvo_AUX kviečiamas_VERB ._PUNCT

B) tokens: Net gerai žinomas ankstesnių Kauno merų norų triuškintojas A . Karalius buvo kviečiamas .
tags: PART VERB ADJ PROPN NOUN NOUN NOUN X PUNCT PROPN AUX VERB PUNCT
tagged_tokens: Net_PART gerai_VERB žinomas_ADJ Kauno_PROPN merų_NOUN norų_NOUN triuškintojas_NOUN A_X ._PUNCT Karalius_PROPN buvo_AUX kviečiamas_VERB ._PUNCT

C) tokens: Net garsus ankstesnių Kauno merų vizijų griovėjas A . Karalius buvo įteiktas .
tags: PART VERB ADJ PROPN NOUN NOUN NOUN X PUNCT PROPN AUX VERB PUNCT
tagged_tokens: Net_PART garsus_VERB ankstesnių_ADJ Kauno_PROPN merų_NOUN vizijų_NOUN griovėjas_NOUN A_X ._PUNCT Karalius_PROPN buvo_AUX įteiktas_VERB ._PUNCTD) tokens: Net žinomas ankstesnių Kauno merų planų žlugdytojas A . Karalius buvo pakviestas .
tags: PART VERB ADJ PROPN NOUN NOUN NOUN X PUNCT PROPN AUX VERB PUNCT
tagged_tokens: Net_PART žinomas_VERB ankstesnių_ADJ Kauno_PROPN merų_NOUN planų_NOUN žlugdytojas_NOUN A_X ._PUNCT Karalius_PROPN buvo_AUX pakviestas_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Paskatina .
tags: VERB PUNCT
tagged_tokens: Paskatina_VERB ._PUNCT

B) tokens: Įkvepia .
tags: VERB PUNCT
tagged_tokens: Įkvepia_VERB ._PUNCT

C) tokens: Skatina .
tags: VERB PUNCT
tagged_tokens: Skatina_VERB ._PUNCTD) tokens: Įkvepia .
tags: VERB PUNCT
tagged_tokens: Įkvepia_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Traukia .
tags: VERB PUNCT
tagged_tokens: Traukia_VERB ._PUNCT

B) tokens: Pakeri .
tags: VERB PUNCT
tagged_tokens: Pakeri_VERB ._PUNCT

C) tokens: Žavi .
tags: VERB PUNCT
tagged_tokens: Žavi_VERB ._PUNCTD) tokens: Žavi .
tags: VERB PUNCT
tagged_tokens: Žavi_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Maldauja .
tags: VERB PUNCT
tagged_tokens: Maldauja_VERB ._PUNCT

B) tokens: Raunasi .
tags: VERB PUNCT
tagged_tokens: Raunasi_VERB ._PUNCT

C) tokens: Guodžia .
tags: VERB PUNCT
tagged_tokens: Guodžia_VERB ._PUNCTD) tokens: Guodžia .
tags: VERB PUNCT
tagged_tokens: Guodžia_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Vis dėl kitas merai irgi , rodos , „ kalbėdavosi “ su specialistais .
tags: ADV PRON NOUN ADV , PUNCT PART PUNCT „ PUNCT VERB PUNCT ADP NOUN PUNCT
tagged_tokens: Vis_ADV dėl_PRON kitas_NOUN merai_NOUN irgi_ADV ,_PUNCT rodos_PART ,_PUNCT „_PUNCT kalbėdavosi_VERB “_PUNCT su_ADP specialistais_NOUN ._PUNCT

B) tokens: Tiesa , ankstesni mero irgi , rodos , „ tardavosi “ su specialistais .
tags: NOUN ADJ NOUN ADV , PUNCT PART PUNCT „ PUNCT VERB PUNCT ADP NOUN PUNCT
tagged_tokens: Tiesa_NOUN ,_PUNCT ankstesni_ADJ mero_NOUN irgi_ADV ,_PUNCT rodos_PART ,_PUNCT „_PUNCT tardavosi_VERB “_PUNCT su_ADP specialistais_NOUN ._PUNCT

C) tokens: Tiesa , ankstesni valdės irgi , rodos , „ tardavosi “ su specialistais .
tags: NOUN ADJ NOUN ADV , PUNCT PART PUNCT „ PUNCT VERB PUNCT ADP NOUN PUNCT
tagged_tokens: Tiesa_NOUN ,_PUNCT ankstesni_ADJ valdės_NOUN irgi_ADV ,_PUNCT rodos_PART ,_PUNCT „_PUNCT tardavosi_VERB “_PUNCT su_ADP specialistais_NOUN ._PUNCTD) tokens: Tačiau ankstesni merai irgi , rodos , „ tardavosi “ su specialistais .
tags: CCONJ ADJ NOUN ADV PUNCT PART PUNCT PUNCT VERB PUNCT ADP NOUN PUNCT
tagged_tokens: Tačiau_CCONJ ankstesni_ADJ merai_NOUN irgi_ADV ,_PUNCT rodos_PART ,_PUNCT „_PUNCT tardavosi_VERB “_PUNCT su_ADP specialistais_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Lithuanian language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Tiktai_CCONJ paskiau_ADV tadai_X būdavo_VERB kaipgi_SCONJ buvus_VERB ._PUNCT
tags: CCONJ ADV ADV VERB SCONJ VERB PUNCT
tagged_tokens: Tiktai_CCONJ paskiau_ADV tadai_X būdavo_VERB kaipgi_SCONJ buvus_VERB ._PUNCT

B) tokens: Vien_CCONJ vliau_ADV tuomet_X likdavo_VERB itgi_SCONJ buvus_VERB ._PUNCT
tags: CCONJ ADV ADV VERB SCONJ VERB PUNCT
tagged_tokens: Vien_CCONJ vliau_ADV tuomet_X likdavo_VERB itgi_SCONJ buvus_VERB ._PUNCT

C) tokens: Tikrai_CCONJ vėliau_ADV tada_X būdavo_VERB kaipgi_SCONJ buvus_VERB ._PUNCT
tags: CCONJ ADV ADV VERB SCONJ VERB PUNCT
tagged_tokens: Tikrai_CCONJ vliau_ADV tada_X būdavo_VERB kaipgi_SCONJ buvus_VERB ._PUNCTD) tokens: Tik po to būdavo kaip buvę .
tags: CCONJ ADV X VERB SCONJ VERB PUNCT
tagged_tokens: Tik_CCONJ po_ADV to_X būdavo_VERB kaip_SCONJ buvę_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
