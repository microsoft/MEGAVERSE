answer,prompt
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: ( And , incidentally , be anyone else precisely a small amount maudlin for the times when that be a beneficial thing ? )
tags: PUNCT CCONJ PUNCT ADP DET NOUN PUNCT AUX PRON ADJ ADV DET ADJ NOUN ADP DET NOUN ADV PRON AUX DET ADJ NOUN PUNCT PUNCT
tagged_tokens: ( _PUNCT And_CCONJ ,_PUNCT incidentally_ADP be_AUX anyone_PRON else_ADJ precisely_ADV a_DET small_ADJ amount_NOUN maudlin_ADJ for_ADP the_DET times_NOUN when_ADV that_PRON be_AUX a_DET beneficial_ADJ thing_NOUN ?_PUNCT )_PUNCT

B) tokens: ( And , by the by , do anybody else precisely a spot sentimental for the days when that be a fine thing ? )
tags: PUNCT CCONJ PUNCT ADP DET NOUN PUNCT AUX PRON ADJ ADV DET ADJ NOUN ADP DET NOUN ADV PRON AUX DET ADJ NOUN PUNCT PUNCT
tagged_tokens: ( _PUNCT And_CCONJ ,_PUNCT by_ADP the_DET by_NOUN ,_PUNCT do_AUX anybody_PRON else_ADJ precisely_ADV a_DET spot_NOUN sentimental_ADJ for_ADP the_DET days_NOUN when_ADV that_PRON be_AUX a_DET fine_ADJ thing_NOUN ?_PUNCT )_PUNCT

C) tokens: ( And , incidentally , be anyone else merely a small spot nostalgic for the days when that be a beneficial thing ? )
tags: PUNCT CCONJ PUNCT ADP DET NOUN PUNCT AUX PRON ADJ ADV DET ADJ NOUN ADP DET NOUN ADV PRON AUX DET ADJ NOUN PUNCT PUNCT
tagged_tokens: ( _PUNCT And_CCONJ ,_PUNCT incidentally_ADP be_AUX anyone_PRON else_ADJ merely_ADV a_DET small_ADJ spot_NOUN nostalgic_ADJ for_ADP the_DET days_NOUN when_ADV that_PRON be_AUX a_DET beneficial_ADJ thing_NOUN ?_PUNCT )_PUNCTD) tokens: ( And , by the way , is anybody else just a little nostalgic for the days when that was a good thing ? )
tags: PUNCT CCONJ PUNCT ADP DET NOUN PUNCT AUX PRON ADJ ADV DET ADJ NOUN ADP DET NOUN ADV PRON AUX DET ADJ NOUN PUNCT PUNCT
tagged_tokens: (_PUNCT And_CCONJ ,_PUNCT by_ADP the_DET way_NOUN ,_PUNCT is_AUX anybody_PRON else_ADJ just_ADV a_DET little_ADJ nostalgic_NOUN for_ADP the_DET days_NOUN when_ADV that_PRON was_AUX a_DET good_ADJ thing_NOUN ?_PUNCT )_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Google is a swell search engine .
tags: PROPN AUX DET ADJ NOUN NOUN PUNCT
tagged_tokens: Google_PROPN is_AUX a_DET swell_ADJ search_NOUN engine_NOUN ._PUNCT

B) tokens: Google is a good search engine .
tags: PROPN AUX DET ADJ NOUN NOUN PUNCT
tagged_tokens: Google_PROPN is_AUX a_DET good_ADJ search_NOUN engine_NOUN ._PUNCT

C) tokens: Google is a fine search engine .
tags: PROPN AUX DET ADJ NOUN NOUN PUNCT
tagged_tokens: Google_PROPN is_AUX a_DET fine_ADJ search_NOUN engine_NOUN ._PUNCTD) tokens: Google is a nice search engine .
tags: PROPN AUX DET ADJ NOUN NOUN PUNCT
tagged_tokens: Google_PROPN is_AUX a_DET nice_ADJ search_NOUN engine_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Does anybody employ it for anything else ? PUNCT
tags: AUX PRON VERB PRON ADP PRON ADJ PUNCT
tagged_tokens: Does_AUX anybody_PRON employ_VERB it_PRON for_ADP anything_PRON else_ADJ ?_PUNCT

B) tokens: Does anyone use it for anything different ? PUNCT
tags: AUX PRON VERB PRON ADP PRON ADJ PUNCT
tagged_tokens: Does_AUX anyone_PRON use_VERB it_PRON for_ADP anything_PRON different_ADJ ?_PUNCT

C) tokens: Does anyone utilize it for anything distinct ? PUNCT
tags: AUX PRON VERB PRON ADP PRON ADJ PUNCT
tagged_tokens: Does_AUX anyone_PRON utilize_VERB it_PRON for_ADP anything_PRON distinct_ADJ ?_PUNCTD) tokens: Does anybody use it for anything else ?
tags: AUX PRON VERB PRON ADP PRON ADJ PUNCT
tagged_tokens: Does_AUX anybody_PRON use_VERB it_PRON for_ADP anything_PRON else_ADJ ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: They have blogger , of course .
tags: PRON AUX PROPN PUNCT ADV ADV PUNCT
tagged_tokens: They_PRON have_AUX blogger_PROPN ,_PUNCT of_ADV course_ADV ._PUNCT

B) tokens: They hold blogger , of course .
tags: PRON HOLD PROPN PUNCT ADV ADV PUNCT
tagged_tokens: They_PRON hold_VERB blogger_PROPN ,_PUNCT of_ADV course_ADV ._PUNCT

C) tokens: They own blogger , naturally .
tags: PRON VERB PROPN PUNCT ADV PUNCT
tagged_tokens: They_PRON own_VERB blogger_PROPN ,_PUNCT naturally_ADV ._PUNCTD) tokens: They own blogger , of course .
tags: PRON VERB PROPN PUNCT ADV ADV PUNCT
tagged_tokens: They_PRON own_VERB blogger_PROPN ,_PUNCT of_ADV course_ADV ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Is that a fiscal producer ?
tags: AUX PRON DET ADJ NOUN PUNCT
tagged_tokens: Is_AUX that_PRON a_DET fiscal_ADJ producer_NOUN ?_PUNCT

B) tokens: Is that a coin earner ?
tags: AUX PRON DET NOUN NOUN PUNCT
tagged_tokens: Is_AUX that_PRON a_DET coin_NOUN earner_NOUN ?_PUNCT

C) tokens: Is that a lucre generator ?
tags: AUX PRON DET NOUN NOUN PUNCT
tagged_tokens: Is_AUX that_PRON a_DET lucre_NOUN generator_NOUN ?_PUNCTD) tokens: Is that a money maker ?
tags: AUX PRON DET NOUN NOUN PUNCT
tagged_tokens: Is_AUX that_PRON a_DET money_NOUN maker_NOUN ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: I 'm holding back from the stock .
tags: PRON AUX VERB ADV ADP DET NOUN PUNCT
tagged_tokens: I_PRON 'm_AUX holding_VERB back_ADV from_ADP the_DET stock_NOUN ._PUNCT

B) tokens: I 'm abstaining from the stock .
tags: PRON AUX VERB ADP DET NOUN PUNCT
tagged_tokens: I_PRON 'm_AUX abstaining_VERB from_ADP the_DET stock_NOUN ._PUNCT

C) tokens: I 'm holding off from the stock .
tags: PRON AUX VERB ADV ADP DET NOUN PUNCT
tagged_tokens: I_PRON 'm_AUX holding_VERB off_ADV from_ADP the_DET stock_NOUN ._PUNCTD) tokens: I 'm staying away from the stock .
tags: PRON AUX VERB ADV ADP DET NOUN PUNCT
tagged_tokens: I_PRON 'm_AUX staying_VERB away_ADV from_ADP the_DET stock_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: I distrust the few who indeed peruse my blog do not know this yet , but I deemed I would place it out there anywise .
tags: PRON VERB DET ADV ADJ PRON ADV VERB PRON NOUN AUX PART VERB ADP PRON ADV PUNCT CCONJ PRON VERB PRON AUX VERB PRON ADV ADV ADV PUNCT
tagged_tokens: I_PRON distrust_VERB the_DET few_ADJ who_PRON indeed_ADV peruse_VERB my_PRON blog_NOUN do_AUX not_PART know_VERB this_PRON yet_ADV ,_PUNCT but_CCONJ I_PRON deemed_VERB I_PRON would_AUX place_VERB it_PRON out_ADV there_ADV anywise_ADV ._PUNCT

B) tokens: I doubt that the limited number of individuals who in fact read my site have failed to encounter this previously , but I supposed that I would set it out there regardless .
tags: PRON VERB CCONJ DET limited number_NOUN of_ADP individuals_NOUN who_PRON in_ADP fact_NOUN read_VERB my_PRON site_NOUN AUX fail_VERB to_PART encounter_VERB this_PRON previously_ADV ,_PUNCT but_CCONJ I_PRON suppose_VERB that_C that_C I_PRON would_AUX set_VERB it_PRON out_ADV there_ADV regardless_ADV ._PUNCT
tagged_tokens: I_PRON doubt_VERB that_CCONJ the_DET limited_ADJ number_NOUN of_ADP individuals_NOUN who_PRON in_ADP fact_NOUN read_VERB my_PRON site_NOUN AUX_AUX fail_VERB to_PART encounter_VERB this_PRON previously_ADV ,_PUNCT but_CCONJ I_PRON suppose_VERB that_C that_C I_PRON would_AUX set_VERB it_PRON out_ADV there_ADV regardless_ADV ._PUNCT

C) tokens: I question the scant number of people who actually read my blog have not encountered this hitherto , but I figured I would relate it out there nonetheless .
tags: PRON VERB DET scant number_NOUN of_ADP people_NOUN who_PRON actually_ADV read_VERB my_PRON blog_NOUN AUX not_PART encounter_VERB this_PRON hitherto_ADV ,_PUNCT but_CCONJ I_PRON figure_VERB I_PRON would_AUX relate_VERB it_PRON out_ADV there_ADV nonetheless_ADV ._PUNCT
tagged_tokens: I_PRON question_VERB the_DET scant_ADJ number_NOUN of_ADP people_NOUN who_PRON actually_ADV read_VERB my_PRON blog_NOUN AUX_AUX not_PART encounter_VERB this_PRON hitherto_ADV ,_PUNCT but_CCONJ I_PRON figure_VERB I_PRON would_AUX relate_VERB it_PRON out_ADV there_ADV nonetheless_ADV ._PUNCTD) tokens: I doubt the very few who actually read my blog have not come across this yet , but I figured I would put it out there anyways .
tags: PRON VERB DET ADV ADJ PRON ADV VERB PRON NOUN AUX PART VERB ADP PRON ADV PUNCT CCONJ PRON VERB PRON AUX VERB PRON ADV ADV ADV PUNCT
tagged_tokens: I_PRON doubt_VERB the_DET very_ADV few_ADJ who_PRON actually_ADV read_VERB my_PRON blog_NOUN have_AUX not_PART come_VERB across_ADP this_PRON yet_ADV ,_PUNCT but_CCONJ I_PRON figured_VERB I_PRON would_AUX put_VERB it_PRON out_ADV there_ADV anyways_ADV ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: coins: John Donovan from Argghhh! has sent out a swell slide show on what was really discovered and battled for in Fallujah .
tags: PROPN PROPN ADP PROPN AUX VERB ADP DET ADJ NOUN NOUN SCONJ PRON AUX ADV VERB CCONJ VERB ADP ADP PROPN PUNCT
tagged_tokens: John_PROPN Donovan_PROPN from_ADP Argghhh!_PROPN has_AUX sent_VERB out_ADP a_DET swell_ADJ slide_NOUN show_NOUN on_SCONJ what_PRON was_AUX really_ADV discovered_VERB CCONJ battled_VERB for_ADP in_ADP Fallujah_PROPN PUNCT

B) tokens: pieces: John Donovan from Argghhh! has issued a fine slide show on what was actually uncovered and struggled for in Fallujah .
tags: PROPN PROPN ADP PROPN AUX VERB ADP DET ADJ NOUN NOUN SCONJ PRON AUX ADV VERB CCONJ VERB ADP ADP PROPN PUNCT
tagged_tokens: John_PROPN Donovan_PROPN from_ADP Argghhh!_PROPN has_AUX issued_VERB a_DET fine_ADJ slide_NOUN show_NOUN on_SCONJ what_PRON was_AUX actually_ADV uncovered_VERB CCONJ struggled_VERB for_ADP in_ADP Fallujah_PROPN PUNCT

C) tokens: tokens: John Donovan from Argghhh! has displayed a superb slide show on what was really discovered and campaigned for in Fallujah .
tags: PROPN PROPN ADP PROPN AUX VERB ADP DET ADJ NOUN NOUN SCONJ PRON AUX ADV VERB CCONJ VERB ADP ADP PROPN PUNCT
tagged_tokens: John_PROPN Donovan_PROPN from_ADP Argghhh!_PROPN has_AUX displayed_VERB a_DET superb_ADJ slide_NOUN show_NOUN on_SCONJ what_PRON was_AUX really_ADV discovered_VERB CCONJ campaigned_VERB for_ADP in_ADP Fallujah_PROPN PUNCTD) tokens: John Donovan from Argghhh! has put out a excellent slide show on what was actually found and fought for in Fallujah .
tags: PROPN PROPN ADP PROPN AUX VERB ADP DET ADJ NOUN NOUN SCONJ PRON AUX ADV VERB CCONJ VERB ADP ADP PROPN PUNCT
tagged_tokens: John_PROPN Donovan_PROPN from_ADP Argghhh!_PROPN has_AUX put_VERB out_ADP a_DET excellent_ADJ slide_NOUN show_NOUN on_SCONJ what_PRON was_AUX actually_ADV found_VERB and_CCONJ fought_VERB for_ADP in_ADP Fallujah_PROPN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Tap here To see it .
tags: VERB ADV PART VERB PRON PUNCT
tagged_tokens: Tap_VERB here_ADV To_PART see_VERB it_PRON ._PUNCT

B) tokens: Click here To watch it .
tags: VERB ADV PART VERB PRON PUNCT
tagged_tokens: Click_VERB here_ADV To_PART watch_VERB it_PRON ._PUNCT

C) tokens: Press here To check it out .
tags: VERB ADV PART VERB PRON PUNCT
tagged_tokens: Press_VERB here_ADV To_PART check_VERB it_PRON out_PART ._PUNCTD) tokens: Click here To view it .
tags: VERB ADV PART VERB PRON PUNCT
tagged_tokens: Click_VERB here_ADV To_PART view_VERB it_PRON ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: He makes some pertinent remarks on a small number of the picture 's .
tags: PRON VERB DET ADJ NOUN ADP DET ADJ ADP DET NOUN PUNCT
tagged_tokens: He_PRON makes_VERB some_DET pertinent_ADJ remarks_NOUN on_ADP a_DET small_ADJ number_NOUN of_ADP the_DET picture_NOUN 's_NOUN ._PUNCT

B) tokens: He offers some just observations on a little number of the photograph 's .
tags: PRON VERB DET ADJ NOUN ADP DET ADJ ADP DET NOUN PUNCT
tagged_tokens: He_PRON offers_VERB some_DET just_ADJ observations_NOUN on_ADP a_DET little_ADJ number_NOUN of_ADP the_DET photograph_NOUN 's_NOUN ._PUNCT

C) tokens: He posits some accurate observations on a several number of the pic 's .
tags: PRON VERB DET ADJ NOUN ADP DET ADJ ADP DET NOUN PUNCT
tagged_tokens: He_PRON posits_VERB some_DET accurate_ADJ observations_NOUN on_ADP a_DET several_ADJ number_NOUN of_ADP the_DET pic_NOUN 's_NOUN ._PUNCTD) tokens: He makes some good observations on a few of the pic's .
tags: PRON VERB DET ADJ NOUN ADP DET ADJ ADP DET NOUN PUNCT
tagged_tokens: He_PRON makes_VERB some_DET good_ADJ observations_NOUN on_ADP a_DET few_ADJ of_ADP the_DET pic's_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: One of the photographs illustrates a flag which was discovered in Fallujah .
tags: NUM ADP DET NOUN ILLUSTRATE DET NOUN PRON AUX DISCOVER ADP PROPN PUNCT
tagged_tokens: One_NUM of_ADP the_DET photographs_NOUN illustrates_VERB a_DET flag_NOUN which_PRON was_AUX discovered_VERB in_ADP Fallujah_PROPN ._PUNCT

B) tokens: One of the images shows a banner that was uncovered in Fallujah .
tags: NUM ADP DET NOUN SHOW DET NOUN PRON AUX UNCOVER ADP PROPN PUNCT
tagged_tokens: One_NUM of_ADP the_DET images_NOUN shows_VERB a_DET banner_NOUN that_PRON was_AUX uncovered_VERB in_ADP Fallujah_PROPN ._PUNCT

C) tokens: A single of the photos demonstrates a flag that was located in Fallujah .
tags: DET ADP DET NOUN DEMONSTRATE DET NOUN PRON AUX LOCATE ADP PROPN PUNCT
tagged_tokens: A_DET single_NOUN of_ADP the_DET photos_NOUN demonstrates_VERB a_DET flag_NOUN that_PRON was_AUX locate_VERB in_ADP Fallujah_PROPN ._PUNCTD) tokens: One of the pictures shows a flag that was found in Fallujah .
tags: NUM ADP DET NOUN VERB DET NOUN PRON AUX VERB ADP PROPN PUNCT
tagged_tokens: One_NUM of_ADP the_DET pictures_NOUN shows_VERB a_DET flag_NOUN that_PRON was_AUX found_VERB in_ADP Fallujah_PROPN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: On the next two photographs he took screenshots of two killing video's .
tags: ADP DET ADJ NUM NOUN PRON VERB NOUN ADP NUM NOUN NOUN PUNCT
tagged_tokens: On_ADP the_DET next_ADJ two_NUM photographs_NOUN he_PRON took_VERB screenshots_NOUN of_ADP two_NUM killing_NOUN video's_NOUN ._PUNCT

B) tokens: On the following two photographs he took screenshots of two beheading videos .
tags: ADP DET ADJ NUM NOUN PRON VERB NOUN ADP NUM NOUN NOUN PUNCT
tagged_tokens: On_ADP the_DET following_ADJ two_NUM photographs_NOUN he_PRON took_VERB screenshots_NOUN of_ADP two_NUM beheading_NOUN videos_NOUN ._PUNCT

C) tokens: On the after two photographs he took screenshots of two beheading film .
tags: ADP DET ADJ NUM NOUN PRON VERB NOUN ADP NUM NOUN NOUN PUNCT
tagged_tokens: On_ADP the_DET after_ADJ two_NUM photographs_NOUN he_PRON took_VERB screenshots_NOUN of_ADP two_NUM beheading_NOUN film_NOUN ._PUNCTD) tokens: On the next two pictures he took screenshots of two beheading video's .
tags: ADP DET ADJ NUM NOUN PRON VERB NOUN ADP NUM NOUN NOUN PUNCT
tagged_tokens: On_ADP the_DET next_ADJ two_NUM pictures_NOUN he_PRON took_VERB screenshots_NOUN of_ADP two_NUM beheading_NOUN video's_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Contrast the flags with the Fallujah one .
tags: VERB DET NOUN ADP DET PROPN NOUN PUNCT
tagged_tokens: Contrast_VERB the_DET flags_NOUN with_ADP the_DET Fallujah_PROPN one_NOUN PUNCT

B) tokens: Compare the flags to the Fallujah single .
tags: VERB DET NOUN ADP DET PROPN ADJ PUNCT
tagged_tokens: Compare_VERB the_DET flags_NOUN to_ADP the_DET Fallujah_PROPN single_ADJ PUNCT

C) tokens: Compare the flags to the Fallujah individual .
tags: VERB DET NOUN ADP DET PROPN ADJ PUNCT
tagged_tokens: Compare_VERB the_DET flags_NOUN to_ADP the_DET Fallujah_PROPN individual_ADJ PUNCTD) tokens: Compare the flags to the Fallujah one .
tags: VERB DET NOUN ADP DET PROPN NOUN PUNCT
tagged_tokens: Compare_VERB the_DET flags_NOUN to_ADP the_DET Fallujah_PROPN one_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: You have got to see these slides .... they are mind-blowing .
tags: PRON VERB PART VERB DET NOUN PUNCT PRON AUX ADJ PUNCT
tagged_tokens: You_PRON have_VERB got_PART to_PART see_VERB these_DET slides_NOUN ...._PUNCT they_PRON are_AUX mind-blowing_ADJ ._PUNCT

B) tokens: You need to see these slides .... they are wondrous .
tags: PRON VERB PART VERB DET NOUN PUNCT PRON AUX ADJ PUNCT
tagged_tokens: You_PRON need_VERB to_PART see_VERB these_DET slides_NOUN ...._PUNCT they_PRON are_AUX wondrous_ADJ ._PUNCT

C) tokens: You must see these slides .... they are flabbergasting .
tags: PRON VERB PART VERB DET NOUN PUNCT PRON AUX ADJ PUNCT
tagged_tokens: You_PRON must_VERB see_VERB these_DET slides_NOUN ...._PUNCT they_PRON are_AUX flabbergasting_ADJ ._PUNCTD) tokens: You have to see these slides .... they are amazing .
tags: PRON VERB PART VERB DET NOUN PUNCT PRON AUX ADJ PUNCT
tagged_tokens: You_PRON have_VERB to_PART see_VERB these_DET slides_NOUN ...._PUNCT they_PRON are_AUX amazing_ADJ ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: This Fallujah operation could emerge to be the most vital operation carried out by the US Military since the conclusion of the war .
tags: DET PROPN NOUN AUX VERB ADP PART AUX DET ADV ADJ NOUN VERB ADP DET PROPN NOUN ADP DET NOUN ADP DET NOUN PUNCT
tagged_tokens: This_DET Fallujah_PROPN operation_NOUN could_AUX emerge_VERB out_ADP to_PART be_AUX the_DET most_ADV vital_ADJ operation_NOUN carried_VERB out_ADP by_ADP the_DET US_PROPN Military_NOUN since_ADP the_DET conclusion_NOUN of_ADP the_DET war_NOUN ._PUNCT

B) tokens: This Fallujah operation could turn out to be the most consequential operation performed by the US Military since the cessation of the conflict .
tags: DET PROPN NOUN AUX VERB ADP PART AUX DET ADV ADJ NOUN VERB ADP DET PROPN NOUN ADP DET NOUN ADP DET NOUN PUNCT
tagged_tokens: This_DET Fallujah_PROPN operation_NOUN could_AUX turn_VERB out_ADP to_PART be_AUX the_DET most_ADV consequential_ADJ operation_NOUN performed_VERB by_ADP the_DET US_PROPN Military_NOUN since_ADP the_DET cessation_NOUN of_ADP the_DET conflict_NOUN ._PUNCT

C) tokens: This Fallujah operation might prove to be the most significant operation conducted by the US Military since the termination of the war .
tags: DET PROPN NOUN AUX VERB ADP PART AUX DET ADV ADJ NOUN VERB ADP DET PROPN NOUN ADP DET NOUN ADP DET NOUN PUNCT
tagged_tokens: This_DET Fallujah_PROPN operation_NOUN might_AUX prove_VERB out_ADP to_PART be_AUX the_DET most_ADV significant_ADJ operation_NOUN conducted_VERB by_ADP the_DET US_PROPN Military_NOUN since_ADP the_DET termination_NOUN of_ADP the_DET war_NOUN ._PUNCTD) tokens: This Fallujah operation my turn out to be the most important operation done by the US Military since the end of the war .
tags: DET PROPN NOUN AUX VERB ADP PART AUX DET ADV ADJ NOUN VERB ADP DET PROPN NOUN ADP DET NOUN ADP DET NOUN PUNCT
tagged_tokens: This_DET Fallujah_PROPN operation_NOUN my_AUX turn_VERB out_ADP to_PART be_AUX the_DET most_ADV important_ADJ operation_NOUN done_VERB by_ADP the_DET US_PROPN Military_NOUN since_ADP the_DET end_NOUN of_ADP the_DET war_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Allow I join the chorus of aggravation over Google 's fresh toolbar , which , as stated in the connected article , does only about every sin an internet marketer could do , and invents a few fresh ones moreover .
tags: VERB PRON VERB DET NOUN ADP NOUN ADP PROPN PART ADJ NOUN PUNCT PRON PUNCT SCONJ VERB ADV ADP DET VERB NOUN PUNCT VERB ADV ADV DET NOUN DET ADJ NOUN AUX VERB PUNCT CCONJ VERB ADP DET ADJ ADJ NOUN ADV PUNCT
tagged_tokens: Allow_VERB I_PRON join_VERB the_DET chorus_NOUN of_ADP aggravation_NOUN over_ADP Google_PROPN 's_PART fresh_ADJ toolbar_NOUN ,_PUNCT which_PRON ,_PUNCT as_SCONJ stated_VERB in_ADP the_DET connected_VERB article_NOUN ,_PUNCT does_VERB only_ADV about_ADV every_DET sin_NOUN an_DET internet_ADJ marketer_NOUN could_AUX do_VERB ,_PUNCT and_CCONJ invents_VERB a_DET few_ADJ fresh_ADJ ones_NOUN moreover_ADV .

B) tokens: Permit me enter the chorus of annoyance over Google 's modern toolbar , which , as said in the linked article , perpetrates about every sin an online advertiser could perpetrate , and makes up a small number of novel ones also .
tags: VERB PRON VERB DET NOUN ADP NOUN ADP PROPN PART ADJ NOUN PUNCT PRON PUNCT SCONJ VERB ADV ADP DET VERB NOUN PUNCT VERB ADV ADV DET NOUN DET ADJ NOUN AUX VERB PUNCT CCONJ VERB ADP DET ADJ ADJ NOUN ADV PUNCT
tagged_tokens: Permit_VERB I_PRON enter_VERB the_DET chorus_NOUN of_ADP annoyance_NOUN over_ADP Google_PROPN 's_PART modern_ADJ toolbar_NOUN ,_PUNCT which_PRON ,_PUNCT as_SCONJ said_VERB in_ADP the_DET linked_VERB article_NOUN ,_PUNCT perpetrates_VERB about_ADV every_DET sin_NOUN an_DET online_ADJ advertiser_NOUN could_AUX perpetrate_VERB ,_PUNCT and_CCONJ makes_VERB up_ADP a_DET small_ADJ number_NOUN of_ADP novel_ADJ ones_NOUN also_ADV .

C) tokens: Enable me partake the chorus of vexation over Google 's fresh toolbar , which , as observed in the connected article , executes just about every sin an internet advertiser might perpetrate , and invents a few fresh ones also .
tags: VERB PRON VERB DET NOUN ADP NOUN ADP PROPN PART ADJ NOUN PUNCT PRON PUNCT SCONJ VERB ADV ADP DET VERB NOUN PUNCT VERB ADV ADV DET NOUN DET ADJ NOUN AUX VERB PUNCT CCONJ VERB ADP DET ADJ ADJ NOUN ADV PUNCT
tagged_tokens: Enable_VERB I_PRON partake_VERB the_DET chorus_NOUN of_ADP vexation_NOUN over_ADP Google_PROPN 's_PART fresh_ADJ toolbar_NOUN ,_PUNCT which_PRON ,_PUNCT as_SCONJ observed_VERB in_ADP the_DET connected_VERB article_NOUN ,_PUNCT executes_VERB just_ADV about_ADV every_DET sin_NOUN an_DET internet_ADJ advertiser_NOUN might_AUX perpetrate_VERB ,_PUNCT and_CCONJ invents_VERB a_DET few_ADJ fresh_ADJ ones_NOUN also_ADV .D) tokens: Let me join the chorus of annoyance over Google 's new toolbar , which , as noted in the linked article , commits just about every sin an online marketer could commit , and makes up a few new ones besides .
tags: VERB PRON VERB DET NOUN ADP NOUN ADP PROPN PART ADJ NOUN PUNCT PRON PUNCT SCONJ VERB ADP DET VERB NOUN PUNCT VERB ADV ADV DET NOUN DET ADJ NOUN AUX VERB PUNCT CCONJ VERB ADP DET ADJ ADJ NOUN ADV PUNCT
tagged_tokens: Let_VERB me_PRON join_VERB the_DET chorus_NOUN of_ADP annoyance_NOUN over_ADP Google_PROPN 's_PART new_ADJ toolbar_NOUN ,_PUNCT which_PRON ,_PUNCT as_SCONJ noted_VERB in_ADP the_DET linked_VERB article_NOUN ,_PUNCT commits_VERB just_ADV about_ADV every_DET sin_NOUN an_DET online_ADJ marketer_NOUN could_AUX commit_VERB ,_PUNCT and_CCONJ makes_VERB up_ADP a_DET few_ADJ new_ADJ ones_NOUN besides_ADV ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: I 'm not partial to the Google - loathes - privacy disputation
tags: PRON AUX PART ADJ ADP DET PROPN PUNCT VERB PUNCT NOUN NOUN
tagged_tokens: I_PRON 'm_AUX not_PART partial_ADJ to_ADP the_DET Google_PROPN -_PUNCT loathes_VERB -_PUNCT privacy_NOUN disputation_NOUN

B) tokens: I 'm not keen on the Google - detests - privacy discussion
tags: PRON AUX PART ADJ ADP DET PROPN PUNCT VERB PUNCT NOUN NOUN
tagged_tokens: I_PRON 'm_AUX not_PART keen_ADJ on_ADP the_DET Google_PROPN -_PUNCT detests_VERB -_PUNCT privacy_NOUN discussion_NOUN

C) tokens: I 'm not fond of the Google - dislikes - privacy altercation
tags: PRON AUX PART ADJ ADP DET PROPN PUNCT VERB PUNCT NOUN NOUN
tagged_tokens: I_PRON 'm_AUX not_PART fond_ADJ of_ADP the_DET Google_PROPN -_PUNCT dislikes_VERB -_PUNCT privacy_NOUN altercation_NOUND) tokens: I 'm not fond of the Google - hates - privacy argument
tags: PRON AUX PART ADJ ADP DET PROPN PUNCT VERB PUNCT NOUN NOUN
tagged_tokens: I_PRON 'm_AUX not_PART fond_ADJ of_ADP the_DET Google_PROPN -_PUNCT hates_VERB -_PUNCT privacy_NOUN argument_NOUN
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: markers: ( you be n't need to use their locate , you ca n't opt - out of portion your datum , you be n't need to send stuff to anyone with a Gmail account , and if -- wonder of wonders -- you be worried that you might send something to someone who would forward an excerpt to someone who would hence store it on a Gmail account ... you have far , far excessively much time on your paw ) .
tags: PUNCT PRON AUX PART VERB PART VERB their_PRON locate_NOUN PUNCT PRON CA N'T_AUX opt_VERB -_PUNCT out_ADP of_SCONJ portion_VERB your_PRON datum_NOUN PUNCT PRON AUX PART VERB PART VERB stuff_NOUN to_ADP anyone_PRON with_ADP a_DET Gmail_PROPN account_NOUN PUNCT and_CCONJ if_SCONJ --_PUNCT wonder_NOUN of_ADP wonders_NOUN --_PUNCT you_PRON be_AUX worried_ADJ that_SCONJ you_PRON might_AUX send_VERB something_PRON to_ADP someone_PRON who_PRON would_AUX forward_VERB an_DET excerpt_NOUN to_ADP someone_PRON who_PRON would_AUX hence_ADV store_VERB it_PRON on_ADP a_DET Gmail_PROPN account_NOUN ..._PUNCT you_PRON have_VERB far_ADV ,_PUNCT far_ADV excessively_ADV much_ADJ time_NOUN on_ADP your_PRON paw_NOUN )_PUNCT ._PUNCT
tagged_tokens: (_PUNCT You_PRON be_AUX n't_PART need_VERB to_PART use_VERB their_PRON locate_NOUN ,_PUNCT you_PRON ca_AUX n't_OPT opt_VERB -_PUNCT out_ADP of_SCONJ portion_VERB your_PRON datum_NOUN ,_PUNCT you_PRON be_AUX n't_PART need_VERB to_PART send_VERB stuff_NOUN to_ADP anyone_PRON with_ADP a_DET Gmail_PROPN account_NOUN ,_PUNCT and_CCONJ if_SCONJ --_PUNCT wonder_NOUN of_ADP wonders_NOUN --_PUNCT you_PRON be_AUX worried_ADJ that_SCONJ you_PRON might_AUX send_VERB something_PRON to_ADP someone_PRON who_PRON would_AUX forward_VERB an_DET excerpt_NOUN to_ADP someone_PRON who_PRON would_AUX hence_ADV store_VERB it_PRON on_ADP a_DET Gmail_PROPN account_NOUN ..._PUNCT you_PRON have_VERB far_ADV ,_PUNCT far_ADV excessively_ADV much_ADJ time_NOUN on_ADP your_PRON paw_NOUN )_PUNCT ._PUNCT

B) tokens: tokens: ( you do n't have to use their place , you ca n't opt - out of sharing your datum , you do n't have to dispatch matter to anyone with a Gmail account , and if -- wonder of wonders -- you be anxious that you might dispatch something to someone who would transmit an excerpt to someone who would so warehouse it on a Gmail account ... you have far , far excessively much time on your finger ) .
tags: PUNCT PRON AUX PART VERB PART VERB their_PRON place_NOUN PUNCT PRON CA N'T_AUX opt_VERB -_PUNCT out_ADP of_SCONJ sharing_VERB your_PRON datum_NOUN PUNCT PRON AUX PART VERB PART VERB matter_NOUN to_ADP anyone_PRON with_ADP a_DET Gmail_PROPN account_NOUN PUNCT and_CCONJ if_SCONJ --_PUNCT wonder_NOUN of_ADP wonders_NOUN --_PUNCT you_PRON be_AUX anxious_ADJ that_SCONJ you_PRON might_AUX dispatch_VERB something_PRON to_ADP someone_PRON who_PRON would_AUX transmit_VERB an_DET excerpt_NOUN to_ADP someone_PRON who_PRON would_AUX so_ADV warehouse_VERB it_PRON on_ADP a_DET Gmail_PROPN account_NOUN ..._PUNCT you_PRON have_VERB far_ADV ,_PUNCT far_ADV excessively_ADV much_ADJ time_NOUN on_ADP your_PRON finger_NOUN )_PUNCT ._PUNCT
tagged_tokens: (_PUNCT You_PRON do_AUX n't_PART have_VERB to_PART use_VERB their_PRON place_NOUN ,_PUNCT you_PRON ca_AUX n't_OPT opt_VERB -_PUNCT out_ADP of_SCONJ sharing_VERB your_PRON datum_NOUN ,_PUNCT you_PRON do_AUX n't_PART have_VERB to_PART dispatch_VERB matter_NOUN to_ADP anyone_PRON with_ADP a_DET Gmail_PROPN account_NOUN ,_PUNCT and_CCONJ if_SCONJ --_PUNCT wonder_NOUN of_ADP wonders_NOUN --_PUNCT you_PRON be_AUX anxious_ADJ that_SCONJ you_PRON might_AUX dispatch_VERB something_PRON to_ADP someone_PRON who_PRON would_AUX transmit_VERB an_DET excerpt_NOUN to_ADP someone_PRON who_PRON would_AUX so_ADV warehouse_VERB it_PRON on_ADP a_DET Gmail_PROPN account_NOUN ..._PUNCT you_PRON have_VERB far_ADV ,_PUNCT far_ADV excessively_ADV much_ADJ time_NOUN on_ADP your_PRON finger_NOUN )_PUNCT ._PUNCT

C) tokens: pointers: ( you be n't need to apply their locale , you ca n't opt - out of share your datum , you be n't need to forward matter to anyone with a Gmail account , and if -- wonder of wonder -- you be anxious that you might transmit something to someone who would relay an excerpt to someone who would ergo store it on a Gmail account ... you have far , far excessively much time on your arm ) .
tags: PUNCT PRON AUX PART VERB PART VERB their_PRON locale_NOUN PUNCT PRON CA N'T_AUX opt_VERB -_PUNCT out_ADP of_SCONJ share_VERB your_PRON datum_NOUN PUNCT PRON AUX PART VERB PART VERB matter_NOUN to_ADP anyone_PRON with_ADP a_DET Gmail_PROPN account_NOUN PUNCT and_CCONJ if_SCONJ --_PUNCT wonder_NOUN of_ADP wonder_NOUN --_PUNCT you_PRON be_AUX anxious_ADJ that_SCONJ you_PRON might_AUX transmit_VERB something_PRON to_ADP someone_PRON who_PRON would_AUX relay_VERB an_DET excerpt_NOUN to_ADP someone_PRON who_PRON would_AUX ergo_ADV store_VERB it_PRON on_ADP a_DET Gmail_PROPN account_NOUN ..._PUNCT you_PRON have_VERB far_ADV ,_PUNCT far_ADV excessively_ADV much_ADJ time_NOUN on_ADP your_PRON arm_NOUN )_PUNCT ._PUNCT
tagged_tokens: (_PUNCT You_PRON be_AUX n't_PART need_VERB to_PART apply_VERB their_PRON locale_NOUN ,_PUNCT you_PRON ca_AUX n't_OPT opt_VERB -_PUNCT out_ADP of_SCONJ share_VERB your_PRON datum_NOUN ,_PUNCT you_PRON be_AUX n't_PART need_VERB to_PART forward_VERB matter_NOUN to_ADP anyone_PRON with_ADP a_DET Gmail_PROPN account_NOUN ,_PUNCT and_CCONJ if_SCONJ --_PUNCT wonder_NOUN of_ADP wonder_NOUN --_PUNCT you_PRON be_AUX anxious_ADJ that_SCONJ you_PRON might_AUX transmit_VERB something_PRON to_ADP someone_PRON who_PRON would_AUX relay_VERB an_DET excerpt_NOUN to_ADP someone_PRON who_PRON would_AUX ergo_ADV store_VERB it_PRON on_ADP a_DET Gmail_PROPN account_NOUN ..._PUNCT you_PRON have_VERB far_ADV ,_PUNCT far_ADV excessively_ADV much_ADJ time_NOUN on_ADP your_PRON arm_NOUN )_PUNCT ._PUNCTD) tokens: ( You do n't need to use their site , you can opt - out of sharing your information , you do n't need to send stuff to anyone with a Gmail account , and if -- wonder of wonders -- you 're worried that you might send something to someone who would forward an excerpt to someone who would then store it on a Gmail account ... you have far , far too much time on your hands ) .
tags: PUNCT PRON AUX PART VERB PART VERB PRON NOUN PUNCT PRON AUX VERB PUNCT ADP SCONJ VERB PRON NOUN PUNCT PRON AUX PART VERB PART VERB NOUN ADP PRON ADP DET PROPN NOUN PUNCT CCONJ SCONJ PUNCT NOUN ADP NOUN PUNCT PRON AUX ADJ SCONJ PRON AUX VERB PRON ADP PRON PRON AUX VERB DET NOUN ADP PRON PRON AUX ADV VERB PRON ADP DET PROPN NOUN PUNCT PRON VERB ADV PUNCT ADV ADV ADJ NOUN ADP PRON NOUN PUNCT PUNCT
tagged_tokens: (_PUNCT You_PRON do_AUX n't_PART need_VERB to_PART use_VERB their_PRON site_NOUN ,_PUNCT you_PRON can_AUX opt_VERB -_PUNCT out_ADP of_SCONJ sharing_VERB your_PRON information_NOUN ,_PUNCT you_PRON do_AUX n't_PART need_VERB to_PART send_VERB stuff_NOUN to_ADP anyone_PRON with_ADP a_DET Gmail_PROPN account_NOUN ,_PUNCT and_CCONJ if_SCONJ --_PUNCT wonder_NOUN of_ADP wonders_NOUN --_PUNCT you_PRON 're_AUX worried_ADJ that_SCONJ you_PRON might_AUX send_VERB something_PRON to_ADP someone_PRON who_PRON would_AUX forward_VERB an_DET excerpt_NOUN to_ADP someone_PRON who_PRON would_AUX then_ADV store_VERB it_PRON on_ADP a_DET Gmail_PROPN account_NOUN ..._PUNCT you_PRON have_VERB far_ADV ,_PUNCT far_ADV too_ADV much_ADJ time_NOUN on_ADP your_PRON hands_NOUN )_PUNCT ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: In any case , this toolbar is extremely nasty .
tags: ADV CCONJ DET NOUN AUX ADJ ADV ADJ PUNCT
tagged_tokens: In_ADV any_CCONJ case_DET ,_PUNCT this_DET toolbar_NOUN is_AUX extremely_ADV nasty_ADJ ._PUNCT

B) tokens: Nevertheless , this toolbar is truly awful .
tags: CONJ DET NOUN AUX ADV ADJ PUNCT
tagged_tokens: Nevertheless_CONJ ,_PUNCT this_DET toolbar_NOUN is_AUX truly_ADV awful_ADJ ._PUNCT

C) tokens: In all likelihood , this toolbar is quite calamitous .
tags: ADV ADV , DET NOUN AUX ADJ ADV ADJ PUNCT
tagged_tokens: In_ADV all_ADV likelihood_NOUN ,_PUNCT this_DET toolbar_NOUN is_AUX quite_ADV calamitous_ADJ ._PUNCTD) tokens: However , this toolbar is really bad news .
tags: ADV PUNCT DET NOUN AUX ADV ADJ NOUN PUNCT
tagged_tokens: However_ADV ,_PUNCT this_DET toolbar_NOUN is_AUX really_ADV bad_ADJ news_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Iran proclaims it is fashioning atomic power without wishing atomic arms .
tags: PROPN VERB PRON AUX VERB ADJ NOUN SCONJ VERB ADJ NOUN PUNCT
tagged_tokens: Iran_PROPN proclaims_VERB it_PRON is_AUX fashioning_VERB atomic_ADJ power_NOUN without_SCONJ wishing_VERB atomic_ADJ arms_NOUN ._PUNCT

B) tokens: Iran states it is making atomic force without desiring atomic weapons .
tags: PROPN VERB PRON AUX VERB ADJ NOUN SCONJ VERB ADJ NOUN PUNCT
tagged_tokens: Iran_PROPN states_VERB it_PRON is_AUX making_VERB atomic_ADJ force_NOUN without_SCONJ desiring_VERB atomic_ADJ weapons_NOUN ._PUNCT

C) tokens: Iran avows it is generating nuclear energy without coveting nuclear arms .
tags: PROPN VERB PRON AUX VERB ADJ NOUN SCONJ VERB ADJ NOUN PUNCT
tagged_tokens: Iran_PROPN avows_VERB it_PRON is_AUX generating_VERB nuclear_ADJ energy_NOUN without_SCONJ coveting_VERB nuclear_ADJ arms_NOUN ._PUNCTD) tokens: Iran says it is creating nuclear energy without wanting nuclear weapons .
tags: PROPN VERB PRON AUX VERB ADJ NOUN SCONJ VERB ADJ NOUN PUNCT
tagged_tokens: Iran_PROPN says_VERB it_PRON is_AUX creating_VERB nuclear_ADJ energy_NOUN without_SCONJ wanting_VERB nuclear_ADJ weapons_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: A person can have suspicions about the Iranian Government .
tags: DET NOUN AUX VERB DET ADJ NOUN PUNCT
tagged_tokens: A_DET person_NOUN can_AUX have_VERB suspicions_NOUN about_DET the_ADJ Iranian_ADJ Government_NOUN ._PUNCT

B) tokens: One can doubt the Iranian Government .
tags: PRON AUX VERB DET ADJ NOUN PUNCT
tagged_tokens: One_PRON can_AUX doubt_VERB the_DET Iranian_ADJ Government_NOUN ._PUNCT

C) tokens: A person can suspect the Iranian Authorities .
tags: DET NOUN AUX VERB DET ADJ NOUN PUNCT
tagged_tokens: A_DET person_NOUN can_AUX suspect_VERB the_DET Iranian_ADJ Authorities_NOUN ._PUNCTD) tokens: One can suspect the Iranian Government .
tags: PRON AUX VERB DET ADJ NOUN PUNCT
tagged_tokens: One_PRON can_AUX suspect_VERB the_DET Iranian_ADJ Government_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Tokens: However there be no verification .
tags: CCONJ PRON VERB DET NOUN PUNCT
tagged_tokens: However_CCONJ there_PRON be_VERB no_DET verification_NOUN ._PUNCT

B) tokens: Proofs: But there be no substantiation .
tags: NOUN: CCONJ PRON VERB DET NOUN PUNCT
tagged_tokens: Proofs:_NOUN But_CCONJ there_PRON be_VERB no_DET substantiation_NOUN ._PUNCT

C) tokens: Evidence: But there be no evidence .
tags: NOUN: CCONJ PRON VERB DET NOUN PUNCT
tagged_tokens: Evidence:_NOUN But_CCONJ there_PRON be_VERB no_DET evidence_NOUN ._PUNCTD) tokens: But there is no proof .
tags: CCONJ PRON VERB DET NOUN PUNCT
tagged_tokens: But_CCONJ there_PRON is_VERB no_DET proof_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: They are definitely being nasty to the United Nations Security Council in regard to the non-proliferation treaty .
tags: PRON AUX ADV AUX ADJ to ADP DET PROPN PROPN PROPN PROPN ADP NOUN ADP DET NOUN NOUN PUNCT
tagged_tokens: They_PRON are_AUX definitely_ADV being_AUX nasty_ADJ to_ADP the_DET United_PROPN Nations_PROPN Security_PROPN Council_PROPN in_ADP regard_NOUN to_ADP the_DET non-proliferation_NOUN treaty_NOUN ._PUNCT

B) tokens: They are clearly being evil to the United Nations Security Council in reference to the anti-spread treaty .
tags: PRON AUX ADV AUX ADJ to ADP DET PROPN PROPN PROPN PROPN ADP NOUN ADP DET NOUN NOUN PUNCT
tagged_tokens: They_PRON are_AUX clearly_ADV being_AUX evil_ADJ to_ADP the_DET United_PROPN Nations_PROPN Security_PROPN Council_PROPN in_ADP reference_NOUN to_ADP the_DET anti-spread_NOUN treaty_NOUN ._PUNCT

C) tokens: They are surely being unkind to the United Nations Security Council with relation to the non-proliferation treaty .
tags: PRON AUX ADV AUX ADJ to ADP DET PROPN PROPN PROPN PROPN ADP NOUN ADP DET NOUN NOUN PUNCT
tagged_tokens: They_PRON are_AUX surely_ADV being_AUX unkind_ADJ to_ADP the_DET United_PROPN Nations_PROPN Security_PROPN Council_PROPN with_ADP relation_NOUN to_ADP the_DET non-proliferation_NOUN treaty_NOUN ._PUNCTD) tokens: They are certainly being nasty to the United Nations Security Council in connection with the anti-proliferation treaty .
tags: PRON AUX ADV AUX ADJ ADP DET PROPN PROPN PROPN PROPN ADP NOUN ADP DET NOUN NOUN PUNCT
tagged_tokens: They_PRON are_AUX certainly_ADV being_AUX nasty_ADJ to_ADP the_DET United_PROPN Nations_PROPN Security_PROPN Council_PROPN in_ADP connection_NOUN with_ADP the_DET anti-proliferation_NOUN treaty_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: The_DET President_PROPN has_AUX also_ADV expressed_VERB he_PRON would_AUX like_VERB to_PART discern_VERB Israel_PROPN removed_VERB from_ADP the_DET map_NOUN which_PRON he_PRON could_AUX n't_PART even_ADV initiate_VERB to_PART try_VERB without_ADP nuclear_ADJ weapons_NOUN ._PUNCT
tags: DET PROPN AUX ADV VERB PRON AUX VERB PART VERB PROPN VERB ADP DET NOUN PRON PRON AUX PART ADV VERB PART VERB ADP ADJ NOUN PUNCT
tagged_tokens: The_DET President_PROPN has_AUX also_ADV expressed_VERB he_PRON would_AUX like_VERB to_PART discern_VERB Israel_PROPN removed_VERB from_ADP the_DET map_NOUN which_PRON he_PRON could_AUX n't_PART even_ADV initiate_VERB to_PART try_VERB without_ADP nuclear_ADJ weapons_NOUN ._PUNCT

B) tokens: The_DET President_PROPN has_AUX also_ADV verbalized_VERB he_PRON would_AUX fancy_VERB to_PART observe_VERB Israel_PROPN eradicated_VERB from_ADP the_DET map_NOUN which_PRON he_PRON could_AUX n't_PART even_ADV commence_VERB to_PART assay_VERB without_ADP nuclear_ADJ weapons_NOUN ._PUNCT
tags: DET PROPN AUX ADV VERB PRON AUX VERB PART VERB PROPN VERB ADP DET NOUN PRON PRON AUX PART ADV VERB PART VERB ADP ADJ NOUN PUNCT
tagged_tokens: The_DET President_PROPN has_AUX also_ADV verbalized_VERB he_PRON would_AUX fancy_VERB to_PART observe_VERB Israel_PROPN eradicated_VERB from_ADP the_DET map_NOUN which_PRON he_PRON could_AUX n't_PART even_ADV commence_VERB to_PART assay_VERB without_ADP nuclear_ADJ weapons_NOUN ._PUNCT

C) tokens: The_DET President_PROPN has_AUX too_ADV said_VERB he_PRON would_AUX savor_VERB to_PART witness_VERB Israel_PROPN deleted_VERB from_ADP the_DET map_NOUN which_PRON he_PRON could_AUX n't_PART even_ADV begin_VERB to_PART try_VERB without_ADP atomic_ADJ weapons_NOUN ._PUNCT
tags: DET PROPN AUX ADV VERB PRON AUX VERB PART VERB PROPN VERB ADP DET NOUN PRON PRON AUX PART ADV VERB PART VERB ADP ADJ NOUN PUNCT
tagged_tokens: The_DET President_PROPN has_AUX too_ADV said_VERB he_PRON would_AUX savor_VERB to_PART witness_VERB Israel_PROPN deleted_VERB from_ADP the_DET map_NOUN which_PRON he_PRON could_AUX n't_PART even_ADV begin_VERB to_PART try_VERB without_ADP atomic_ADJ weapons_NOUN ._PUNCTD) tokens: The President has also said he would like to see Israel wiped off the map which he could n't even begin to try without nuclear weapons .
tags: DET PROPN AUX ADV VERB PRON AUX VERB PART VERB PROPN VERB ADP DET NOUN PRON PRON AUX PART ADV VERB PART VERB ADP ADJ NOUN PUNCT
tagged_tokens: The_DET President_PROPN has_AUX also_ADV said_VERB he_PRON would_AUX like_VERB to_PART see_VERB Israel_PROPN wiped_VERB off_ADP the_DET map_NOUN which_PRON he_PRON could_AUX n't_PART even_ADV begin_VERB to_PART try_VERB without_ADP nuclear_ADJ weapons_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Many individuals want to use diplomacy with Iran instead of military pressure .
tags: ADJ NOUN VERB PART VERB NOUN with ADP PROPN instead ADP ADP ADJ NOUN PUNCT
tagged_tokens: Many_ADJ individuals_NOUN want_VERB to_PART use_VERB diplomacy_NOUN with_ADP Iran_PROPN instead_ADP of_ADP military_ADJ pressure_NOUN ._PUNCT

B) tokens: A lot of people want to use diplomacy with Iran rather than military push .
tags: DET NOUN VERB PART VERB NOUN with ADP PROPN rather ADP ADP ADJ NOUN PUNCT
tagged_tokens: A_DET lot_NOUN of_ADP people_NOUN want_VERB to_PART use_VERB diplomacy_NOUN with_ADP Iran_PROPN rather_ADP than_ADP military_ADJ push_NOUN ._PUNCT

C) tokens: Numerous people desire to utilize diplomacy with Iran instead of military force .
tags: NUM NOUN DESIRE PART VERB NOUN with ADP PROPN rather ADP ADP ADJ NOUN PUNCT
tagged_tokens: Numerous_NUM people_NOUN desire_VERB to_PART utilize_VERB diplomacy_NOUN with_ADP Iran_PROPN rather_ADP than_ADP military_ADJ force_NOUN ._PUNCTD) tokens: Many people want to use diplomacy with Iran rather than military pressure .
tags: ADJ NOUN VERB PART VERB NOUN ADP PROPN ADP ADP ADJ NOUN PUNCT
tagged_tokens: Many_ADJ people_NOUN want_VERB to_PART use_VERB diplomacy_NOUN with_ADP Iran_PROPN rather_ADP than_ADP military_ADJ pressure_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: But would diplomacy be fruitful ?
tags: CCONJ AUX NOUN ADJ PUNCT
tagged_tokens: But_CCONJ would_AUX diplomacy_NOUN fruitful_ADJ ?_PUNCT

B) tokens: But will statecraft bear fruit ?
tags: CCONJ AUX NOUN VERB PUNCT
tagged_tokens: But_CCONJ will_AUX statecraft_NOUN bear_VERB fruit_PUNCT

C) tokens: But will statesmanship serve ?
tags: CCONJ AUX NOUN VERB PUNCT
tagged_tokens: But_CCONJ will_AUX statesmanship_NOUN serve_VERB ?_PUNCTD) tokens: But will diplomacy work ?
tags: CCONJ AUX NOUN VERB PUNCT
tagged_tokens: But_CCONJ will_AUX diplomacy_NOUN work_VERB ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: And can somebody use military pressure without verification ?
tags: CCONJ AUX somebody VERB military pressure ADP verification PUNCT
tagged_tokens: And_CCONJ can_AUX somebody_PRON use_VERB military_ADJ pressure_NOUN without_ADP verification_NOUN ?_PUNCT

B) tokens: And might anybody use military pressure devoid of verification ?
tags: CCONJ AUX anybody VERB military pressure ADP verification PUNCT
tagged_tokens: And_CCONJ might_AUX anybody_PRON use_VERB military_ADJ pressure_NOUN devoid_ADP verification_NOUN ?_PUNCT

C) tokens: And can one use military pressure devoid of confirmation ?
tags: CCONJ AUX one VERB military pressure ADP confirmation PUNCT
tagged_tokens: And_CCONJ can_AUX one_PRON use_VERB military_ADJ pressure_NOUN devoid_ADP confirmation_NOUN ?_PUNCTD) tokens: And can anyone use military pressure without proof ?
tags: CCONJ AUX PRON VERB ADJ NOUN ADP NOUN PUNCT
tagged_tokens: And_CCONJ can_AUX anyone_PRON use_VERB military_ADJ pressure_NOUN without_ADP proof_NOUN ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: A reader pointed out which the President viewed the Americans at the embassy as they seized them hostage .
tags: DET NOUN VERB PART ADP DET PROPN VERB DET PROPN PREP DET NOUN ADV PRON VERB PRON NOUN PUNCT
tagged_tokens: A_DET reader_NOUN pointed_VERB out_PART which_ADP the_DET President_PROPN viewed_VERB the_DET Americans_PROPN at_PREP the_DET embassy_NOUN as_ADV they_PRON seized_VERB them_PRON hostage_NOUN ._PUNCT

B) tokens: A reader clarified which the President spied the Americans in the embassy during they kidnapping them hostage .
tags: DET NOUN VERB PART ADP DET PROPN VERB DET PROPN PREP DET NOUN ADP PRON VERB PRON NOUN PUNCT
tagged_tokens: A_DET reader_NOUN clarified_VERB which_PART the_DET President_PROPN spied_VERB the_DET Americans_PROPN in_PREP the_DET embassy_NOUN during_ADP they_PRON kidnapping_VERB them_PRON hostage_NOUN ._PUNCT

C) tokens: A reader indicated out which the President saw the Americans in the embassy when they captured them hostage .
tags: DET NOUN VERB PART ADP DET PROPN VERB DET PROPN PREP DET NOUN ADV PRON VERB PRON NOUN PUNCT
tagged_tokens: A_DET reader_NOUN indicated_VERB out_PART which_ADP the_DET President_PROPN saw_VERB the_DET Americans_PROPN in_PREP the_DET embassy_NOUN when_ADV they_PRON captured_VERB them_PRON hostage_NOUN ._PUNCTD) tokens: One reader pointed out that the President watched the Americans in the embassy when they took them hostage .
tags: NUM NOUN VERB ADP SCONJ DET PROPN VERB DET PROPN ADP DET NOUN ADV PRON VERB PRON NOUN PUNCT
tagged_tokens: One_NUM reader_NOUN pointed_VERB out_ADP that_SCONJ the_DET President_PROPN watched_VERB the_DET Americans_PROPN in_ADP the_DET embassy_NOUN when_ADV they_PRON took_VERB them_PRON hostage_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: He has contested this .
tags: PRON AUX VERB PRON PUNCT
tagged_tokens: He_PRON has_AUX contested_VERB this_PRON ._PUNCT

B) tokens: He has contradicted this .
tags: PRON AUX VERB PRON PUNCT
tagged_tokens: He_PRON has_AUX contradicted_VERB this_PRON ._PUNCT

C) tokens: He has opposed this .
tags: PRON AUX VERB PRON PUNCT
tagged_tokens: He_PRON has_AUX opposed_VERB this_PRON ._PUNCTD) tokens: He has denied this .
tags: PRON AUX VERB PRON PUNCT
tagged_tokens: He_PRON has_AUX denied_VERB this_PRON ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: We wo n't have to trust him .
tags: PRON AUX NEG PART VERB PART VERB PRON PUNCT
tagged_tokens: We_PRON wo n't_NEG have_VERB to_PART trust_VERB him_PRON ._PUNCT

B) tokens: We need n't trust him .
tags: PRON AUX NEG PART VERB PRON PUNCT
tagged_tokens: We_PRON need_AUX n't_NEG trust_VERB him_PRON ._PUNCT

C) tokens: We must n't believe him .
tags: PRON AUX NEG PART VERB PRON PUNCT
tagged_tokens: We_PRON must_AUX n't_NEG believe_VERB him_PRON ._PUNCTD) tokens: We do n't have to believe him .
tags: PRON AUX PART VERB PART VERB PRON PUNCT
tagged_tokens: We_PRON do_AUX n't_PART have_VERB to_PART believe_VERB him_PRON ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: But we ca n't verify it .
tags: CCONJ PRON AUX PART VERB PRON PUNCT
tagged_tokens: But_CCONJ we_PRON ca_AUX n't_PART verify_VERB it_PRON ._PUNCT

B) tokens: But we ca n't validate it .
tags: CCONJ PRON AUX PART VERB PRON PUNCT
tagged_tokens: But_CCONJ we_PRON ca_AUX n't_PART validate_VERB it_PRON ._PUNCT

C) tokens: But we ca n't confirm it .
tags: CCONJ PRON AUX PART VERB PRON PUNCT
tagged_tokens: But_CCONJ we_PRON ca_AUX n't_PART confirm_VERB it_PRON ._PUNCTD) tokens: But we ca n't prove it .
tags: CCONJ PRON AUX PART VERB PRON PUNCT
tagged_tokens: But_CCONJ we_PRON ca_AUX n't_PART prove_VERB it_PRON ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: It sure seems that Iranians repeatedly make avowals and then mask behind dearth of substantiation .
tags: PRON ADV VERB SCONJ PROPN RB VERB NOUN CCONJ ADV VERB ADP NOUN ADP NOUN PUNCT
tagged_tokens: It_PRON sure_ADV seems_VERB that_SCONJ Iranians_PROPN repeatedly_RB make_VERB avowals_NOUN and_CCONJ then_ADV mask_VERB behind_ADP dearth_NOUN of_ADP substantiation_NOUN ._PUNCT

B) tokens: It does figure that Iranians customarily make proclamations and then wall behind lack of confirmation .
tags: PRON AUX VERB SCONJ PROPN ADV VERB NOUN CCONJ ADV VERB ADP NOUN ADP NOUN PUNCT
tagged_tokens: It_PRON does_AUX figure_VERB that_SCONJ Iranians_PROPN customarily_ADV make_VERB proclamations_NOUN and_CCONJ then_ADV wall_VERB behind_ADP lack_NOUN of_ADP confirmation_NOUN ._PUNCT

C) tokens: It is clear that Iranians regularly make affirmations and then shroud behind lack of substantiation .
tags: PRON COP SCONJ PROPN ADV VERB NOUN CCONJ ADV VERB ADP NOUN ADP NOUN PUNCT
tagged_tokens: It_PRON is_COP clear_ADJ that_SCONJ Iranians_PROPN regularly_ADV make_VERB affirmations_NOUN and_CCONJ then_ADV shroud_VERB behind_ADP lack_NOUN of_ADP substantiation_NOUN ._PUNCTD) tokens: It does seem that Iranians frequently make statements and then hide behind lack of proof .
tags: PRON AUX VERB SCONJ PROPN ADV VERB NOUN CCONJ ADV VERB ADP NOUN ADP NOUN PUNCT
tagged_tokens: It_PRON does_AUX seem_VERB that_SCONJ Iranians_PROPN frequently_ADV make_VERB statements_NOUN and_CCONJ then_ADV hide_VERB behind_ADP lack_NOUN of_ADP proof_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Furious people shouted anti-American expressions in the western metropolis of Fallujah ( inhabitants 256,000 ) as the police security personnel who were killed in a friendly shooting incident by US soldiers were laid to rest on Saturday .
tags: ADJ NOUN VERB ADJ NOUN ADP DET ADJ NOUN ADP PROPN PUNCT NOUN NUM PUNCT SCONJ DET NOUN NOUN PERSONNEL who_PRON VERB kill_VERB in_ADP a_DET friendly_ADJ shoot_NOUN incident_NOUN by_ADP US_PROPN soldier_NOUN be_AUX lay_VERB to_ADP rest_NOUN on_ADP Saturday_PROPN .
tagged_tokens: Furious_ADJ people_NOUN shout_VERB anti-American_ADJ expression_NOUN in_ADP the_DET western_ADJ metropolis_NOUN of_ADP Fallujah_PROPN (_PUNCT inhabitant_NOUN 256,000_NUM )_PUNCT as_SCONJ the_DET police_NOUN security_NOUN personnel_NOUN who_PRON be_AUX kill_VERB in_ADP a_DET friendly_ADJ shoot_NOUN incident_NOUN by_ADP US_PROPN soldier_NOUN be_AUX lay_VERB to_ADP rest_NOUN on_ADP Saturday_PROPN .

B) tokens: Irate mobs chanted anti-US slogans in the western city of Fallujah ( 256,000 population ) as the police security forces who were assassinated in a friendly fire incident by US military forces were laid to rest on Saturday .
tags: ADJ NOUN VERB ADJ NOUN ADP DET ADJ NOUN ADP PROPN PUNCT NOUN NUM PUNCT SCONJ DET NOUN NOUN FORCE who_PRON VERB assassinate_VERB in_ADP a_DET friendly_ADJ fire_NOUN incident_NOUN by_ADP US_PROPN military_ADJ force_NOUN be_AUX lay_VERB to_ADP rest_NOUN on_ADP Saturday_PROPN .
tagged_tokens: Irate_ADJ mob_NOUN chant_VERB anti-US_ADJ slogan_NOUN in_ADP the_DET western_ADJ city_NOUN of_ADP Fallujah_PROPN (_PUNCT 256,000_NOUN population_NOUN )_PUNCT as_SCONJ the_DET police_NOUN security_NOUN force_NOUN who_PRON be_AUX assassinate_VERB in_ADP a_DET friendly_ADJ fire_NOUN incident_NOUN by_ADP US_PROPN military_ADJ force_NOUN be_AUX lay_VERB to_ADP rest_NOUN on_ADP Saturday_PROPN .

C) tokens: Furious masses shouted anti-American adages in the western city of Fallujah ( pop. 256,000 ) as the security police killed in a friendly fire incident by US troops were buried on Saturday .
tags: ADJ NOUN VERB ADJ NOUN ADP DET ADJ NOUN ADP PROPN PUNCT NOUN NUM PUNCT SCONJ DET NOUN NOUN kill_VERB in_ADP a_DET friendly_ADJ fire_NOUN incident_NOUN by_ADP US_PROPN troop_NOUN be_AUX bury_VERB on_ADP Saturday_PROPN .
tagged_tokens: Furious_ADJ mass_NOUN shout_VERB anti-American_ADJ adage_NOUN in_ADP the_DET western_ADJ city_NOUN of_ADP Fallujah_PROPN (_PUNCT pop._NOUN 256,000_NUM )_PUNCT as_SCONJ the_DET security_NOUN police_NOUN kill_VERB in_ADP a_DET friendly_ADJ fire_NOUN incident_NOUN by_ADP US_PROPN troop_NOUN be_AUX bury_VERB on_ADP Saturday_PROPN .D) tokens: Angry crowds chanted anti-American slogans in the western city of Falluja ( pop. 256,000 ) as the security police killed in a friendly fire incident by US troops were buried on Saturday .
tags: ADJ NOUN VERB ADJ NOUN ADP DET ADJ NOUN ADP PROPN PUNCT NOUN NUM PUNCT SCONJ DET NOUN NOUN VERB ADP DET ADJ NOUN NOUN ADP PROPN NOUN AUX VERB ADP PROPN PUNCT
tagged_tokens: Angry_ADJ crowds_NOUN chanted_VERB anti-American_ADJ slogans_NOUN in_ADP the_DET western_ADJ city_NOUN of_ADP Falluja_PROPN (_PUNCT pop._NOUN 256,000_NUM )_PUNCT as_SCONJ the_DET security_NOUN police_NOUN killed_VERB in_ADP a_DET friendly_ADJ fire_NOUN incident_NOUN by_ADP US_PROPN troops_NOUN were_AUX buried_VERB on_ADP Saturday_PROPN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: The clerics requested conversations with regional US heads .
tags: DET NOUN VERB NOUN ADP ADJ PROPN NOUN PUNCT
tagged_tokens: The_DET clerics_NOUN requested_VERB conversations_NOUN with_ADP regional_ADJ US_PROPN heads_NOUN ._PUNCT

B) tokens: The holy men demanded talks with local US officials .
tags: DET NOUN VERB NOUN ADP ADJ PROPN NOUN PUNCT
tagged_tokens: The_DET holy_NOUN men_NOUN demanded_VERB talks_NOUN with_ADP local_ADJ US_PROPN officials_NOUN ._PUNCT

C) tokens: The religious men asked for talks with regional American officials .
tags: DET NOUN AUX VERB NOUN ADP ADJ ADJ NOUN PUNCT
tagged_tokens: The_DET religious_NOUN men_NOUN asked_VERB for_ADP talks_NOUN with_ADP regional_ADJ American_ADJ officials_NOUN ._PUNCTD) tokens: The clerics demanded talks with local US commanders .
tags: DET NOUN VERB NOUN ADP ADJ PROPN NOUN PUNCT
tagged_tokens: The_DET clerics_NOUN demanded_VERB talks_NOUN with_ADP local_ADJ US_PROPN commanders_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Falluja has long been agitated by tense relations with the US soldiers there , since local Sunnis either remain dedicated to Arab nationalism or have become Sunni extremists or even fanatics .
tags: PROPN AUX ADV AUX VERB ADP ADJ NOUN ADP DET PROPN NOUN ADV PUNCT SCONJ ADJ PROPN CCONJ VERB ADJ ADP ADJ NOUN CCONJ AUX VERB ADJ NOUN CCONJ ADV NOUN PUNCT
tagged_tokens: Falluja_PROPN has_AUX long_ADV been_AUX agitated_VERB by_ADP tense_ADJ relations_NOUN with_ADP the_DET US_PROPN soldiers_NOUN there_ADV ,_PUNCT since_SCONJ local_ADJ Sunnis_PROPN either_CCONJ remain_VERB dedicated_ADJ to_ADP Arab_ADJ nationalism_NOUN or_CCONJ have_AUX become_VERB Sunni_ADJ extremists_NOUN or_CCONJ even_ADV fanatics_NOUN ._PUNCT

B) tokens: Falluja has long been vexed by strained relations with the US soldiers there , since local Sunnis either stay loyal to Arab nationalism or have evolved into Sunni hardliners or even maniacs .
tags: PROPN AUX ADV AUX VERB ADP ADJ NOUN ADP DET PROPN NOUN ADV PUNCT SCONJ ADJ PROPN CCONJ VERB ADJ ADP ADJ NOUN CCONJ AUX VERB VERB ADP ADJ NOUN CCONJ ADV NOUN PUNCT
tagged_tokens: Falluja_PROPN has_AUX long_ADV been_AUX vexed_VERB by_ADP strained_ADJ relations_NOUN with_ADP the_DET US_PROPN soldiers_NOUN there_ADV ,_PUNCT since_SCONJ local_ADJ Sunnis_PROPN either_CCONJ stay_VERB loyal_ADJ to_ADP Arab_ADJ nationalism_NOUN or_CCONJ have_AUX evolved_VERB into_ADP Sunni_ADJ hardliners_NOUN or_CCONJ even_ADV maniacs_NOUN ._PUNCT

C) tokens: Falluja has long been convulsed by tense relations with the US soldiers there , since local Sunnis either stand fast to Arab nationalism or have transitioned into Sunni fundamentalists or even zealots .
tags: PROPN AUX ADV AUX VERB ADP ADJ NOUN ADP DET PROPN NOUN ADV PUNCT SCONJ ADJ PROPN CCONJ VERB ADJ ADP ADJ NOUN CCONJ AUX VERB VERB ADP ADJ NOUN CCONJ ADV NOUN PUNCT
tagged_tokens: Falluja_PROPN has_AUX long_ADV been_AUX convulsed_VERB by_ADP tense_ADJ relations_NOUN with_ADP the_DET US_PROPN soldiers_NOUN there_ADV ,_PUNCT since_SCONJ local_ADJ Sunnis_PROPN either_CCONJ stand_VERB fast_ADJ to_ADP Arab_ADJ nationalism_NOUN or_CCONJ have_AUX transitioned_VERB into_ADP Sunni_ADJ fundamentalists_NOUN or_CCONJ even_ADV zealots_NOUN ._PUNCTD) tokens: Falluja has long been roiled by tense relations with the US soldiers there , since local Sunnis either remain committed to Arab nationalism or have become Sunni fundamentalists or even radicals .
tags: PROPN AUX ADV AUX VERB ADP ADJ NOUN ADP DET PROPN NOUN ADV PUNCT SCONJ ADJ PROPN CCONJ VERB ADJ ADP ADJ NOUN CCONJ AUX VERB ADJ NOUN CCONJ ADV NOUN PUNCT
tagged_tokens: Falluja_PROPN has_AUX long_ADV been_AUX roiled_VERB by_ADP tense_ADJ relations_NOUN with_ADP the_DET US_PROPN soldiers_NOUN there_ADV ,_PUNCT since_SCONJ local_ADJ Sunnis_PROPN either_CCONJ remain_VERB committed_ADJ to_ADP Arab_ADJ nationalism_NOUN or_CCONJ have_AUX become_VERB Sunni_ADJ fundamentalists_NOUN or_CCONJ even_ADV radicals_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Towns such as Fallujah received special treatment from Saddam and enjoyed an unfair share of the country 's riches and power .
tags: NOUN ADJ ADP PROPN VERB ADJ NOUN from ADP PROPN CCONJ VERB DET ADJ share NOUN of ADP DET NOUN PART NOUN CCONJ NOUN PUNCT
tagged_tokens: Towns_NOUN such_ADJ as_ADP Fallujah_PROPN received_VERB special_ADJ treatment_NOUN from_ADP Saddam_PROPN CCONJ enjoyed_VERB an_DET unfair_ADJ share_NOUN of_ADP the_DET country_NOUN 's_PART riches_NOUN and_CCONJ power_NOUN ._PUNCT

B) tokens: Cities like Fallujah got special treatment from Saddam and relished a disproportionate piece of the nation 's money and authority .
tags: NOUN like PROPN got special treatment from PROPN CCONJ relished DET disproportionate piece of the nation 's money and authority PUNCT
tagged_tokens: Cities_NOUN like_ADP Fallujah_PROPN got_VERB special_ADJ treatment_NOUN from_ADP Saddam_PROPN CCONJ relished_VERB a_DET disproportionate_ADJ piece_NOUN of_ADP the_DET nation_NOUN 's_PART money_NOUN and_CCONJ authority_NOUN ._PUNCT

C) tokens: Urban centers like Fallujah received preferential treatment from Saddam and enjoyed a disproportionate amount of the country 's resources and influence .
tags: NOUN like PROPN received preferential treatment from PROPN CCONJ enjoyed a disproportionate amount of the country 's resources and influence PUNCT
tagged_tokens: Urban_NOUN centers_NOUN like_ADP Fallujah_PROPN received_VERB preferential_ADJ treatment_NOUN from_ADP Saddam_PROPN CCONJ enjoyed_VERB a_DET disproportionate_ADJ amount_NOUN of_ADP the_DET country_NOUN 's_PART resources_NOUN and_CCONJ influence_NOUN ._PUNCTD) tokens: Cities such as Falluja received special treatment from Saddam and enjoyed a disproportionate share of the country 's wealth and power .
tags: NOUN ADJ ADP PROPN VERB ADJ NOUN ADP PROPN CCONJ VERB DET ADJ NOUN ADP DET NOUN PART NOUN CCONJ NOUN PUNCT
tagged_tokens: Cities_NOUN such_ADJ as_ADP Falluja_PROPN received_VERB special_ADJ treatment_NOUN from_ADP Saddam_PROPN and_CCONJ enjoyed_VERB a_DET disproportionate_ADJ share_NOUN of_ADP the_DET country_NOUN 's_PART wealth_NOUN and_CCONJ power_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: They realize that the American presence means for them a decline , and a promotion of the Shiites and Kurds , and they refuse to go gently .
tags: PRON VERB SCONJ DET ADJ NOUN VERB ADP PRON DET NOUN PUNCT CCONJ DET NOUN ADP DET PROPN CCONJ PROPN PUNCT CCONJ PRON VERB PART VERB ADV PUNCT
tagged_tokens: They_PRON realize_VERB that_SCONJ the_DET American_ADJ presence_NOUN means_VERB for_ADP them_PRON a_DET decline_NOUN ,_PUNCT and_CCONJ a_DET promotion_NOUN of_ADP the_DET Shiites_PROPN and_CCONJ Kurds_PROPN ,_PUNCT and_CCONJ they_PRON refuse_VERB to_PART go_VERB gently_ADV ._PUNCT

B) tokens: They comprehend that the American coming about indicates for them a decline , and a rise of the Shiites and Kurds , and they refuse to go calmly .
tags: PRON VERB SCONJ DET ADJ NOUN VERB ADP PRON DET NOUN PUNCT CCONJ DET NOUN ADP DET PROPN CCONJ PROPN PUNCT CCONJ PRON VERB PART VERB ADV PUNCT
tagged_tokens: They_PRON comprehend_VERB that_SCONJ the_DET American_ADJ coming_NOUN about_VERB indicates_VERB for_ADP them_PRON a_DET decline_NOUN ,_PUNCT and_CCONJ a_DET rise_NOUN of_ADP the_DET Shiites_PROPN and_CCONJ Kurds_PROPN ,_PUNCT and_CCONJ they_PRON refuse_VERB to_PART go_VERB calmly_ADV ._PUNCT

C) tokens: They understand that the American advent signifies for them a reduction , and an elevation of the Shiites and Kurds , and they decline to go peacefully .
tags: PRON VERB SCONJ DET ADJ NOUN VERB ADP PRON DET NOUN PUNCT CCONJ DET NOUN ADP DET PROPN CCONJ PROPN PUNCT CCONJ PRON VERB PART VERB ADV PUNCT
tagged_tokens: They_PRON understand_VERB that_SCONJ the_DET American_ADJ advent_NOUN signifies_VERB for_ADP them_PRON a_DET reduction_NOUN ,_PUNCT and_CCONJ an_DET elevation_NOUN of_ADP the_DET Shiites_PROPN and_CCONJ Kurds_PROPN ,_PUNCT and_CCONJ they_PRON decline_VERB to_PART go_VERB peacefully_ADV ._PUNCTD) tokens: They know that the American advent implies for them a demotion , and an elevation of the Shiites and Kurds , and they refuse to go quietly .
tags: PRON VERB SCONJ DET ADJ NOUN VERB ADP PRON DET NOUN PUNCT CCONJ DET NOUN ADP DET PROPN CCONJ PROPN PUNCT CCONJ PRON VERB PART VERB ADV PUNCT
tagged_tokens: They_PRON know_VERB that_SCONJ the_DET American_ADJ advent_NOUN implies_VERB for_ADP them_PRON a_DET demotion_NOUN ,_PUNCT and_CCONJ an_DET elevation_NOUN of_ADP the_DET Shiites_PROPN and_CCONJ Kurds_PROPN ,_PUNCT and_CCONJ they_PRON refuse_VERB to_PART go_VERB quietly_ADV ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: View http://www.gulf-news.com/Articles/news.asp?ArticleID=97508
tags: VERB X
tagged_tokens: View_VERB http://www.gulf-news.com/Articles/news.asp?ArticleID=97508_X

B) tokens: Behold http://www.gulf-news.com/Articles/news.asp?ArticleID=97508
tags: VERB X
tagged_tokens: Behold_VERB http://www.gulf-news.com/Articles/news.asp?ArticleID=97508_X

C) tokens: Contemplate http://www.gulf-news.com/Articles/news.asp?ArticleID=97508
tags: VERB X
tagged_tokens: Contemplate_VERB http://www.gulf-news.com/Articles/news.asp?ArticleID=97508_XD) tokens: See http://www.gulf-news.com/Articles/news.asp?ArticleID=97508
tags: VERB X
tagged_tokens: See_VERB http://www.gulf-news.com/Articles/news.asp?ArticleID=97508_X
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: The present ballot is a small amount confounding .
tags: DET ADJ NOUN AUX DET ADJ ADJ PUNCT
tagged_tokens: The_DET present_ADJ ballot_NOUN is_AUX a_DET small_ADJ amount_ADJ confounding_ADJ ._PUNCT

B) tokens: The existent ballot is a spot confusing .
tags: DET ADJ NOUN AUX DET ADJ ADJ PUNCT
tagged_tokens: The_DET existent_ADJ ballot_NOUN is_AUX a_DET spot_ADJ confusing_ADJ ._PUNCT

C) tokens: The existing ballot is a piece confounding .
tags: DET ADJ NOUN AUX DET ADJ ADJ PUNCT
tagged_tokens: The_DET existing_ADJ ballot_NOUN is_AUX a_DET piece_ADJ confounding_ADJ ._PUNCTD) tokens: The actual vote is a little confusing .
tags: DET ADJ NOUN AUX DET ADJ ADJ PUNCT
tagged_tokens: The_DET actual_ADJ vote_NOUN is_AUX a_DET little_ADJ confusing_ADJ ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: stay: John Paul STEVENS delivered the judgment of the Court with respect to Parts I through IV , VI through VI - D - iii , VI - D - v , and VII , in which KENNEDY , SOUTER , GINSBURG , and BREYER joined , and an opinion with respect to Parts V and VI - D - iv , in which SOUTER , GINSBURG , and BREYER joined .
tags: VERB PUNCT PROPN PROPN PROPN VERB DET NOUN ADP DET NOUN ADP NOUN ADP NOUN NUM ADP NUM PUNCT NUM PUNCT NUM PUNCT NOUN PUNCT NUM PUNCT NUM PUNCT NOUN PUNCT NUM PUNCT CCONJ NUM PUNCT ADP PRON PROPN PUNCT PROPN PUNCT PROPN PUNCT CCONJ PROPN VERB PUNCT CCONJ DET NOUN ADP NOUN ADP NOUN NUM CCONJ NUM PUNCT NOUN PUNCT NUM PUNCT ADP PRON PROPN PUNCT PROPN PUNCT CCONJ PROPN VERB PUNCT
tagged_tokens: stay_VERB :_PUNCT John_PROPN Paul_PROPN STEVENS_PROPN delivered_VERB the_DET judgment_NOUN of_ADP the_DET Court_NOUN with_ADP respect_NOUN to_ADP Parts_NOUN I_NUM through_ADP IV_NUM ,_PUNCT VI_NUM through_ADP VI_NUM -_PUNCT D_NOUN -_PUNCT iii_NUM ,_PUNCT VI_NUM -_PUNCT D_NOUN -_PUNCT v_NUM ,_PUNCT and_CCONJ VII_NUM ,_PUNCT in_ADP which_PRON KENNEDY_PROPN ,_PUNCT SOUTER_PROPN ,_PUNCT GINSBURG_PROPN ,_PUNCT and_CCONJ BREYER_PROPN joined_VERB ,_PUNCT and_CCONJ an_DET opinion_NOUN with_ADP respect_NOUN to_ADP Parts_NOUN V_NUM and_CCONJ VI_NUM -_PUNCT D_NOUN -_PUNCT iv_NUM ,_PUNCT in_ADP which_PRON SOUTER_PROPN ,_PUNCT GINSBURG_PROPN ,_PUNCT and_CCONJ BREYER_PROPN joined_VERB ._PUNCT

B) tokens: halt: John Paul STEVENS furnished the judgment of the Court with regard to Parts I through IV , VI through VI - D - iii , VI - D - v , and VII , in which KENNEDY , SOUTER , GINSBURG , and BREYER joined , and an opinion with regard to Parts V and VI - D - iv , in which SOUTER , GINSBURG , and BREYER joined .
tags: VERB PUNCT PROPN PROPN PROPN VERB DET NOUN ADP DET NOUN ADP NOUN ADP NOUN NUM ADP NUM PUNCT NUM PUNCT NUM PUNCT NOUN PUNCT NUM PUNCT NUM PUNCT NOUN PUNCT NUM PUNCT CCONJ NUM PUNCT ADP PRON PROPN PUNCT PROPN PUNCT PROPN PUNCT CCONJ PROPN VERB PUNCT CCONJ DET NOUN ADP NOUN ADP NOUN NUM CCONJ NUM PUNCT NOUN PUNCT NUM PUNCT ADP PRON PROPN PUNCT PROPN PUNCT CCONJ PROPN VERB PUNCT
tagged_tokens: halt_VERB :_PUNCT John_PROPN Paul_PROPN STEVENS_PROPN furnished_VERB the_DET judgment_NOUN of_ADP the_DET Court_NOUN with_ADP regard_NOUN to_ADP Parts_NOUN I_NUM through_ADP IV_NUM ,_PUNCT VI_NUM through_ADP VI_NUM -_PUNCT D_NOUN -_PUNCT iii_NUM ,_PUNCT VI_NUM -_PUNCT D_NOUN -_PUNCT v_NUM ,_PUNCT and_CCONJ VII_NUM ,_PUNCT in_ADP which_PRON KENNEDY_PROPN ,_PUNCT SOUTER_PROPN ,_PUNCT GINSBURG_PROPN ,_PUNCT and_CCONJ BREYER_PROPN joined_VERB ,_PUNCT and_CCONJ an_DET opinion_NOUN with_ADP regard_NOUN to_ADP Parts_NOUN V_NUM and_CCONJ VI_NUM -_PUNCT D_NOUN -_PUNCT iv_NUM ,_PUNCT in_ADP which_PRON SOUTER_PROPN ,_PUNCT GINSBURG_PROPN ,_PUNCT and_CCONJ BREYER_PROPN joined_VERB ._PUNCT

C) tokens: stay: John Paul STEVENS provided the judgment of the Court with regard to Parts I through IV , VI through VI - D - iii , VI - D - v , and VII , in which KENNEDY , SOUTER , GINSBURG , and BREYER concurred , and an opinion with regard to Parts V and VI - D - iv , in which SOUTER , GINSBURG , and BREYER concurred .
tags: VERB PUNCT PROPN PROPN PROPN VERB DET NOUN ADP DET NOUN ADP NOUN ADP NOUN NUM ADP NUM PUNCT NUM PUNCT NUM PUNCT NOUN PUNCT NUM PUNCT NUM PUNCT NOUN PUNCT NUM PUNCT CCONJ NUM PUNCT ADP PRON PROPN PUNCT PROPN PUNCT PROPN PUNCT CCONJ PROPN VERB PUNCT CCONJ DET NOUN ADP NOUN ADP NOUN NUM CCONJ NUM PUNCT NOUN PUNCT NUM PUNCT ADP PRON PROPN PUNCT PROPN PUNCT CCONJ PROPN VERB PUNCT
tagged_tokens: stay_VERB :_PUNCT John_PROPN Paul_PROPN STEVENS_PROPN provided_VERB the_DET judgment_NOUN of_ADP the_DET Court_NOUN with_ADP regard_NOUN to_ADP Parts_NOUN I_NUM through_ADP IV_NUM ,_PUNCT VI_NUM through_ADP VI_NUM -_PUNCT D_NOUN -_PUNCT iii_NUM ,_PUNCT VI_NUM -_PUNCT D_NOUN -_PUNCT v_NUM ,_PUNCT and_CCONJ VII_NUM ,_PUNCT in_ADP which_PRON KENNEDY_PROPN ,_PUNCT SOUTER_PROPN ,_PUNCT GINSBURG_PROPN ,_PUNCT and_CCONJ BREYER_PROPN concurred_VERB ,_PUNCT and_CCONJ an_DET opinion_NOUN with_ADP regard_NOUN to_ADP Parts_NOUN V_NUM and_CCONJ VI_NUM -_PUNCT D_NOUN -_PUNCT iv_NUM ,_PUNCT in_ADP which_PRON SOUTER_PROPN ,_PUNCT GINSBURG_PROPN ,_PUNCT and_CCONJ BREYER_PROPN concurred_VERB ._PUNCTD) tokens: Stay with me now : John Paul STEVENS delivered the opinion of the Court with respect to Parts I through IV , VI through VI - D - iii , VI - D - v , and VII , in which KENNEDY , SOUTER , GINSBURG , and BREYER joined , and an opinion with respect to Parts V and VI - D - iv , in which SOUTER , GINSBURG , and BREYER joined .
tags: VERB ADP PRON ADV PUNCT PROPN PROPN PROPN VERB DET NOUN ADP DET NOUN ADP NOUN ADP NOUN NUM ADP NUM PUNCT NUM ADP NUM PUNCT NOUN PUNCT NUM PUNCT NUM PUNCT NOUN PUNCT NUM PUNCT CCONJ NUM PUNCT ADP PRON PROPN PUNCT PROPN PUNCT PROPN PUNCT CCONJ PROPN VERB PUNCT CCONJ DET NOUN ADP NOUN ADP NOUN NUM CCONJ NUM PUNCT NOUN PUNCT NUM PUNCT ADP PRON PROPN PUNCT PROPN PUNCT CCONJ PROPN VERB PUNCT
tagged_tokens: Stay_VERB with_ADP me_PRON now_ADV :_PUNCT John_PROPN Paul_PROPN STEVENS_PROPN delivered_VERB the_DET opinion_NOUN of_ADP the_DET Court_NOUN with_ADP respect_NOUN to_ADP Parts_NOUN I_NUM through_ADP IV_NUM ,_PUNCT VI_NUM through_ADP VI_NUM -_PUNCT D_NOUN -_PUNCT iii_NUM ,_PUNCT VI_NUM -_PUNCT D_NOUN -_PUNCT v_NUM ,_PUNCT and_CCONJ VII_NUM ,_PUNCT in_ADP which_PRON KENNEDY_PROPN ,_PUNCT SOUTER_PROPN ,_PUNCT GINSBURG_PROPN ,_PUNCT and_CCONJ BREYER_PROPN joined_VERB ,_PUNCT and_CCONJ an_DET opinion_NOUN with_ADP respect_NOUN to_ADP Parts_NOUN V_NUM and_CCONJ VI_NUM -_PUNCT D_NOUN -_PUNCT iv_NUM ,_PUNCT in_ADP which_PRON SOUTER_PROPN ,_PUNCT GINSBURG_PROPN ,_PUNCT and_CCONJ BREYER_PROPN joined_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: KENNEDY recorded an opinion coinciding in portion , in which SOUTER , GINSBURG , and BREYER entered as to Portions I and II .
tags: PROPN VERB DET NOUN coinciding_VERB in_ADP portion_NOUN ,_PUNCT in_ADP which_PRON SOUTER_PROPN ,_PUNCT GINSBURG_PROPN ,_PUNCT and_CCONJ BREYER_PROPN entered_VERB as_ADP to_ADP Portions_NOUN I_NUM and_CCONJ II_NUM PUNCT
tagged_tokens: KENNEDY_PROPN recorded_VERB an_DET opinion_NOUN coinciding_VERB in_ADP portion_NOUN ,_PUNCT in_ADP which_PRON SOUTER_PROPN ,_PUNCT GINSBURG_PROPN ,_PUNCT and_CCONJ BREYER_PROPN entered_VERB as_ADP to_ADP Portions_NOUN I_NUM and_CCONJ II_NUM ._PUNCT

B) tokens: KENNEDY registered an opinion consistent in portion , in which SOUTER , GINSBURG , and BREYER attached as to Portions I and II .
tags: PROPN VERB DET NOUN consistent_ADJ in_ADP portion_NOUN ,_PUNCT in_ADP which_PRON SOUTER_PROPN ,_PUNCT GINSBURG_PROPN ,_PUNCT and_CCONJ BREYER_PROPN attached_VERB as_ADP to_ADP Portions_NOUN I_NUM and_CCONJ II_NUM PUNCT
tagged_tokens: KENNEDY_PROPN registered_VERB an_DET opinion_NOUN consistent_ADJ in_ADP portion_NOUN ,_PUNCT in_ADP which_PRON SOUTER_PROPN ,_PUNCT GINSBURG_PROPN ,_PUNCT and_CCONJ BREYER_PROPN attached_VERB as_ADP to_ADP Portions_NOUN I_NUM and_CCONJ II_NUM ._PUNCT

C) tokens: KENNEDY filed a judgment concurring in fraction , in which SOUTER , GINSBURG , and BREYER joined as to Parts I and II .
tags: PROPN VERB DET judgment_NOUN concurring_VERB in_ADP fraction_NOUN ,_PUNCT in_ADP which_PRON SOUTER_PROPN ,_PUNCT GINSBURG_PROPN ,_PUNCT and_CCONJ BREYER_PROPN joined_VERB as_ADP to_ADP Parts_NOUN I_NUM and_CCONJ II_NUM PUNCT
tagged_tokens: KENNEDY_PROPN filed_VERB a_DET judgment_NOUN concurring_VERB in_ADP fraction_NOUN ,_PUNCT in_ADP which_PRON SOUTER_PROPN ,_PUNCT GINSBURG_PROPN ,_PUNCT and_CCONJ BREYER_PROPN joined_VERB as_ADP to_ADP Parts_NOUN I_NUM and_CCONJ II_NUM ._PUNCTD) tokens: KENNEDY filed an opinion concurring in part , in which SOUTER , GINSBURG , and BREYER joined as to Parts I and II .
tags: PROPN VERB DET NOUN VERB ADP ADJ PUNCT ADP PRON PROPN PUNCT PROPN PUNCT CCONJ PROPN VERB ADP ADP NOUN NUM CCONJ NUM PUNCT
tagged_tokens: KENNEDY_PROPN filed_VERB an_DET opinion_NOUN concurring_VERB in_ADP part_ADJ ,_PUNCT in_ADP which_PRON SOUTER_PROPN ,_PUNCT GINSBURG_PROPN ,_PUNCT and_CCONJ BREYER_PROPN joined_VERB as_ADP to_ADP Parts_NOUN I_NUM and_CCONJ II_NUM ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: THOMAS_PROPN registered_VERB a_DET dissenting_VERB opinion_NOUN ,_PUNCT in_ADP which_PRON SCALIA_PROPN participated_VERB ,_PUNCT and_CCONJ in_ADP which_PRON ALITO_PROPN joined_VERB as_ADP to_ADP all_DET but_ADP Parts_NOUN I_NUM ,_PUNCT II_NUM -_PUNCT C_NOUN -_PUNCT 1_NUM ,_PUNCT and_CCONJ III_NUM -_PUNCT B_NOUN -_PUNCT 2_NUM ._PUNCT
tags: PROPN VERB DET VERB NOUN PUNCT ADP PRON PROPN VERB PUNCT CCONJ ADP PRON PROPN VERB ADP ADP DET ADP NOUN NUM PUNCT NUM PUNCT NOUN PUNCT NUM PUNCT CCONJ NUM PUNCT NOUN PUNCT NUM PUNCT
tagged_tokens: THOMAS_PROPN registered_VERB a_DET dissenting_VERB opinion_NOUN ,_PUNCT in_ADP which_PRON SCALIA_PROPN participated_VERB ,_PUNCT and_CCONJ in_ADP which_PRON ALITO_PROPN joined_VERB as_ADP to_ADP all_DET but_ADP Parts_NOUN I_NUM ,_PUNCT II_NUM -_PUNCT C_NOUN -_PUNCT 1_NUM ,_PUNCT and_CCONJ III_NUM -_PUNCT B_NOUN -_PUNCT 2_NUM ._PUNCT

B) tokens: THOMAS_PROPN filed_VERB a_DET dissenting_VERB judgment_NOUN ,_PUNCT in_ADP which_PRON SCALIA_PROPN came_VERB ,_PUNCT and_CCONJ in_ADP which_PRON ALITO_PROPN joined_VERB as_ADP to_ADP all_DET but_ADP Parts_NOUN I_NUM ,_PUNCT II_NUM -_PUNCT C_NOUN -_PUNCT 1_NUM ,_PUNCT and_CCONJ III_NUM -_PUNCT B_NOUN -_PUNCT 2_NUM ._PUNCT
tags: PROPN VERB DET VERB NOUN PUNCT ADP PRON PROPN VERB PUNCT CCONJ ADP PRON PROPN VERB ADP ADP DET ADP NOUN NUM PUNCT NUM PUNCT NOUN PUNCT NUM PUNCT CCONJ NUM PUNCT NOUN PUNCT NUM PUNCT
tagged_tokens: THOMAS_PROPN filed_VERB a_DET dissenting_VERB judgment_NOUN ,_PUNCT in_ADP which_PRON SCALIA_PROPN came_VERB ,_PUNCT and_CCONJ in_ADP which_PRON ALITO_PROPN joined_VERB as_ADP to_ADP all_DET but_ADP Parts_NOUN I_NUM ,_PUNCT II_NUM -_PUNCT C_NOUN -_PUNCT 1_NUM ,_PUNCT and_CCONJ III_NUM -_PUNCT B_NOUN -_PUNCT 2_NUM ._PUNCT

C) tokens: THOMAS_PROPN drafted_VERB a_DET dissenting_VERB opinion_NOUN ,_PUNCT to_ADP which_PRON SCALIA_PROPN adhered_VERB ,_PUNCT and_CCONJ to_ADP which_PRON ALITO_PROPN acceded_VERB as_ADP to_ADP all_DET but_ADP Parts_NOUN I_NUM ,_PUNCT II_NUM -_PUNCT C_NOUN -_PUNCT 1_NUM ,_PUNCT and_CCONJ III_NUM -_PUNCT B_NOUN -_PUNCT 2_NUM ._PUNCT
tags: PROPN VERB DET VERB NOUN PUNCT ADP PRON PROPN VERB PUNCT CCONJ ADP PRON PROPN VERB ADP ADP DET ADP NOUN NUM PUNCT NUM PUNCT NOUN PUNCT NUM PUNCT CCONJ NUM PUNCT NOUN PUNCT NUM PUNCT
tagged_tokens: THOMAS_PROPN drafted_VERB a_DET dissenting_VERB opinion_NOUN ,_PUNCT to_ADP which_PRON SCALIA_PROPN adhered_VERB ,_PUNCT and_CCONJ to_ADP which_PRON ALITO_PROPN acceded_VERB as_ADP to_ADP all_DET but_ADP Parts_NOUN I_NUM ,_PUNCT II_NUM -_PUNCT C_NOUN -_PUNCT 1_NUM ,_PUNCT and_CCONJ III_NUM -_PUNCT B_NOUN -_PUNCT 2_NUM ._PUNCTD) tokens: THOMAS filed a dissenting opinion , in which SCALIA joined , and in which ALITO joined as to all but Parts I , II - C - 1 , and III - B - 2 .
tags: PROPN VERB DET VERB NOUN PUNCT ADP PRON PROPN VERB PUNCT CCONJ ADP PRON PROPN VERB ADP ADP DET ADP NOUN NUM PUNCT NUM PUNCT NOUN PUNCT NUM PUNCT CCONJ NUM PUNCT NOUN PUNCT NUM PUNCT
tagged_tokens: THOMAS_PROPN filed_VERB a_DET dissenting_VERB opinion_NOUN ,_PUNCT in_ADP which_PRON SCALIA_PROPN joined_VERB ,_PUNCT and_CCONJ in_ADP which_PRON ALITO_PROPN joined_VERB as_ADP to_ADP all_DET but_ADP Parts_NOUN I_NUM ,_PUNCT II_NUM -_PUNCT C_NOUN -_PUNCT 1_NUM ,_PUNCT and_CCONJ III_NUM -_PUNCT B_NOUN -_PUNCT 2_NUM ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: ALITO penned a dissenting opinion , which SCALIA and THOMAS joined in regard to Parts I through III .
tags: ALITO_PROPN penned_VERB a_DET dissenting_VERB opinion_NOUN ,_PUNCT which_PRON SCALIA_PROPN and_CCONJ THOMAS_PROPN joined_VERB in_ADP regard_NOUN to_ADP Parts_NOUN I_NUM through_ADP III_NUM ._PUNCT
tagged_tokens: ALITO_PROPN penned_VERB a_DET dissenting_VERB opinion_NOUN ,_PUNCT which_PRON SCALIA_PROPN and_CCONJ THOMAS_PROPN joined_VERB in_ADP regard_NOUN to_ADP Parts_NOUN I_NUM through_ADP III_NUM ._PUNCT

B) tokens: ALITO submitted a dissenting view , which SCALIA and THOMAS joined with respect to Parts I through III .
tags: ALITO_PROPN submitted_VERB a_DET dissenting_VERB view_NOUN ,_PUNCT which_PRON SCALIA_PROPN and_CCONJ THOMAS_PROPN joined_VERB with_ADP respect_NOUN to_ADP Parts_NOUN I_NUM through_ADP III_NUM ._PUNCT
tagged_tokens: ALITO_PROPN submitted_VERB a_DET dissenting_VERB view_NOUN ,_PUNCT which_PRON SCALIA_PROPN and_CCONJ THOMAS_PROPN joined_VERB with_ADP respect_NOUN to_ADP Parts_NOUN I_NUM through_ADP III_NUM ._PUNCT

C) tokens: ALITO wrote a dissenting judgment , which SCALIA and THOMAS joined with respect to Parts I through III .
tags: ALITO_PROPN wrote_VERB a_DET dissenting_VERB judgment_NOUN ,_PUNCT which_PRON SCALIA_PROPN and_CCONJ THOMAS_PROPN joined_VERB with_ADP respect_NOUN to_ADP Parts_NOUN I_NUM through_ADP III_NUM ._PUNCT
tagged_tokens: ALITO_PROPN wrote_VERB a_DET dissenting_VERB judgment_NOUN ,_PUNCT which_PRON SCALIA_PROPN and_CCONJ THOMAS_PROPN joined_VERB with_ADP respect_NOUN to_ADP Parts_NOUN I_NUM through_ADP III_NUM ._PUNCTD) tokens: ALITO filed a dissenting opinion , in which SCALIA and THOMAS joined as to Parts I through III .
tags: PROPN VERB DET VERB NOUN PUNCT ADP PRON PROPN CCONJ PROPN VERB ADP ADP NOUN NUM ADP NUM PUNCT
tagged_tokens: ALITO_PROPN filed_VERB a_DET dissenting_VERB opinion_NOUN ,_PUNCT in_ADP which_PRON SCALIA_PROPN and_CCONJ THOMAS_PROPN joined_VERB as_ADP to_ADP Parts_NOUN I_NUM through_ADP III_NUM ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: It will take I a small amount of time to scan the entire matter , but I seldom concur with a John Paul Stevens belief .
tags: PRON AUX VERB PRON DET ADJ NOUN PART VERB DET ADJ NOUN PUNCT CCONJ PRON ADV VERB ADP DET PROPN PROPN PROPN NOUN PUNCT
tagged_tokens: It_PRON will_AUX take_VERB I_PRON a_DET small_ADJ amount_NOUN of_PART time_NOUN to_PART scan_VERB the_DET entire_ADJ matter_NOUN ,_PUNCT but_CCONJ I_PRON seldom_ADV concur_VERB with_ADP a_DET John_PROPN Paul_PROPN Stevens_PROPN belief_NOUN ._PUNCT

B) tokens: It will take I a modicum of time to understand the sum content , but I infrequently endorse with a John Paul Stevens judgment .
tags: PRON AUX VERB PRON DET ADJ NOUN PART VERB DET ADJ NOUN PUNCT CCONJ PRON ADV VERB ADP DET PROPN PROPN PROPN NOUN PUNCT
tagged_tokens: It_PRON will_AUX take_VERB I_PRON a_DET modicum_ADJ of_PART time_NOUN to_PART understand_VERB the_DET sum_ADJ content_NOUN ,_PUNCT but_CCONJ I_PRON infrequently_ADV endorse_VERB with_ADP a_DET John_PROPN Paul_PROPN Stevens_PROPN judgment_NOUN ._PUNCT

C) tokens: It 'll take I a piece of time to scrutinize the whole affair , but I sporadically agree with a John Paul Stevens opinion .
tags: PRON AUX VERB PRON DET NOUN PART VERB DET ADJ NOUN PUNCT CCONJ PRON ADV VERB ADP DET PROPN PROPN PROPN NOUN PUNCT
tagged_tokens: It_PRON 'll_AUX take_VERB I_PRON a_DET piece_NOUN of_PART time_NOUN to_PART scrutinize_VERB the_DET whole_ADJ affair_NOUN ,_PUNCT but_CCONJ I_PRON sporadically_ADV agree_VERB with_ADP a_DET John_PROPN Paul_PROPN Stevens_PROPN opinion_NOUN ._PUNCTD) tokens: It will take me a little while to read the whole thing , but I rarely agree with a John Paul Stevens opinion .
tags: PRON AUX VERB PRON DET ADJ NOUN PART VERB DET ADJ NOUN PUNCT CCONJ PRON ADV VERB ADP DET PROPN PROPN PROPN NOUN PUNCT
tagged_tokens: It_PRON will_AUX take_VERB me_PRON a_DET little_ADJ while_NOUN to_PART read_VERB the_DET whole_ADJ thing_NOUN ,_PUNCT but_CCONJ I_PRON rarely_ADV agree_VERB with_ADP a_DET John_PROPN Paul_PROPN Stevens_PROPN opinion_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: I 'll jot down highlights from the judgment and disagreements when I 'm all set .
tags: PRON AUX VERB NOUN ADP DET NOUN CCONJ NOUN ADV PRON AUX ADJ PUNCT
tagged_tokens: I_PRON 'll_AUX jot_VERB down_ADP highlights_NOUN from_ADP the_DET judgment_NOUN and_CCONJ disagreements_NOUN when_ADV I_PRON 'm_AUX all_ADJ set_PUNCT .

B) tokens: I 'll register highlights from the judgment and disagreements when I 'm done .
tags: PRON AUX VERB NOUN ADP DET NOUN CCONJ NOUN ADV PRON AUX ADJ PUNCT
tagged_tokens: I_PRON 'll_AUX register_VERB highlights_NOUN from_ADP the_DET judgment_NOUN and_CCONJ disagreements_NOUN when_ADV I_PRON 'm_AUX done_ADJ PUNCT .

C) tokens: I 'll article highlights from the judgment and disagreements when I 'm complete .
tags: PRON AUX VERB NOUN ADP DET NOUN CCONJ NOUN ADV PRON AUX ADJ PUNCT
tagged_tokens: I_PRON 'll_AUX article_VERB highlights_NOUN from_ADP the_DET judgment_NOUN and_CCONJ disagreements_NOUN when_ADV I_PRON 'm_AUX complete_ADJ PUNCT .D) tokens: I 'll post highlights from the opinion and dissents when I 'm finished .
tags: PRON AUX VERB NOUN ADP DET NOUN CCONJ NOUN ADV PRON AUX ADJ PUNCT
tagged_tokens: I_PRON 'll_AUX post_VERB highlights_NOUN from_ADP the_DET opinion_NOUN and_CCONJ dissents_NOUN when_ADV I_PRON 'm_AUX finished_ADJ ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: meaningful news such as President Bush 's insignificant calibrations on his marital alteration / anti-gay ( update : he be non against gays in the bedroom , merely at the altar , where of course their connections should non only be disapproved upon but should be constitutionally excluded ) have propelled Sudan non merely off the head pages , or the A section , but out of the ny times and Washington Post wholly .
tags: ADJ NOUN ADJ ADP PROPN PROPN PART ADJ NOUN ADP PRON NOUN NOUN SYM ADJ PUNCT NOUN PUNCT PRON AUX PART ADP NOUN ADP DET NOUN PUNCT ADV ADP DET NOUN PUNCT ADV ADV ADV PRON NOUN AUX PART ADV AUX VERB ADP CCONJ AUX AUX ADV VERB PUNCT AUX VERB PROPN ADV ADV ADP DET ADJ NOUN PUNCT CCONJ DET NOUN NOUN PUNCT CCONJ ADP ADP DET PROPN PROPN CCONJ PROPN PROPN ADV PUNCT
tagged_tokens: meaningful_ADJ news_NOUN such_ADJ as_ADP President_PROPN Bush_PROPN 's_PART insignificant_ADJ calibrations_NOUN on_ADP his_PRON marital_ADJ alteration_NOUN /_SYM anti-gay_ADJ (_PUNCT update_NOUN :_PUNCT he_PRON be_AUX non_PART against_ADP gays_NOUN in_ADP the_DET bedroom_NOUN ,_PUNCT merely_ADV at_ADP the_DET altar_NOUN ,_PUNCT where_ADV of_ADV course_ADV their_PRON connections_NOUN should_AUX non_PART only_ADV be_AUX disapproved_VERB upon_ADP but_CCONJ should_AUX be_AUX constitutionally_ADV excluded_VERB )_PUNCT have_AUX propelled_VERB Sudan_PROPN non_ADV merely_ADV off_ADP the_DET head_ADJ pages_NOUN ,_PUNCT or_CCONJ the_DET A_NOUN section_NOUN ,_PUNCT but_CCONJ out_ADP of_ADP the_DET ny_PROPN times_NOUN and_CCONJ Washington_PROPN Post_PROPN wholly_ADV .

B) tokens: pivotal news such as President Bush 's miniature adjustments on his wedding amendment / anti-gay ( update : he be non against homosexuals in the bedroom , merely at the altar , where of course their relationships should non merely be frowned upon but should be constitutionally disallowed ) have forced Sudan non merely off the first pages , or the A section , but out of the ny times and Washington Post entirely .
tags: ADJ NOUN ADJ ADP PROPN PROPN PART ADJ NOUN ADP PRON NOUN NOUN SYM ADJ PUNCT NOUN PUNCT PRON AUX PART ADP NOUN ADP DET NOUN PUNCT ADV ADP DET NOUN PUNCT ADV ADV ADV PRON NOUN AUX PART ADV AUX VERB ADP CCONJ AUX AUX ADV VERB PUNCT AUX VERB PROPN ADV ADV ADP DET ADJ NOUN PUNCT CCONJ DET NOUN NOUN PUNCT CCONJ ADP ADP DET PROPN PROPN CCONJ PROPN PROPN ADV PUNCT
tagged_tokens: pivotal_ADJ news_NOUN such_ADJ as_ADP President_PROPN Bush_PROPN 's_PART miniature_ADJ adjustments_NOUN on_ADP his_PRON wedding_NOUN amendment_NOUN /_SYM anti-gay_ADJ (_PUNCT update_NOUN :_PUNCT he_PRON be_AUX non_PART against_ADP homosexuals_NOUN in_ADP the_DET bedroom_NOUN ,_PUNCT merely_ADV at_ADP the_DET altar_NOUN ,_PUNCT where_ADV of_ADV course_ADV their_PRON relationships_NOUN should_AUX non_PART merely_ADV be_AUX frowned_VERB upon_ADP but_CCONJ should_AUX be_AUX constitutionally_ADV disallowed_VERB )_PUNCT have_AUX forced_VERB Sudan_PROPN non_ADV merely_ADV off_ADP the_DET first_ADJ pages_NOUN ,_PUNCT or_CCONJ the_DET A_NOUN section_NOUN ,_PUNCT but_CCONJ out_ADP of_ADP the_DET ny_PROPN times_NOUN and_CCONJ Washington_PROPN Post_PROPN entirely_ADV .

C) tokens: critical news such as President Bush 's teeny calibrations on his marriage amendment / anti-gay ( update : he be non against gays in the bedroom , merely at the altar , where of course their relationships should non merely be glowered upon but should be constitutionally forbidden ) have thrust Sudan non merely off the front pages , or the A section , but out of the ny times and Washington Post dead .
tags: ADJ NOUN ADJ ADP PROPN PROPN PART ADJ NOUN ADP PRON NOUN NOUN SYM ADJ PUNCT NOUN PUNCT PRON AUX PART ADP NOUN ADP DET NOUN PUNCT ADV ADP DET NOUN PUNCT ADV ADV ADV PRON NOUN AUX PART ADV AUX VERB ADP CCONJ AUX AUX ADV VERB PUNCT AUX VERB PROPN ADV ADV ADP DET ADJ NOUN PUNCT CCONJ DET NOUN NOUN PUNCT CCONJ ADP ADP DET PROPN PROPN CCONJ PROPN PROPN ADV PUNCT
tagged_tokens: critical_ADJ news_NOUN such_ADJ as_ADP President_PROPN Bush_PROPN 's_PART teeny_ADJ calibrations_NOUN on_ADP his_PRON marriage_NOUN amendment_NOUN /_SYM anti-gay_ADJ (_PUNCT update_NOUN :_PUNCT he_PRON be_AUX non_PART against_ADP gays_NOUN in_ADP the_DET bedroom_NOUN ,_PUNCT merely_ADV at_ADP the_DET altar_NOUN ,_PUNCT where_ADV of_ADV course_ADV their_PRON relationships_NOUN should_AUX non_PART merely_ADV be_AUX glowered_VERB upon_ADP but_CCONJ should_AUX be_AUX constitutionally_ADV forbidden_VERB )_PUNCT have_AUX thrust_VERB Sudan_PROPN non_ADV merely_ADV off_ADP the_DET front_ADJ pages_NOUN ,_PUNCT or_CCONJ the_DET A_NOUN section_NOUN ,_PUNCT but_CCONJ out_ADP of_ADP the_DET ny_PROPN times_NOUN and_CCONJ Washington_PROPN Post_PROPN dead_ADV .D) tokens: Important news such as President Bush 's miniscule calibrations on his marriage amendment / anti-gay ( update : he 's not against gays in the bedroom , just at the altar , where of course their relationships should not only be frowned upon but should be constitutionally excluded ) has pushed Sudan not just off the front pages , or the A section , but out of the NY Times and Washington Post completely .
tags: ADJ NOUN ADJ ADP PROPN PROPN PART ADJ NOUN ADP PRON NOUN NOUN SYM ADJ PUNCT NOUN PUNCT PRON AUX PART ADP NOUN ADP DET NOUN PUNCT ADV ADP DET NOUN PUNCT ADV ADV ADV PRON NOUN AUX PART ADV AUX VERB ADP CCONJ AUX AUX ADV VERB PUNCT AUX VERB PROPN ADV ADV ADP DET ADJ NOUN PUNCT CCONJ DET NOUN NOUN PUNCT CCONJ ADP ADP DET PROPN PROPN CCONJ PROPN PROPN ADV PUNCT
tagged_tokens: Important_ADJ news_NOUN such_ADJ as_ADP President_PROPN Bush_PROPN 's_PART miniscule_ADJ calibrations_NOUN on_ADP his_PRON marriage_NOUN amendment_NOUN /_SYM anti-gay_ADJ (_PUNCT update_NOUN :_PUNCT he_PRON 's_AUX not_PART against_ADP gays_NOUN in_ADP the_DET bedroom_NOUN ,_PUNCT just_ADV at_ADP the_DET altar_NOUN ,_PUNCT where_ADV of_ADV course_ADV their_PRON relationships_NOUN should_AUX not_PART only_ADV be_AUX frowned_VERB upon_ADP but_CCONJ should_AUX be_AUX constitutionally_ADV excluded_VERB )_PUNCT has_AUX pushed_VERB Sudan_PROPN not_ADV just_ADV off_ADP the_DET front_ADJ pages_NOUN ,_PUNCT or_CCONJ the_DET A_NOUN section_NOUN ,_PUNCT but_CCONJ out_ADP of_ADP the_DET NY_PROPN Times_PROPN and_CCONJ Washington_PROPN Post_PROPN completely_ADV ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: I had to travel to the BBC for this story .
tags: PRON VERB PART VERB ADP DET PROPN ADP DET NOUN PUNCT
tagged_tokens: I_PRON had_VERB to_PART travel_VERB to_ADP the_DET BBC_PROPN for_ADP this_DET story_NOUN ._PUNCT

B) tokens: I had to proceed to the BBC for this narrative .
tags: PRON VERB PART VERB ADP DET PROPN ADP DET NOUN PUNCT
tagged_tokens: I_PRON had_VERB to_PART proceed_VERB to_ADP the_DET BBC_PROPN for_ADP this_DET narrative_NOUN ._PUNCT

C) tokens: I was forced to go to the BBC for this account .
tags: PRON VERB PART VERB ADP DET PROPN ADP DET NOUN PUNCT
tagged_tokens: I_PRON was_VERB forced_VERB to_PART go_VERB to_ADP the_DET BBC_PROPN for_ADP this_DET account_NOUN ._PUNCTD) tokens: I had to go to the BBC for this report .
tags: PRON VERB PART VERB ADP DET PROPN ADP DET NOUN PUNCT
tagged_tokens: I_PRON had_VERB to_PART go_VERB to_ADP the_DET BBC_PROPN for_ADP this_DET report_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: It be merely disappointing .
tags: PRON AUX ADV ADJ PUNCT
tagged_tokens: It_PRON be_AUX merely_ADV disappointing_ADJ ._PUNCT

B) tokens: It be simply disappointing .
tags: PRON AUX ADV ADJ PUNCT
tagged_tokens: It_PRON be_AUX simply_ADV disappointing_ADJ ._PUNCT

C) tokens: It be just disheartening .
tags: PRON AUX ADV ADJ PUNCT
tagged_tokens: It_PRON be_AUX just_ADV disheartening_ADJ ._PUNCTD) tokens: It 's just disappointing .
tags: PRON AUX ADV ADJ PUNCT
tagged_tokens: It_PRON 's_AUX just_ADV disappointing_ADJ ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: At that period , UN Secretary General Kofi Annan desired steps be taken to terminate the racial antagonism in Darfur within 48 hours .
tags: ADP DET NOUN PUNCT PROPN PROPN PROPN PROPN PROPN VERB NOUN AUX VERB PART VERB DET ADJ NOUN ADP PROPN ADP NUM NOUN PUNCT
tagged_tokens: At_ADP that_DET period_NOUN ,_PUNCT UN_PROPN Secretary_PROPN General_PROPN Kofi_PROPN Annan_PROPN desired_VERB steps_NOUN be_AUX taken_VERB to_PART terminate_VERB the_DET racial_ADJ antagonism_NOUN in_ADP Darfur_PROPN within_ADP 48_NUM hours_NOUN ._PUNCT

B) tokens: At that time , UN Secretary General Kofi Annan required steps be taken to cease the racial violence in Darfur within 48 hours .
tags: ADP DET NOUN PUNCT PROPN PROPN PROPN PROPN PROPN VERB NOUN AUX VERB PART VERB DET ADJ NOUN ADP PROPN ADP NUM NOUN PUNCT
tagged_tokens: At_ADP that_DET time_NOUN ,_PUNCT UN_PROPN Secretary_PROPN General_PROPN Kofi_PROPN Annan_PROPN required_VERB steps_NOUN be_AUX taken_VERB to_PART cease_VERB the_DET racial_ADJ violence_NOUN in_ADP Darfur_PROPN within_ADP 48_NUM hours_NOUN ._PUNCT

C) tokens: At that point , UN Secretary General Kofi Annan insisted steps be taken to conclude the racial hostility in Darfur within 48 hours .
tags: ADP DET NOUN PUNCT PROPN PROPN PROPN PROPN PROPN VERB NOUN AUX VERB PART VERB DET ADJ NOUN ADP PROPN ADP NUM NOUN PUNCT
tagged_tokens: At_ADP that_DET point_NOUN ,_PUNCT UN_PROPN Secretary_PROPN General_PROPN Kofi_PROPN Annan_PROPN insisted_VERB steps_NOUN be_AUX taken_VERB to_PART conclude_VERB the_DET racial_ADJ hostility_NOUN in_ADP Darfur_PROPN within_ADP 48_NUM hours_NOUN ._PUNCTD) tokens: At that time , UN Secretary General Kofi Annan demanded steps be taken to end the ethnic violence in Darfur within 48 hours .
tags: ADP DET NOUN PUNCT PROPN PROPN PROPN PROPN PROPN VERB NOUN AUX VERB PART VERB DET ADJ NOUN ADP PROPN ADP NUM NOUN PUNCT
tagged_tokens: At_ADP that_DET time_NOUN ,_PUNCT UN_PROPN Secretary_PROPN General_PROPN Kofi_PROPN Annan_PROPN demanded_VERB steps_NOUN be_AUX taken_VERB to_PART end_VERB the_DET ethnic_ADJ violence_NOUN in_ADP Darfur_PROPN within_ADP 48_NUM hours_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Two weeks later , and the hostility persists .
tags: NUM NOUN ADV PUNCT CCONJ DET NOUN VERB PUNCT
tagged_tokens: Two_NUM weeks_NOUN later_ADV ,_PUNCT and_CCONJ the_DET hostility_NOUN persists_VERB ._PUNCT

B) tokens: Two weeks later , and the hostility carries on .
tags: NUM NOUN ADV PUNCT CCONJ DET NOUN VERB PUNCT
tagged_tokens: Two_NUM weeks_NOUN later_ADV ,_PUNCT and_CCONJ the_DET hostility_NOUN carries_VERB on_PUNCT ._PUNCT

C) tokens: A fortnight subsequently , and the hostility goes on .
tags: DET NOUN ADV PUNCT CCONJ DET NOUN VERB PUNCT
tagged_tokens: A_DET fortnight_NOUN subsequently_ADV ,_PUNCT and_CCONJ the_DET hostility_NOUN goes_VERB on_PUNCT ._PUNCTD) tokens: Two weeks later , and the violence continues .
tags: NUM NOUN ADV PUNCT CCONJ DET NOUN VERB PUNCT
tagged_tokens: Two_NUM weeks_NOUN later_ADV ,_PUNCT and_CCONJ the_DET violence_NOUN continues_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: So behold we be , two weeks after , after that dazzling PR display two weeks ago by Powell and Annan , and the situation on the ground in Darfur seems basically immutable .
tags: ADV ADV PRON VERB PUNCT NUM NOUN ADV PUNCT ADP DET ADJ PROPN NOUN NUM NOUN ADV ADP PROPN CCONJ PROPN PUNCT CCONJ DET NOUN ADP DET NOUN ADP PROPN VERB ADV ADJ PUNCT
tagged_tokens: So_ADV behold_VERB we_PRON be_VERB ,_PUNCT two_NUM weeks_NOUN after_ADV ,_PUNCT after_ADP that_DET dazzling_ADJ PR_PROPN display_NOUN two_NUM weeks_NOUN ago_ADV by_ADP Powell_PROPN and_CCONJ Annan_PROPN ,_PUNCT and_CCONJ the_DET situation_NOUN on_ADP the_DET ground_NOUN in_ADP Darfur_PROPN seem_VERB basically_ADV immutable_ADJ ._PUNCT

B) tokens: therefore hear we be , two weeks after , after that dazzling PR manifestation two weeks ago by Powell and Annan , and the situation on the ground in Darfur seems still unaltered .
tags: ADV ADV PRON VERB PUNCT NUM NOUN ADV PUNCT ADP DET ADJ PROPN NOUN NUM NOUN ADV ADP PROPN CCONJ PROPN PUNCT CCONJ DET NOUN ADP DET NOUN ADP PROPN VERB STILL ADJ PUNCT
tagged_tokens: therefore_ADV hear_VERB we_PRON be_VERB ,_PUNCT two_NUM weeks_NOUN after_ADV ,_PUNCT after_ADP that_DET dazzling_ADJ PR_PROPN manifestation_NOUN two_NUM weeks_NOUN ago_ADV by_ADP Powell_PROPN and_CCONJ Annan_PROPN ,_PUNCT and_CCONJ the_DET situation_NOUN on_ADP the_DET ground_NOUN in_ADP Darfur_PROPN seem_VERB still_ADV unaltered_ADJ ._PUNCT

C) tokens: thus hear we be , two weeks subsequently , after that dazzling PR spectacle two weeks ago by Powell and Annan , and the situation on the ground in Darfur seems yet unmodified .
tags: ADV ADV PRON VERB PUNCT NUM NOUN ADV PUNCT ADP DET ADJ PROPN NOUN NUM NOUN ADV ADP PROPN CCONJ PROPN PUNCT CCONJ DET NOUN ADP DET NOUN ADP PROPN VERB YET ADJ PUNCT
tagged_tokens: thus_ADV hear_VERB we_PRON be_VERB ,_PUNCT two_NUM weeks_NOUN subsequently_ADV ,_PUNCT after_ADP that_DET dazzling_ADJ PR_PROPN spectacle_NOUN two_NUM weeks_NOUN ago_ADV by_ADP Powell_PROPN and_CCONJ Annan_PROPN ,_PUNCT and_CCONJ the_DET situation_NOUN on_ADP the_DET ground_NOUN in_ADP Darfur_PROPN seem_VERB yet_ADV unmodified_ADJ ._PUNCTD) tokens: So hear we are , two weeks later , after that dazzling PR display two weeks ago by Powell and Annan , and the situation on the ground in Darfur appears basically unchanged .
tags: ADV ADV PRON VERB PUNCT NUM NOUN ADV PUNCT ADP DET ADJ PROPN NOUN NUM NOUN ADV ADP PROPN CCONJ PROPN PUNCT CCONJ DET NOUN ADP DET NOUN ADP PROPN VERB ADV ADJ PUNCT
tagged_tokens: So_ADV hear_ADV we_PRON are_VERB ,_PUNCT two_NUM weeks_NOUN later_ADV ,_PUNCT after_ADP that_DET dazzling_ADJ PR_PROPN display_NOUN two_NUM weeks_NOUN ago_ADV by_ADP Powell_PROPN and_CCONJ Annan_PROPN ,_PUNCT and_CCONJ the_DET situation_NOUN on_ADP the_DET ground_NOUN in_ADP Darfur_PROPN appears_VERB basically_ADV unchanged_ADJ ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: tokens: Warren Buffett bequeaths 85 % of his funds , largely to the Bill and Melinda Gates Foundation .
tags: PROPN PROPN AUX VERB ADP NUM SYM ADP PRON NOUN PUNCT ADV ADP DET PROPN CCONJ PROPN PROPN PROPN PUNCT
tagged_tokens: Warren_PROPN Buffett_PROPN bequeaths_AUX 85_NUM %_SYM of_ADP his_PRON funds_NOUN ,_PUNCT largely_ADV to_ADP the_DET Bill_PROPN and_CCONJ Melinda_PROPN Gates_PROPN Foundation_PROPN ._PUNCT

B) tokens: tokens: Warren Buffett donates 85 % of his wealth , mainly to the Bill and Melinda Gates Foundation .
tags: PROPN PROPN VERB ADP NUM SYM ADP PRON NOUN PUNCT ADV ADP DET PROPN CCONJ PROPN PROPN PROPN PUNCT
tagged_tokens: Warren_PROPN Buffett_PROPN donates_VERB 85_NUM %_SYM of_ADP his_PRON wealth_NOUN ,_PUNCT mainly_ADV to_ADP the_DET Bill_PROPN and_CCONJ Melinda_PROPN Gates_PROPN Foundation_PROPN ._PUNCT

C) tokens: tokens: Warren Buffett grants 85 % of his wealth , principally to the Bill and Melinda Gates Foundation .
tags: PROPN PROPN VERB ADP NUM SYM ADP PRON NOUN PUNCT ADV ADP DET PROPN CCONJ PROPN PROPN PROPN PUNCT
tagged_tokens: Warren_PROPN Buffett_PROPN grants_VERB 85_NUM %_SYM of_ADP his_PRON wealth_NOUN ,_PUNCT principally_ADV to_ADP the_DET Bill_PROPN and_CCONJ Melinda_PROPN Gates_PROPN Foundation_PROPN ._PUNCTD) tokens: Warren Buffett is giving away 85 % of his wealth , mostly to the Bill and Melinda Gates Foundation .
tags: PROPN PROPN AUX VERB ADP NUM SYM ADP PRON NOUN PUNCT ADV ADP DET PROPN CCONJ PROPN PROPN PROPN PUNCT
tagged_tokens: Warren_PROPN Buffett_PROPN is_AUX giving_VERB away_ADP 85_NUM %_SYM of_ADP his_PRON wealth_NOUN ,_PUNCT mostly_ADV to_ADP the_DET Bill_PROPN and_CCONJ Melinda_PROPN Gates_PROPN Foundation_PROPN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: It be a small amount hard to analyze , but at this juncture his apparent impression be that the Gates be extremely good money - redistributors , and he want they to have the money as immediately as possible .
tags: PRON AUX DET ADJ ADJ PART VERB PUNCT CCONJ ADP DET NOUN PRON ADJ NOUN VERB SCONJ DET PROPN AUX ADV ADJ NOUN VERB SCONJ DET PROUN AUX ADV ADJ NOUN PUNCT NOUN PUNCT CCONJ PRON VERB PRON PART VERB DET NOUN ADV ADV SCONJ ADJ PUNCT
tagged_tokens: It_PRON be_AUX a_DET small_ADJ amount_NOUN hard_ADJ to_PART analyze_VERB ,_PUNCT but_CCONJ at_ADP this_DET juncture_NOUN his_PRON apparent_ADJ impression_NOUN be_VERB that_SCONJ the_DET Gates_PROPN be_AUX extremely_ADV good_ADJ money_NOUN -_PUNCT redistributors_NOUN ,_PUNCT and_CCONJ he_PRON want_VERB they_PRON to_PART have_VERB the_DET money_NOUN as_ADV immediately_ADV as_SCONJ possible_ADJ ._PUNCT

B) tokens: It be a spot hard to break down , but at this stage his ostensible belief be that the Gates be actually good money - shufflers , and he want they to obtain the money as fast as achievable .
tags: PRON AUX DET ADJ ADJ PART VERB PUNCT CCONJ ADP DET NOUN PRON ADJ NOUN VERB SCONJ DET PROPN AUX ADV ADJ NOUN VERB SCONJ DET PROUN AUX ADV ADJ NOUN PUNCT NOUN PUNCT CCONJ PRON VERB PRON PART VERB DET NOUN ADV ADV SCONJ ADJ PUNCT
tagged_tokens: It_PRON be_AUX a_DET spot_ADJ hard_ADJ to_PART break_VERB down_PART ,_PUNCT but_CCONJ at_ADP this_DET stage_NOUN his_PRON ostensible_ADJ belief_NOUN be_VERB that_SCONJ the_DET Gates_PROPN be_AUX actually_ADV good_ADJ money_NOUN -_PUNCT shufflers_NOUN ,_PUNCT and_CCONJ he_PRON want_VERB they_PRON to_PART obtain_VERB the_DET money_NOUN as_ADV fast_ADV as_SCONJ achievable_ADJ ._PUNCT

C) tokens: It be a tad hard to construe , but at this juncture his ostensible opinion be that the Gateses be particularly proficient money - redistributors , and he want they to have the money as rapidly as possible .
tags: PRON AUX DET ADJ ADJ PART VERB PUNCT CCONJ ADP DET NOUN PRON ADJ NOUN VERB SCONJ DET PROPN AUX ADV ADJ NOUN VERB SCONJ DET PROUN AUX ADV ADJ NOUN PUNCT NOUN PUNCT CCONJ PRON VERB PRON PART VERB DET NOUN ADV ADV SCONJ ADJ PUNCT
tagged_tokens: It_PRON be_AUX a_DET tad_ADJ hard_ADJ to_PART construe_VERB ,_PUNCT but_CCONJ at_ADP this_DET juncture_NOUN his_PRON ostensible_ADJ opinion_NOUN be_VERB that_SCONJ the_DET Gateses_PROPN be_AUX particularly_ADV proficient_ADJ money_NOUN -_PUNCT redistributors_NOUN ,_PUNCT and_CCONJ he_PRON want_VERB they_PRON to_PART have_VERB the_DET money_NOUN as_ADV rapidly_ADV as_SCONJ possible_ADJ ._PUNCTD) tokens: It 's a little hard to parse , but at this point his ostensible view is that the Gateses are very good money - redistributors , and he wants them to have the money as soon as possible .
tags: PRON AUX DET ADJ ADJ PART VERB PUNCT CCONJ ADP DET NOUN PRON ADJ NOUN VERB SCONJ DET PROPN AUX ADV ADJ NOUN PUNCT NOUN PUNCT CCONJ PRON VERB PRON PART VERB DET NOUN ADV ADV SCONJ ADJ PUNCT
tagged_tokens: It_PRON 's_AUX a_DET little_ADJ hard_ADJ to_PART parse_VERB ,_PUNCT but_CCONJ at_ADP this_DET point_NOUN his_PRON ostensible_ADJ view_NOUN is_VERB that_SCONJ the_DET Gateses_PROPN are_AUX very_ADV good_ADJ money_NOUN -_PUNCT redistributors_NOUN ,_PUNCT and_CCONJ he_PRON wants_VERB them_PRON to_PART have_VERB the_DET money_NOUN as_ADV soon_ADV as_SCONJ possible_ADJ ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: I infer his actual motive is that he 's concerned that Berkshire Hathaway just ca n't expand fast enough to warrant his customary charity strategy .
tags: PRON VERB PRON ADJ NOUN VERB SCONJ PRON AUX ADJ SCONJ PROPN PROPN ADV AUX PART VERB ADV ADV PART VERB PRON ADJ NOUN STRATEGY PUNCT
tagged_tokens: I_PRON infer_VERB his_PRON actual_ADJ motive_NOUN is_VERB that_SCONJ he_PRON 's_AUX concerned_ADJ that_SCONJ Berkshire_PROPN Hathaway_PROPN just_ADV ca_AUX n't_PART expand_VERB fast_ADV enough_ADV to_PART warrant_VERB his_PRON customary_ADJ charity_NOUN strategy_NOUN ._PUNCT

B) tokens: I gather his authentic reason is that he 's anxious that Berkshire Hathaway just ca n't develop fast enough to justify his accustomed charity policy .
tags: PRON VERB PRON ADJ NOUN VERB SCONJ PRON AUX ADJ SCONJ PROPN PROPN ADV AUX PART VERB ADV ADV PART VERB PRON ADJ NOUN NOUN PUNCT
tagged_tokens: I_PRON gather_VERB his_PRON authentic_ADJ reason_NOUN is_VERB that_SCONJ he_PRON 's_AUX anxious_ADJ that_SCONJ Berkshire_PROPN Hathaway_PROPN just_ADV ca_AUX n't_PART develop_VERB fast_ADV enough_ADV to_PART justify_VERB his_PRON accustomed_ADJ charity_NOUN policy_NOUN ._PUNCT

C) tokens: I understand his true reason is that he 's afraid that Berkshire Hathaway just ca n't grow fast enough to validate his routine charity policy .
tags: PRON VERB PRON ADJ NOUN VERB SCONJ PRON AUX ADJ SCONJ PROPN PROPN ADV AUX PART VERB ADV ADV PART VERB PRON ADJ NOUN NOUN PUNCT
tagged_tokens: I_PRON understand_VERB his_PRON true_ADJ reason_NOUN is_VERB that_SCONJ he_PRON 's_AUX afraid_ADJ that_SCONJ Berkshire_PROPN Hathaway_PROPN just_ADV ca_AUX n't_PART grow_VERB fast_ADV enough_ADV to_PART validate_VERB his_PRON routine_ADJ charity_NOUN policy_NOUN ._PUNCTD) tokens: I assume his actual reason is that he 's worried that Berkshire Hathaway just ca n't grow quickly enough to justify his usual charity policy .
tags: PRON VERB PRON ADJ NOUN VERB SCONJ PRON AUX ADJ SCONJ PROPN PROPN ADV AUX PART VERB ADV ADV PART VERB PRON ADJ NOUN NOUN PUNCT
tagged_tokens: I_PRON assume_VERB his_PRON actual_ADJ reason_NOUN is_VERB that_SCONJ he_PRON 's_AUX worried_ADJ that_SCONJ Berkshire_PROPN Hathaway_PROPN just_ADV ca_AUX n't_PART grow_VERB quickly_ADV enough_ADV to_PART justify_VERB his_PRON usual_ADJ charity_NOUN policy_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: I do n't know how the market will react .
tags: PRON AUX VERB PART ADJ ADV DET NOUN AUX VERB PUNCT
tagged_tokens: I_PRON do_AUX n't_PART know_VERB how_ADV the_DET market_NOUN will_AUX react_VERB ._PUNCT

B) tokens: I be unsure how the market will react .
tags: PRON AUX ADJ ADV DET NOUN AUX VERB PUNCT
tagged_tokens: I_PRON be_AUX unsure_ADJ how_ADV the_DET market_NOUN will_AUX react_VERB ._PUNCT

C) tokens: I be uncertain how the market will respond .
tags: PRON AUX ADJ ADV DET NOUN AUX VERB PUNCT
tagged_tokens: I_PRON be_AUX uncertain_ADJ how_ADV the_DET market_NOUN will_AUX respond_VERB ._PUNCTD) tokens: I 'm not sure how the market will react .
tags: PRON AUX PART ADJ ADV DET NOUN AUX VERB PUNCT
tagged_tokens: I_PRON 'm_AUX not_PART sure_ADJ how_ADV the_DET market_NOUN will_AUX react_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: It does n't change the company 's inner value , and as the article mentions , the company could be added to a major catalog once the portions get more fluid .
tags: PRON AUX PART VERB DET NOUN PART ADJ NOUN PUNCT CCONJ SCONJ DET NOUN VERB PUNCT DET NOUN AUX AUX VERB ADP DET ADJ NOUN SCONJ DET NOUN VERB ADV ADJ PUNCT
tagged_tokens: It_PRON does_AUX n't_PART change_VERB the_DET company_NOUN 's_PART inner_ADJ value_NOUN ,_PUNCT and_CCONJ as_SCONJ the_DET article_NOUN mentions_VERB ,_PUNCT the_DET company_NOUN could_AUX be_AUX added_VERB to_ADP a_DET major_ADJ catalog_NOUN once_SCONJ the_DET portions_NOUN get_VERB more_ADV fluid_ADJ ._PUNCT

B) tokens: It makes no difference to the company 's innate value , and as the article states , the company could be appended to a leading index once the portions reach greater liquidity .
tags: PRON VERB NOUN DET NOUN PART ADJ NOUN PUNCT CCONJ SCONJ DET NOUN VERB PUNCT DET NOUN AUX AUX VERB ADP DET ADJ NOUN SCONJ DET NOUN VERB MORE ADJ PUNCT
tagged_tokens: It_PRON makes_VERB no_NOUN difference_NOUN to_ADP the_DET company_NOUN 's_PART innate_ADJ value_NOUN ,_PUNCT and_CCONJ as_SCONJ the_DET article_NOUN states_VERB ,_PUNCT the_DET company_NOUN could_AUX be_AUX appended_VERB to_ADP a_DET leading_ADJ index_NOUN once_SCONJ the_DET portions_NOUN reach_VERB greater_MORE liquidity_ADJ ._PUNCT

C) tokens: It does non modify the company 's inherent value , and as the article observes , the company might be accessioned to a capital index once the portions get more watery .
tags: PRON AUX PART VERB DET NOUN PART ADJ NOUN PUNCT CCONJ SCONJ DET NOUN VERB PUNCT DET NOUN AUX AUX VERB ADP DET ADJ NOUN SCONJ DET NOUN VERB ADV ADJ PUNCT
tagged_tokens: It_PRON does_AUX non_PART modify_VERB the_DET company_NOUN 's_PART inherent_ADJ value_NOUN ,_PUNCT and_CCONJ as_SCONJ the_DET article_NOUN observes_VERB ,_PUNCT the_DET company_NOUN might_AUX be_AUX accessioned_VERB to_ADP a_DET capital_ADJ index_NOUN once_SCONJ the_DET portions_NOUN get_VERB more_ADV watery_ADJ ._PUNCTD) tokens: It does n't change the company 's intrinsic worth , and as the article notes , the company might be added to a major index once the shares get more liquid .
tags: PRON AUX PART VERB DET NOUN PART ADJ NOUN PUNCT CCONJ SCONJ DET NOUN VERB PUNCT DET NOUN AUX AUX VERB ADP DET ADJ NOUN SCONJ DET NOUN VERB ADV ADJ PUNCT
tagged_tokens: It_PRON does_AUX n't_PART change_VERB the_DET company_NOUN 's_PART intrinsic_ADJ worth_NOUN ,_PUNCT and_CCONJ as_SCONJ the_DET article_NOUN notes_VERB ,_PUNCT the_DET company_NOUN might_AUX be_AUX added_VERB to_ADP a_DET major_ADJ index_NOUN once_SCONJ the_DET shares_NOUN get_VERB more_ADV liquid_ADJ ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Signs: On the contrary , this is principally a statement that the corporation is overpriced from the person who knows it good -- and happens to be the good investor of the latter century .
tags: ADP DET ADJ NOUN PUNCT PRON AUX ADV DET NOUN SCONJ DET NOUN AUX ADJ ADP DET NOUN PRON VERB PRON ADV PUNCT CCONJ VERB PART AUX DET ADJ NOUN ADP DET ADJ NOUN PUNCT
tagged_tokens: Signs:_ADP on_DET the_ADJ contrary_NOUN ,_PUNCT this_PRON is_AUX principally_ADV a_DET statement_NOUN that_SCONJ the_DET corporation_NOUN is_AUX overpriced_ADJ from_ADP the_DET person_NOUN who_PRON knows_VERB it_PRON good_ADV --_PUNCT and_CCONJ happens_VERB to_PART be_AUX the_DET good_ADJ investor_NOUN of_ADP the_DET latter_ADJ century_NOUN ._PUNCT

B) tokens: Marks: On the other hand , this is basically a statement that the corporation is overpriced from the individual who knows it well -- and happens to be the good investor of the modern century .
tags: ADP DET ADJ NOUN PUNCT PRON AUX ADV DET NOUN SCONJ DET NOUN AUX ADJ ADP DET NOUN PRON VERB PRON ADV PUNCT CCONJ VERB PART AUX DET ADJ NOUN ADP DET ADJ NOUN PUNCT
tagged_tokens: Marks:_ADP on_DET the_ADJ other_ADJ hand_NOUN ,_PUNCT this_PRON is_AUX basically_ADV a_DET statement_NOUN that_SCONJ the_DET corporation_NOUN is_AUX overpriced_ADJ from_ADP the_DET individual_NOUN who_PRON knows_VERB it_PRON well_ADV --_PUNCT and_CCONJ happens_VERB to_PART be_AUX the_DET good_ADJ investor_NOUN of_ADP the_DET modern_ADJ century_NOUN ._PUNCT

C) tokens: Tokens: On the reverse side , this is essentially a statement that the corporation is overpriced from the person who knows it well -- and happens to be the well investor of the posterior century .
tags: ADP DET ADJ NOUN PUNCT PRON AUX ADV DET NOUN SCONJ DET NOUN AUX ADJ ADP DET NOUN PRON VERB PRON ADV PUNCT CCONJ VERB PART AUX DET ADJ NOUN ADP DET ADJ NOUN PUNCT
tagged_tokens: Tokens:_ADP on_DET the_ADJ reverse_NOUN side_NOUN ,_PUNCT this_PRON is_AUX essentially_ADV a_DET statement_NOUN that_SCONJ the_DET corporation_NOUN is_AUX overpriced_ADJ from_ADP the_DET person_NOUN who_PRON knows_VERB it_PRON well_ADV --_PUNCT and_CCONJ happens_VERB to_PART be_AUX the_DET well_ADJ investor_NOUN of_ADP the_DET posterior_ADJ century_NOUN ._PUNCTD) tokens: On the other hand , this is essentially a statement that the company is overpriced from the guy who knows it best -- and happens to be the best investor of the last century .
tags: ADP DET ADJ NOUN PUNCT PRON AUX ADV DET NOUN SCONJ DET NOUN AUX ADJ ADP DET NOUN PRON VERB PRON ADV PUNCT CCONJ VERB PART AUX DET ADJ NOUN ADP DET ADJ NOUN PUNCT
tagged_tokens: On_ADP the_DET other_ADJ hand_NOUN ,_PUNCT this_PRON is_AUX essentially_ADV a_DET statement_NOUN that_SCONJ the_DET company_NOUN is_AUX overpriced_ADJ from_ADP the_DET guy_NOUN who_PRON knows_VERB it_PRON best_ADV --_PUNCT and_CCONJ happens_VERB to_PART be_AUX the_DET best_ADJ investor_NOUN of_ADP the_DET last_ADJ century_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: em ... no ... the Gates foundation principally invests in medical research and instruction , that means gift today adds a big value opposed to giving in ten years .
tags: INTJ PUNCT INTJ PUNCT DET PROPN NOUN ADV VERB ADP ADJ NOUN CCONJ NOUN PUNCT PRON VERB VERB ADV VERB DET BIG VALUE VERB SCONJ GIVE ADP NUM YEARS PUNCT
tagged_tokens: em_INTJ ..._PUNCT no_INTJ ..._PUNCT the_DET Gates_PROPN foundation_NOUN principally_ADV invests_VERB in_ADP medical_ADJ research_NOUN and_CCONJ instruction_NOUN ,_PUNCT that_PRON means_VERB gift_VERB today_ADV adds_VERB a_DET big_ADJ value_NOUN opposed_VERB to_SCONJ give_VERB in_ADP ten_NUM years_NOUN ._PUNCT

B) tokens: em ... no ... the Gates foundation primarily invests in medical research and education , that means giving now adds a huge value versus contribution in ten years .
tags: INTJ PUNCT INTJ PUNCT DET PROPN NOUN PRIMARILY VERB ADP ADJ NOUN CCONJ NOUN PUNCT PRON VERB VERB ADV VERB DET HUGE VALUE VERB VERSUS CONTRIBUTION ADP NUM YEARS PUNCT
tagged_tokens: em_INTJ ..._PUNCT no_INTJ ..._PUNCT the_DET Gates_PROPN foundation_NOUN primarily_ADV invests_VERB in_ADP medical_ADJ research_NOUN and_CCONJ education_NOUN ,_PUNCT that_PRON means_VERB giving_VERB now_ADV adds_VERB a_DET huge_ADJ value_NOUN versus_VERB contribution_NOUN in_ADP ten_NUM years_NOUN ._PUNCT

C) tokens: em ... no ... the Gates foundation mainly invests in medical science and education , that means donation now adds a vast value opposed to donation in ten years .
tags: INTJ PUNCT INTJ PUNCT DET PROPN NOUN MAINLY VERB ADP ADJ NOUN CCONJ NOUN PUNCT PRON VERB VERB ADV VERB DET VAST VALUE VERB OPPOSED TO DONATION ADP NUM YEARS PUNCT
tagged_tokens: em_INTJ ..._PUNCT no_INTJ ..._PUNCT the_DET Gates_PROPN foundation_NOUN mainly_ADV invests_VERB in_ADP medical_ADJ science_NOUN and_CCONJ education_NOUN ,_PUNCT that_PRON means_VERB donation_NOUN now_ADV adds_VERB a_DET vast_ADJ value_NOUN opposed_VERB to_SCONJ donation_NOUN in_ADP ten_NUM years_NOUN ._PUNCTD) tokens: em ... no ... the Gates foundation mainly invests in medical research and education , that means donating now adds a tremendous value compared to donating in ten years .
tags: INTJ PUNCT INTJ PUNCT DET PROPN NOUN ADV VERB ADP ADJ NOUN CCONJ NOUN PUNCT PRON VERB VERB ADV VERB DET ADJ NOUN VERB SCONJ VERB ADP NUM NOUN PUNCT
tagged_tokens: em_INTJ ..._PUNCT no_INTJ ..._PUNCT the_DET Gates_PROPN foundation_NOUN mainly_ADV invests_VERB in_ADP medical_ADJ research_NOUN and_CCONJ education_NOUN ,_PUNCT that_PRON means_VERB donating_VERB now_ADV adds_VERB a_DET tremendous_ADJ value_NOUN compared_VERB to_SCONJ donating_VERB in_ADP ten_NUM years_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Since the 10.000.000 individuals perishing from malaria will else be deceased .
tags: SCONJ DET NUM NOUN AUX ADP NOUN AUX ADV AUX ADJ PUNCT
tagged_tokens: Since_SCONJ the_DET 10.000.000_NUM individuals_NOUN perishing_AUX from_ADP malaria_NOUN will_AUX else_ADV be_AUX deceased_ADJ ._PUNCT

B) tokens: Because 10.000.000 persons dying from malaria will differently be lifeless .
tags: SCONJ NUM NOUN AUX ADP NOUN AUX ADV AUX ADJ PUNCT
tagged_tokens: Because_SCONJ 10.000.000_NUM persons_NOUN dying_AUX from_ADP malaria_NOUN will_AUX differently_ADV be_AUX lifeless_ADJ ._PUNCT

C) tokens: Because the 10.000.000 humans expiring from malaria will otherwise be lifeless .
tags: SCONJ DET NUM NOUN AUX ADP NOUN AUX ADV AUX ADJ PUNCT
tagged_tokens: Because_SCONJ the_DET 10.000.000_NUM humans_NOUN expiring_AUX from_ADP malaria_NOUN will_AUX otherwise_ADV be_AUX lifeless_ADJ ._PUNCTD) tokens: Because the 10.000.000 people dying from malaria will otherwise be dead .
tags: SCONJ DET NUM NOUN VERB ADP NOUN AUX ADV AUX ADJ PUNCT
tagged_tokens: Because_SCONJ the_DET 10.000.000_NUM people_NOUN dying_VERB from_ADP malaria_NOUN will_AUX otherwise_ADV be_AUX dead_ADJ ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: markers : i.e .
tags: X PUNCT
tagged_tokens: markers : i.e ._PUNCT

B) tokens: tokens : i.e .
tags: X PUNCT
tagged_tokens: tokens : i.e ._PUNCT

C) tokens: symbols : i.e .
tags: X PUNCT
tagged_tokens: symbols : i.e ._PUNCTD) tokens: i.e .
tags: X PUNCT
tagged_tokens: i.e_X ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: He be not give 85 % away , he be give a number of share each year that decrease in number at the rate of 5 % a year ( until disappear ? ) .
tags: PRON AUX PART VERB NUM SYM ADP PUNCT PRON AUX VERB DET NOUN ADP NOUN DET NOUN PRON VERB ADP NOUN ADP DET NOUN ADP NUM SYM DET NOUN PUNCT SCONJ ADJ PUNCT PUNCT PUNCT
tagged_tokens: He_PRON be_AUX not_PART give_VERB 85_NUM %_SYM away_ADP ,_PUNCT he_PRON be_AUX give_VERB a_DET number_NOUN of_ADP share_NOUN each_DET year_NOUN that_PRON decrease_VERB in_ADP number_NOUN at_ADP the_DET rate_NOUN of_ADP 5_NUM %_SYM a_DET year_NOUN (_PUNCT until_SCONJ disappear_ADJ ?_PUNCT )_PUNCT .

B) tokens: He be not donate 85 % away , he be donate a number of share each year that fall in number at the rate of 5 % a year ( until absent ? ) .
tags: PRON AUX PART VERB NUM SYM ADP PUNCT PRON AUX VERB DET NOUN ADP NOUN DET NOUN PRON VERB ADP NOUN ADP DET NOUN ADP NUM SYM DET NOUN PUNCT SCONJ ADJ PUNCT PUNCT PUNCT
tagged_tokens: He_PRON be_AUX not_PART donate_VERB 85_NUM %_SYM away_ADP ,_PUNCT he_PRON be_AUX donate_VERB a_DET number_NOUN of_ADP share_NOUN each_DET year_NOUN that_PRON fall_VERB in_ADP number_NOUN at_ADP the_DET rate_NOUN of_ADP 5_NUM %_SYM a_DET year_NOUN (_PUNCT until_SCONJ absent_ADJ ?_PUNCT )_PUNCT .

C) tokens: He be not parting with 85 % away , he be part with a number of share each year that drop in number at the rate of 5 % a year ( until go ? ) .
tags: PRON AUX PART VERB NUM SYM ADP PUNCT PRON AUX VERB DET NOUN ADP NOUN DET NOUN PRON VERB ADP NOUN ADP DET NOUN ADP NUM SYM DET NOUN PUNCT SCONJ ADJ PUNCT PUNCT PUNCT
tagged_tokens: He_PRON be_AUX not_PART part_VERB with_ADP 85_NUM %_SYM away_ADP ,_PUNCT he_PRON be_AUX part_VERB with_ADP a_DET number_NOUN of_ADP share_NOUN each_DET year_NOUN that_PRON drop_VERB in_ADP number_NOUN at_ADP the_DET rate_NOUN of_ADP 5_NUM %_SYM a_DET year_NOUN (_PUNCT until_SCONJ go_ADJ ?_PUNCT )_PUNCT .D) tokens: He 's not giving 85 % away , he 's giving a number of shares each year that decrease in number at the rate of 5 % a year ( until gone ? ) .
tags: PRON AUX PART VERB NUM SYM ADP PUNCT PRON AUX VERB DET NOUN ADP NOUN DET NOUN PRON VERB ADP NOUN ADP DET NOUN ADP NUM SYM DET NOUN PUNCT SCONJ ADJ PUNCT PUNCT PUNCT
tagged_tokens: He_PRON 's_AUX not_PART giving_VERB 85_NUM %_SYM away_ADP ,_PUNCT he_PRON 's_AUX giving_VERB a_DET number_NOUN of_ADP shares_NOUN each_DET year_NOUN that_PRON decrease_VERB in_ADP number_NOUN at_ADP the_DET rate_NOUN of_ADP 5_NUM %_SYM a_DET year_NOUN (_PUNCT until_SCONJ gone_ADJ ?_PUNCT )_PUNCT ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: He addresses his spouse 's death having an impression on him .
tags: PRON VERB PRON NOUN PART NOUN VERB DET NOUN ADP PRON PUNCT
tagged_tokens: He_PRON addresses_VERB his_PRON spouse_NOUN 's_PART death_NOUN having_VERB an_DET impression_NOUN on_ADP him_PRON PUNCT

B) tokens: He mentions his wife 's decease having an effect on he .
tags: PRON VERB PRON NOUN PART NOUN VERB DET NOUN ADP PRON PUNCT
tagged_tokens: He_PRON mentions_VERB his_PRON wife_NOUN 's_PART decease_NOUN having_VERB an_DET effect_NOUN on_ADP he_PRON PUNCT

C) tokens: He cites his wife 's death having an impact on he .
tags: PRON VERB PRON NOUN PART NOUN VERB DET NOUN ADP PRON PUNCT
tagged_tokens: He_PRON cites_VERB his_PRON wife_NOUN 's_PART death_NOUN having_VERB an_DET impact_NOUN on_ADP he_PRON PUNCTD) tokens: He mentions his wife 's death having an effect on him .
tags: PRON VERB PRON NOUN PART NOUN VERB DET NOUN ADP PRON PUNCT
tagged_tokens: He_PRON mentions_VERB his_PRON wife_NOUN 's_PART death_NOUN having_VERB an_DET effect_NOUN on_ADP him_PRON ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: On the selfsame day Palestinians demonstrate in support of Hezbollah and Syria , the militant group Hamas has informed it will participate in the planned approaching Parliamentary elections .
tags: ADP DET PRON NOUN PROPN VERB ADP NOUN ADP PROPN CCONJ PROPN PUNCT DET ADJ NOUN PROPN AUX VERB PRON AUX VERB ADP DET VERB ADJ ADJ NOUN PUNCT
tagged_tokens: On_ADP the_DET selfsame_PRON day_NOUN Palestinians_PROPN demonstrate_VERB in_ADP support_NOUN of_ADP Hezbollah_PROPN and_CCONJ Syria_PROPN ,_PUNCT the_DET militant_ADJ group_NOUN Hamas_PROPN has_AUX informed_VERB it_PRON will_AUX participate_VERB in_ADP the_DET planned_VERB approaching_ADJ Parliamentary_ADJ elections_NOUN ._PUNCT

B) tokens: On the aforesaid day Palestinians protest in endorsement of Hezbollah and Syria , the terrorist group Hamas has stated it will take part in the set upcoming Parliamentary elections .
tags: ADP DET NOUN NOUN PROPN VERB ADP NOUN ADP PROPN CCONJ PROPN PUNCT DET ADJ NOUN PROPN AUX VERB PRON AUX VERB ADP DET VERB ADJ ADJ NOUN PUNCT
tagged_tokens: On_ADP the_DET aforesaid_NOUN day_NOUN Palestinians_PROPN protest_VERB in_ADP endorsement_NOUN of_ADP Hezbollah_PROPN and_CCONJ Syria_PROPN ,_PUNCT the_DET terrorist_ADJ group_NOUN Hamas_PROPN has_AUX stated_VERB it_PRON will_AUX take_VERB part_ADP in_ADP the_DET set_VERB upcoming_ADJ Parliamentary_ADJ elections_NOUN ._PUNCT

C) tokens: On the same day Palestinians object in back of Hezbollah and Syria , the terrorist faction Hamas has reported it will take part in the slated imminent Parliamentary elections .
tags: ADP DET NOUN NOUN PROPN VERB ADP NOUN ADP PROPN CCONJ PROPN PUNCT DET ADJ NOUN PROPN AUX VERB PRON AUX VERB ADP DET VERB ADJ ADJ NOUN PUNCT
tagged_tokens: On_ADP the_DET same_ADJ day_NOUN Palestinians_PROPN object_VERB in_ADP back_ADP of_ADP Hezbollah_PROPN and_CCONJ Syria_PROPN ,_PUNCT the_DET terrorist_ADJ faction_NOUN Hamas_PROPN has_AUX reported_VERB it_PRON will_AUX take_VERB part_ADP in_ADP the_DET slated_VERB imminent_ADJ Parliamentary_ADJ elections_NOUN ._PUNCTD) tokens: On the same day Palestinians protest in support of Hezbollah and Syria , the terrorist group Hamas has indicated it will participate in the scheduled upcoming Parliamentary elections .
tags: ADP DET ADJ NOUN PROPN VERB ADP NOUN ADP PROPN CCONJ PROPN PUNCT DET ADJ NOUN PROPN AUX VERB PRON AUX VERB ADP DET VERB ADJ ADJ NOUN PUNCT
tagged_tokens: On_ADP the_DET same_ADJ day_NOUN Palestinians_PROPN protest_VERB in_ADP support_NOUN of_ADP Hezbollah_PROPN and_CCONJ Syria_PROPN ,_PUNCT the_DET terrorist_ADJ group_NOUN Hamas_PROPN has_AUX indicated_VERB it_PRON will_AUX participate_VERB in_ADP the_DET scheduled_VERB upcoming_ADJ Parliamentary_ADJ elections_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Bills: To the north in Lebanon , there be grave altercation within Hezbollah about participate the Lebanese political system in beam of Syria 's ensure leave .
tags: ADP DET NOUN ADP PROPN PUNCT PRON VERB ADJ NOUN ADP PROPN SCONJ VERB DET ADJ ADJ NOUN ADP NOUN ADP PROPN PART VERB NOUN PUNCT
tagged_tokens: Bills:_ADP To_ADP the_DET north_NOUN in_ADP Lebanon_PROPN ,_PUNCT there_PRON be_VERB grave_ADJ altercation_NOUN within_ADP Hezbollah_PROPN about_SCONJ participate_VERB the_DET Lebanese_ADJ political_ADJ system_NOUN in_ADP beam_NOUN of_ADP Syria_PROPN 's_PART ensure_VERB leave_NOUN ._PUNCT

B) tokens: Tokens: To the north in Lebanon , there be earnest argument within Hezbollah about join the Lebanese political arena in light of Syria 's promise leave .
tags: ADP DET NOUN ADP PROPN PUNCT PRON VERB ADJ NOUN ADP PROPN SCONJ VERB DET ADJ ADJ NOUN ADP NOUN ADP PROPN PART VERB NOUN PUNCT
tagged_tokens: Tokens:_ADP To_ADP the_DET north_NOUN in_ADP Lebanon_PROPN ,_PUNCT there_PRON be_VERB earnest_ADJ argument_NOUN within_ADP Hezbollah_PROPN about_SCONJ join_VERB the_DET Lebanese_ADJ political_ADJ arena_NOUN in_ADP light_NOUN of_ADP Syria_PROPN 's_PART promise_VERB leave_NOUN ._PUNCT

C) tokens: Pieces: To the north in Lebanon , there be serious dispute within Hezbollah about getting into the Lebanese political operation in gleam of Syria 's assurance exit .
tags: ADP DET NOUN ADP PROPN PUNCT PRON VERB ADJ NOUN ADP PROPN SCONJ VERB DET ADJ ADJ NOUN ADP NOUN ADP PROPN PART VERB NOUN PUNCT
tagged_tokens: Pieces:_ADP To_ADP the_DET north_NOUN in_ADP Lebanon_PROPN ,_PUNCT there_PRON be_VERB serious_ADJ dispute_NOUN within_ADP Hezbollah_PROPN about_SCONJ get_VERB into_ADP the_DET Lebanese_ADJ political_ADJ operation_NOUN in_ADP gleam_NOUN of_ADP Syria_PROPN 's_PART assurance_VERB exit_NOUN ._PUNCTD) tokens: To the north in Lebanon , there is serious debate within Hezbollah about entering the Lebanese political process in light of Syria 's promised withdrawal .
tags: ADP DET NOUN ADP PROPN PUNCT PRON VERB ADJ NOUN ADP PROPN SCONJ VERB DET ADJ ADJ NOUN ADP NOUN ADP PROPN PART VERB NOUN PUNCT
tagged_tokens: To_ADP the_DET north_NOUN in_ADP Lebanon_PROPN ,_PUNCT there_PRON is_VERB serious_ADJ debate_NOUN within_ADP Hezbollah_PROPN about_SCONJ entering_VERB the_DET Lebanese_ADJ political_ADJ process_NOUN in_ADP light_NOUN of_ADP Syria_PROPN 's_PART promised_VERB withdrawal_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: The press habitually obscures the differentiations between terrorism and warranted opposition , as the current article by Daniel Okrent of The New York Times evidences .
tags: DET NOUN ADV VERB DET NOUN ADP NOUN CCONJ ADJ NOUN PUNCT SCONJ DET ADJ NOUN ADP PROPN PROPN ADP DET PROPN PROPN PROPN VERB PUNCT
tagged_tokens: The_DET press_NOUN habitually_ADV obscures_VERB the_DET differentiations_NOUN between_ADP terrorism_NOUN and_CCONJ warranted_ADJ opposition_NOUN ,_PUNCT as_SCONJ the_DET current_ADJ article_NOUN by_ADP Daniel_PROPN Okrent_PROPN of_ADP The_DET New_PROPN York_PROPN Times_PROPN evidences_VERB ._PUNCT

B) tokens: The media customarily blurs the distinctions between terrorism and justified resistance , as the modern article by Daniel Okrent of The New York Times displays .
tags: DET NOUN ADV VERB DET NOUN ADP NOUN CCONJ ADJ NOUN PUNCT SCONJ DET ADJ NOUN ADP PROPN PROPN ADP DET PROPN PROPN PROPN VERB PUNCT
tagged_tokens: The_DET media_NOUN customarily_ADV blurs_VERB the_DET distinctions_NOUN between_ADP terrorism_NOUN and_CCONJ justified_ADJ resistance_NOUN ,_PUNCT as_SCONJ the_DET modern_ADJ article_NOUN by_ADP Daniel_PROPN Okrent_PROPN of_ADP The_DET New_PROPN York_PROPN Times_PROPN displays_VERB ._PUNCT

C) tokens: The press regularly blurs the variations between terrorism and warranted opposition , as the current article by Daniel Okrent of The New York Times displays .
tags: DET NOUN ADV VERB DET NOUN ADP NOUN CCONJ ADJ NOUN PUNCT SCONJ DET ADJ NOUN ADP PROPN PROPN ADP DET PROPN PROPN PROPN VERB PUNCT
tagged_tokens: The_DET press_NOUN regularly_ADV blurs_VERB the_DET variations_NOUN between_ADP terrorism_NOUN and_CCONJ warranted_ADJ opposition_NOUN ,_PUNCT as_SCONJ the_DET current_ADJ article_NOUN by_ADP Daniel_PROPN Okrent_PROPN of_ADP The_DET New_PROPN York_PROPN Times_PROPN displays_VERB ._PUNCTD) tokens: The media routinely obscures the lines between terrorism and legitimate resistance , as the recent article by Daniel Okrent of The New York Times demonstrates .
tags: DET NOUN ADV VERB DET NOUN ADP NOUN CCONJ ADJ NOUN PUNCT SCONJ DET ADJ NOUN ADP PROPN PROPN ADP DET PROPN PROPN PROPN VERB PUNCT
tagged_tokens: The_DET media_NOUN routinely_ADV obscures_VERB the_DET lines_NOUN between_ADP terrorism_NOUN and_CCONJ legitimate_ADJ resistance_NOUN ,_PUNCT as_SCONJ the_DET recent_ADJ article_NOUN by_ADP Daniel_PROPN Okrent_PROPN of_ADP The_DET New_PROPN York_PROPN Times_PROPN demonstrates_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: symbols: ...
tags: SYM
tagged_tokens: ..._SYM

B) tokens: symbols: ...
tags: SYM
tagged_tokens: ..._SYM

C) tokens: representations: ...
tags: SYM
tagged_tokens: ..._SYMD) tokens: ...
tags: SYM
tagged_tokens: ..._SYM
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: The call to circumvent the unmistakable to meet the need to avert collision does not bring peace , but merely stalls the inevitable clash as the preyers of Hamas and Hezbollah benefit from the basic fragility of the globalists and the media .
tags: DET NOUN PART VERB DET ADJ PART VERB DET NOUN PART VERB NOUN PUNCT CCONJ ADV VERB DET ADJ NOUN as SCONJ DET NOUN ADP PROPN CCONJ PROPN VERB ADP DET ADJ NOUN ADP DET NOUN CCONJ DET NOUN PUNCT
tagged_tokens: The_DET call_NOUN to_PART circumvent_VERB the_DET unmistakable_ADJ to_PART meet_VERB the_DET need_NOUN to_PART avert_VERB collision_NOUN does_AUX not_PART bring_VERB peace_NOUN ,_PUNCT but_CCONJ merely_ADV stalls_VERB the_DET inevitable_ADJ clash_NOUN as_SCONJ the_DET preyers_NOUN of_ADP Hamas_PROPN and_CCONJ Hezbollah_PROPN benefit_VERB from_ADP the_DET basic_ADJ fragility_NOUN of_ADP the_DET globalists_NOUN and_CCONJ the_DET media_NOUN ._PUNCT

B) tokens: The verdict to bypass the evident to cater the requirement to shun dispute does not bring harmony , but simply puts off the inevitable disagreement as the usurpers of Hamas and Hezbollah take advantage of the inherent weakness of the universalists and the media .
tags: DET NOUN PART VERB DET ADJ PART VERB DET NOUN PART VERB NOUN PUNCT CCONJ ADV VERB DET ADJ NOUN as SCONJ DET NOUN ADP PROPN CCONJ PROPN VERB ADP DET ADJ NOUN ADP DET NOUN CCONJ DET NOUN PUNCT
tagged_tokens: The_DET verdict_NOUN to_PART bypass_VERB the_DET evident_ADJ to_PART cater_VERB the_DET requirement_NOUN to_PART shun_VERB dispute_NOUN does_AUX not_PART bring_VERB harmony_NOUN ,_PUNCT but_CCONJ simply_ADV puts_VERB off_ADP the_DET inevitable_ADJ disagreement_NOUN as_SCONJ the_DET usurpers_NOUN of_ADP Hamas_PROPN and_CCONJ Hezbollah_PROPN take_VERB advantage_ADP of_ADP the_DET inherent_ADJ weakness_NOUN of_ADP the_DET universalists_NOUN and_CCONJ the_DET media_NOUN ._PUNCT

C) tokens: The option to avoid the unmistakable to fill the need to dodge clash does not bring harmony , but only delays the inevitable contention as the preyers of Hamas and Hezbollah exploit the intrinsic flaw of the cosmopolitans and the media .
tags: DET NOUN PART VERB DET ADJ PART VERB DET NOUN PART VERB NOUN PUNCT CCONJ ADV VERB DET ADJ NOUN as SCONJ DET NOUN ADP PROPN CCONJ PROPN VERB DET ADJ NOUN ADP DET NOUN CCONJ DET NOUN PUNCT
tagged_tokens: The_DET option_NOUN to_PART avoid_VERB the_DET unmistakable_ADJ to_PART fill_VERB the_DET need_NOUN to_PART dodge_VERB clash_NOUN does_AUX not_PART bring_VERB harmony_NOUN ,_PUNCT but_CCONJ only_ADV delays_VERB the_DET inevitable_ADJ contention_NOUN as_SCONJ the_DET preyers_NOUN of_ADP Hamas_PROPN and_CCONJ Hezbollah_PROPN exploit_VERB the_DET intrinsic_ADJ flaw_NOUN of_ADP the_DET cosmopolitans_NOUN and_CCONJ the_DET media_NOUN ._PUNCTD) tokens: The decision to sidestep the obvious to satisfy the need to avoid confrontation does not bring peace , but only delays the eventual conflict as the predators of Hamas and Hezbollah exploit the inherent weakness of the internationals and the media .
tags: DET NOUN PART VERB DET ADJ PART VERB DET NOUN PART VERB NOUN AUX PART VERB NOUN PUNCT CCONJ ADV VERB DET ADJ NOUN SCONJ DET NOUN ADP PROPN CCONJ PROPN VERB DET ADJ NOUN ADP DET NOUN CCONJ DET NOUN PUNCT
tagged_tokens: The_DET decision_NOUN to_PART sidestep_VERB the_DET obvious_ADJ to_PART satisfy_VERB the_DET need_NOUN to_PART avoid_VERB confrontation_NOUN does_AUX not_PART bring_VERB peace_NOUN ,_PUNCT but_CCONJ only_ADV delays_VERB the_DET eventual_ADJ conflict_NOUN as_SCONJ the_DET predators_NOUN of_ADP Hamas_PROPN and_CCONJ Hezbollah_PROPN exploit_VERB the_DET inherent_ADJ weakness_NOUN of_ADP the_DET internationals_NOUN and_CCONJ the_DET media_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: I 've been upset about this fact for a couple of weeks now , ever since some groups and governments proposed we have to receive the fact that Hezbollah will get involved in leading Lebanon .
tags: PRON AUX AUX VERB ADP DET NOUN ADP DET NUM ADJ NOUN ADV PUNCT ADV SCONJ DET NOUN CCONJ NOUN VERB PRON VERB PART VERB DET NOUN SCONJ PROPN AUX VERB ADJ SCONJ VERB PROPN PUNCT
tagged_tokens: I_PRON 've_AUX been_AUX upset_VERB about_ADP this_DET fact_NOUN for_ADP a_DET couple_NUM of_ADJ weeks_NOUN now_ADV ,_PUNCT ever_ADV since_SCONJ some_DET groups_NOUN and_CCONJ governments_NOUN proposed_VERB we_PRON have_VERB to_PART receive_VERB the_DET fact_NOUN that_SCONJ Hezbollah_PROPN will_AUX get_VERB involved_ADJ in_SCONJ leading_VERB Lebanon_PROPN .

B) tokens: I 've been smoldering over this fact for a few weeks now , ever since some organizations and governments suggested we have to admit the fact that Hezbollah will get implicated in running Lebanon .
tags: PRON AUX AUX VERB ADP DET NOUN ADP DET NUM ADJ NOUN ADV PUNCT ADV SCONJ DET NOUN CCONJ NOUN VERB PRON VERB PART VERB DET NOUN SCONJ PROPN AUX VERB ADJ SCONJ VERB PROPN PUNCT
tagged_tokens: I_PRON 've_AUX been_AUX smoldering_VERB over_ADP this_DET fact_NOUN for_ADP a_DET few_NUM weeks_NOUN now_ADV ,_PUNCT ever_ADV since_SCONJ some_DET organizations_NOUN and_CCONJ governments_NOUN suggested_VERB we_PRON have_VERB to_PART admit_VERB the_DET fact_NOUN that_SCONJ Hezbollah_PROPN will_AUX get_VERB implicated_ADJ in_SCONJ running_VERB Lebanon_PROPN .

C) tokens: I 've been steaming over this fact for a few weeks now , ever since some groups and governments hinted we have to acknowledge the fact that Hezbollah will get involved in administering Lebanon .
tags: PRON AUX AUX VERB ADP DET NOUN ADP DET NUM ADJ NOUN ADV PUNCT ADV SCONJ DET NOUN CCONJ NOUN VERB PRON VERB PART VERB DET NOUN SCONJ PROPN AUX VERB ADJ SCONJ VERB PROPN PUNCT
tagged_tokens: I_PRON 've_AUX been_AUX steaming_VERB over_ADP this_DET fact_NOUN for_ADP a_DET few_NUM weeks_NOUN now_ADV ,_PUNCT ever_ADV since_SCONJ some_DET groups_NOUN and_CCONJ governments_NOUN hinted_VERB we_PRON have_VERB to_PART acknowledge_VERB the_DET fact_NOUN that_SCONJ Hezbollah_PROPN will_AUX get_VERB involved_ADJ in_SCONJ administering_VERB Lebanon_PROPN .D) tokens: I 've been fuming over this fact for a few weeks now , ever since some organizations and governments suggested we need to accept the fact that Hezbollah will get involved in running Lebanon .
tags: PRON AUX AUX VERB ADP DET NOUN ADP DET ADJ NOUN ADV PUNCT ADV SCONJ DET NOUN CCONJ NOUN VERB PRON VERB PART VERB DET NOUN SCONJ PROPN AUX VERB ADJ SCONJ VERB PROPN PUNCT
tagged_tokens: I_PRON 've_AUX been_AUX fuming_VERB over_ADP this_DET fact_NOUN for_ADP a_DET few_ADJ weeks_NOUN now_ADV ,_PUNCT ever_ADV since_SCONJ some_DET organizations_NOUN and_CCONJ governments_NOUN suggested_VERB we_PRON need_VERB to_PART accept_VERB the_DET fact_NOUN that_SCONJ Hezbollah_PROPN will_AUX get_VERB involved_ADJ in_SCONJ running_VERB Lebanon_PROPN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: What_PRON is_AUX this_PRON ?_PUNCT
tags: PRON AUX PRON PUNCT
tagged_tokens: What_PRON is_AUX this_PRON ?_PUNCT

B) tokens: The_DETF hell_NOUN is_AUX this_PRON ?_PUNCT
tags: DETF NOUN AUX PRON PUNCT
tagged_tokens: The_DETF hell_NOUN is_AUX this_PRON ?_PUNCT

C) tokens: What_PRON on_ADP earth_NOUN is_AUX this_PRON ?_PUNCT
tags: PRON ADP NOUN AUX PRON PUNCT
tagged_tokens: What_PRON on_ADP earth_NOUN is_AUX this_PRON ?_PUNCTD) tokens: Wtf is this ?
tags: PRON AUX PRON PUNCT
tagged_tokens: Wtf_PRON is_AUX this_PRON ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: This is a terrorist group pure and simple .
tags: PRON AUX DET ADJ NOUN CCONJ ADJ PUNCT
tagged_tokens: This_PRON is_AUX a_DET terrorist_NOUN group_NOUN pure_ADJ and_CCONJ simple_ADJ ._PUNCT

B) tokens: This is a terrorism organization unadorned and clean .
tags: PRON AUX DET NOUN CCONJ ADJ PUNCT
tagged_tokens: This_PRON is_AUX a_DET terrorism_NOUN organization_NOUN unadorned_ADJ and_CCONJ clean_ADJ ._PUNCT

C) tokens: This is a terrorism racket plain and clear .
tags: PRON AUX DET NOUN ADJ CCONJ ADJ PUNCT
tagged_tokens: This_PRON is_AUX a_DET terrorism_NOUN racket_NOUN plain_ADJ and_CCONJ clear_ADJ ._PUNCTD) tokens: This is a terrorist organization plain and simple .
tags: PRON AUX DET ADJ NOUN ADJ CCONJ ADJ PUNCT
tagged_tokens: This_PRON is_AUX a_DET terrorist_ADJ organization_NOUN plain_ADJ and_CCONJ simple_ADJ ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: This is the syndicate that rocketed our Marine camps in 1983 , took Americans captive throughout the 80's and now they should be regarded as a trustworthy syndicate ?
tags: PRON AUX DET NOUN PRON VERB PRON PROPN NOUN ADP NUM PUNCT VERB PROPN NOUN ADP DET NOUN CCONJ ADV PRON AUX AUX VERB DET ADJ NOUN PUNCT
tagged_tokens: This_PRON is_AUX the_DET syndicate_NOUN that_PRON rocketed_VERB our_PRON Marine_PROPN camps_NOUN in_ADP 1983_NUM ,_PUNCT took_VERB Americans_PROPN captive_NOUN throughout_ADP the_DET 80's_NOUN and_CCONJ now_ADV they_PRON should_AUX be_AUX regarded_VERB as_DET a_DET trustworthy_ADJ syndicate_NOUN ?_PUNCT

B) tokens: This is the institution that bombed our Marine camps in 1983 , took Americans prisoner throughout the 80's and now they should be thought of as a lawful institution ?
tags: PRON AUX DET NOUN PRON VERB PRON PROPN NOUN ADP NUM PUNCT VERB PROPN NOUN ADP DET NOUN CCONJ ADV PRON AUX AUX VERB DET ADJ NOUN PUNCT
tagged_tokens: This_PRON is_AUX the_DET institution_NOUN that_PRON bombed_VERB our_PRON Marine_PROPN camps_NOUN in_ADP 1983_NUM ,_PUNCT took_VERB Americans_PROPN prisoner_NOUN throughout_ADP the_DET 80's_NOUN and_CCONJ now_ADV they_PRON should_AUX be_AUX thought_VERB of_ADP as_DET a_DET lawful_ADJ institution_NOUN ?_PUNCT

C) tokens: This is the syndicate that blasted our Marine cantonments in 1983 , took Americans prisoner throughout the 80's and now they should be thought of as a legitimate syndicate ?
tags: PRON AUX DET NOUN PRON VERB PRON PROPN NOUN ADP NUM PUNCT VERB PROPN NOUN ADP DET NOUN CCONJ ADV PRON AUX AUX VERB DET ADJ NOUN PUNCT
tagged_tokens: This_PRON is_AUX the_DET syndicate_NOUN that_PRON blasted_VERB our_PRON Marine_PROPN cantonments_NOUN in_ADP 1983_NUM ,_PUNCT took_VERB Americans_PROPN prisoner_NOUN throughout_ADP the_DET 80's_NOUN and_CCONJ now_ADV they_PRON should_AUX be_AUX thought_VERB of_ADP as_DET a_DET legitimate_ADJ syndicate_NOUN ?_PUNCTD) tokens: This is the organization that bombed our Marine barracks in 1983 , took Americans hostage throughout the 80's and now they should be considered a legitimate organization ?
tags: PRON AUX DET NOUN PRON VERB PRON PROPN NOUN ADP NUM PUNCT VERB PROPN NOUN ADP DET NOUN CCONJ ADV PRON AUX AUX VERB DET ADJ NOUN PUNCT
tagged_tokens: This_PRON is_AUX the_DET organization_NOUN that_PRON bombed_VERB our_PRON Marine_PROPN barracks_NOUN in_ADP 1983_NUM ,_PUNCT took_VERB Americans_PROPN hostage_NOUN throughout_ADP the_DET 80's_NOUN and_CCONJ now_ADV they_PRON should_AUX be_AUX considered_VERB a_DET legitimate_ADJ organization_NOUN ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: This be merely another reason to never rely on the MSM , and positively not the Europeans .
tags: PRON AUX ADV DET NOUN PART ADV VERB DET PROPN PUNCT CCONJ ADV ADV DET PROPN PUNCT
tagged_tokens: This_PRON be_AUX merely_ADV another_DET reason_NOUN to_PART never_ADV rely_VERB on_DET MSM_PROPN ,_PUNCT and_CCONJ positively_ADV not_ADV the_DET Europeans_PROPN ._PUNCT

B) tokens: This be fair another reason to never believe the MSM , and surely not the Europeans .
tags: PRON AUX ADV DET NOUN PART ADV VERB DET PROPN PUNCT CCONJ ADV ADV DET PROPN PUNCT
tagged_tokens: This_PRON be_AUX fair_ADV another_DET reason_NOUN to_PART never_ADV believe_VERB the_DET MSM_PROPN ,_PUNCT and_CCONJ surely_ADV not_ADV the_DET Europeans_PROPN ._PUNCT

C) tokens: This be just another reason to never credit the MSM , and certainly not the Europeans .
tags: PRON AUX ADV DET NOUN PART ADV VERB DET PROPN PUNCT CCONJ ADV ADV DET PROPN PUNCT
tagged_tokens: This_PRON be_AUX just_ADV another_DET reason_NOUN to_PART never_ADV credit_VERB the_DET MSM_PROPN ,_PUNCT and_CCONJ certainly_ADV not_ADV the_DET Europeans_PROPN ._PUNCTD) tokens: This is just another reason to never trust the MSM , and certainly not the Europeans .
tags: PRON AUX ADV DET NOUN PART ADV VERB DET PROPN PUNCT CCONJ ADV ADV DET PROPN PUNCT
tagged_tokens: This_PRON is_AUX just_ADV another_DET reason_NOUN to_PART never_ADV trust_VERB the_DET MSM_PROPN ,_PUNCT and_CCONJ certainly_ADV not_ADV the_DET Europeans_PROPN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: The Iraqi Islamic Gathering lead by Muhsin Abdul Hamid , has been among the few Sunni Muslim groups pleased to assist ( even if rather coolly ) with the Americans .
tags: DET PROPN PROPN PROPN VERB ADP PROPN PROPN PROPN PUNCT AUX AUX ADP DET ADJ ADJ ADJ NOUN ADJ PART VERB PUNCT ADV SCONJ ADV ADV PUNCT ADP DET PROPN PUNCT
tagged_tokens: The_DET Iraqi_PROPN Islamic_PROPN Gathering_PROPN lead_VERB by_ADP Muhsin_PROPN Abdul_PROPN Hamid_PROPN ,_PUNCT has_AUX been_AUX among_ADP the_DET few_ADJ Sunni_ADJ Muslim_ADJ groups_NOUN pleased_ADJ to_PART assist_VERB (_PUNCT even_ADV if_SCONJ rather_ADV coolly_ADV )_PUNCT with_ADP the_DET Americans_PROPN ._PUNCT

B) tokens: The Iraqi Islamic League lead by Muhsin Abdul Hamid , has been among the few Sunni Muslim bands joyful to collaborate ( even if rather coolly ) with the Americans .
tags: DET PROPN PROPN PROPN VERB ADP PROPN PROPN PROPN PUNCT AUX AUX ADP DET ADJ ADJ ADJ NOUN ADJ PART VERB PUNCT ADV SCONJ ADV ADV PUNCT ADP DET PROPN PUNCT
tagged_tokens: The_DET Iraqi_PROPN Islamic_PROPN League_PROPN lead_VERB by_ADP Muhsin_PROPN Abdul_PROPN Hamid_PROPN ,_PUNCT has_AUX been_AUX among_ADP the_DET few_ADJ Sunni_ADJ Muslim_ADJ bands_NOUN joyful_ADJ to_PART collaborate_VERB (_PUNCT even_ADV if_SCONJ rather_ADV coolly_ADV )_PUNCT with_ADP the_DET Americans_PROPN ._PUNCT

C) tokens: The Iraqi Islamic Circle lead by Muhsin Abdul Hamid , has been among the few Sunni Muslim cliques willing to cooperate ( even if rather coolly ) with the Americans .
tags: DET PROPN PROPN PROPN VERB ADP PROPN PROPN PROPN PUNCT AUX AUX ADP DET ADJ ADJ ADJ NOUN ADJ PART VERB PUNCT ADV SCONJ ADV ADV PUNCT ADP DET PROPN PUNCT
tagged_tokens: The_DET Iraqi_PROPN Islamic_PROPN Circle_PROPN lead_VERB by_ADP Muhsin_PROPN Abdul_PROPN Hamid_PROPN ,_PUNCT has_AUX been_AUX among_ADP the_DET few_ADJ Sunni_ADJ Muslim_ADJ cliques_NOUN willing_ADJ to_PART cooperate_VERB (_PUNCT even_ADV if_SCONJ rather_ADV coolly_ADV )_PUNCT with_ADP the_DET Americans_PROPN ._PUNCTD) tokens: The Iraqi Islamic Party lead by Muhsin Abdul Hamid , has been among the few Sunni Muslim groups willing to cooperate ( even if rather lukewarmly ) with the Americans .
tags: DET PROPN PROPN PROPN VERB ADP PROPN PROPN PROPN PUNCT AUX AUX ADP DET ADJ ADJ ADJ NOUN ADJ PART VERB PUNCT ADV SCONJ ADV ADV PUNCT ADP DET PROPN PUNCT
tagged_tokens: The_DET Iraqi_PROPN Islamic_PROPN Party_PROPN lead_VERB by_ADP Muhsin_PROPN Abdul_PROPN Hamid_PROPN ,_PUNCT has_AUX been_AUX among_ADP the_DET few_ADJ Sunni_ADJ Muslim_ADJ groups_NOUN willing_ADJ to_PART cooperate_VERB (_PUNCT even_ADV if_SCONJ rather_ADV lukewarmly_ADV )_PUNCT with_ADP the_DET Americans_PROPN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: It be now menacing to drag out of the Allawi caretaker administration .
tags: PRON AUX ADV VERB PART VERB ADP ADP DET PROPN NOUN NOUN PUNCT
tagged_tokens: It_PRON be_AUX now_ADV menacing_VERB to_PART drag_VERB out_ADP of_ADP the_DET Allawi_PROPN caretaker_NOUN administration_NOUN ._PUNCT

B) tokens: It be presently menacing to tug out of the Allawi caretaker administration .
tags: PRON AUX ADV VERB PART VERB ADP ADP DET PROPN NOUN NOUN PUNCT
tagged_tokens: It_PRON be_AUX presently_ADV menacing_VERB to_PART tug_VERB out_ADP of_ADP the_DET Allawi_PROPN caretaker_NOUN administration_NOUN ._PUNCT

C) tokens: It be currently menacing to yank out of the Allawi caretaker administration .
tags: PRON AUX ADV VERB PART VERB ADP ADP DET PROPN NOUN NOUN PUNCT
tagged_tokens: It_PRON be_AUX currently_ADV menacing_VERB to_PART yank_VERB out_ADP of_ADP the_DET Allawi_PROPN caretaker_NOUN administration_NOUN ._PUNCTD) tokens: It is now threatening to pull out of the Allawi caretaker government .
tags: PRON AUX ADV VERB PART VERB ADP ADP DET PROPN NOUN NOUN PUNCT
tagged_tokens: It_PRON is_AUX now_ADV threatening_VERB to_PART pull_VERB out_ADP of_ADP the_DET Allawi_PROPN caretaker_NOUN government_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: tokens: Az - Zaman : The Association of Muslim Scholars forbade Iraqis to participate in the onslaught on Fallujah with the Americans .
tags: PROPN PUNCT PROPN PUNCT DET PROPN ADP PROPN PROPN VERB PROPN PART VERB ADP DET NOUN ADP PROPN ADP DET PROPN PUNCT
tagged_tokens: Az_PROPN -_PUNCT Zaman_PROPN :_PUNCT The_DET Association_PROPN of_ADP Muslim_PROPN Scholars_PROPN forbade_VERB Iraqis_PROPN to_PART participate_VERB in_ADP the_DET onslaught_NOUN on_ADP Fallujah_PROPN with_ADP the_DET Americans_PROPN ._PUNCT

B) tokens: tokens: Az - Zaman : The Islamic Association of Muslim Scholars forbade Iraqis to participate in the conflict on Fallujah with the Americans .
tags: PROPN PUNCT PROPN PUNCT DET PROPN ADP PROPN PROPN VERB PROPN PART VERB ADP DET NOUN ADP PROPN ADP DET PROPN PUNCT
tagged_tokens: Az_PROPN -_PUNCT Zaman_PROPN :_PUNCT The_DET Islamic_PROPN Association_PROPN of_ADP Muslim_PROPN Scholars_PROPN forbade_VERB Iraqis_PROPN to_PART participate_VERB in_ADP the_DET conflict_NOUN on_ADP Fallujah_PROPN with_ADP the_DET Americans_PROPN ._PUNCT

C) tokens: tokens: Az - Zaman : The Association of Muslim Scholars banned Iraqis from participating in the raid on Fallujah with the Americans .
tags: PROPN PUNCT PROPN PUNCT DET PROPN ADP PROPN PROPN VERB PROPN PART VERB ADP DET NOUN ADP PROPN ADP DET PROPN PUNCT
tagged_tokens: Az_PROPN -_PUNCT Zaman_PROPN :_PUNCT The_DET Association_PROPN of_ADP Muslim_PROPN Scholars_PROPN banned_VERB Iraqis_PROPN from_ADP participating_VERB in_ADP the_DET raid_NOUN on_ADP Fallujah_PROPN with_ADP the_DET Americans_PROPN ._PUNCTD) tokens: Az - Zaman : The Association of Muslim Scholars forbade Iraqis to participate in the attack on Fallujah with the Americans .
tags: PROPN PUNCT PROPN PUNCT DET PROPN ADP PROPN PROPN VERB PROPN PART VERB ADP DET NOUN ADP PROPN ADP DET PROPN PUNCT
tagged_tokens: Az_PROPN -_PUNCT Zaman_PROPN :_PUNCT The_DET Association_PROPN of_ADP Muslim_PROPN Scholars_PROPN forbade_VERB Iraqis_PROPN to_PART participate_VERB in_ADP the_DET attack_NOUN on_ADP Fallujah_PROPN with_ADP the_DET Americans_PROPN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: In a declaration , the AMS stated that for Iraqis to participate with "" plundering forces "" in the offensive on a metropolis , the populace of which is Muslim ( such as Fallujah ) would be thought of the most deadly of deadly sins .
tags: ADP DET NOUN PUNCT DET PROPN AUX VERB SCONJ SCONJ PROPN PART VERB NOUN ADP PUNCT VERB NOUN PUNCT ADP DET NOUN ADP DET NOUN PUNCT DET NOUN ADP PRON AUX ADJ PUNCT ADJ ADP PROPN PUNCT AUX AUX VERB DET ADV ADJ ADP ADJ NOUN PUNCT
tagged_tokens: In_ADP a_DET declaration_NOUN ,_PUNCT the_DET AMS_PROPN AUX_VERB state_VERB that_SCONJ for_SCONJ Iraqis_PROPN to_PART participate_VERB with_ADP ""_PUNCT plundering_VERB forces_NOUN ""_PUNCT in_ADP the_DET offensive_NOUN on_ADP a_DET metropolis_NOUN ,_PUNCT the_DET populace_NOUN of_ADP which_PRON is_AUX Muslim_ADJ (_PUNCT such_ADJ as_ADP Fallujah_PROPN )_PUNCT would_AUX be_AUX thought_VERB of_ADP the_DET most_ADV deadly_ADJ of_ADP deadly_ADJ sins_NOUN ._PUNCT

B) tokens: In a document , the AMS said that for Iraqis to take part with "" looter forces "" in the attack on a metropolis , the inhabitants of which is Muslim ( such as Fallujah ) would be believed the most dangerous of dangerous sins .
tags: ADP DET NOUN PUNCT DET PROPN AUX VERB SCONJ SCONJ PROPN PART VERB NOUN ADP PUNCT VERB NOUN PUNCT ADP DET NOUN ADP DET NOUN PUNCT DET NOUN ADP PRON AUX ADJ PUNCT ADJ ADP PROPN PUNCT AUX AUX BELIEVE VERB DET ADV ADJ ADP ADJ NOUN PUNCT
tagged_tokens: In_ADP a_DET document_NOUN ,_PUNCT the_DET AMS_PROPN AUX_VERB say_VERB that_SCONJ for_SCONJ Iraqis_PROPN to_PART take_VERB part_NOUN with_ADP ""_PUNCT looter_VERB forces_NOUN ""_PUNCT in_ADP the_DET attack_NOUN on_ADP a_DET metropolis_NOUN ,_PUNCT the_DET inhabitants_NOUN of_ADP which_PRON is_AUX Muslim_ADJ (_PUNCT such_ADJ as_ADP Fallujah_PROPN )_PUNCT would_AUX be_AUX believe_VERB the_DET most_ADV dangerous_ADJ of_ADP dangerous_ADJ sins_NOUN ._PUNCT

C) tokens: In a release , the AMS noted that for Iraqis to take part with "" pillaging forces "" in the offensive on a metropolis , the citizens of which is Muslim ( such as Fallujah ) would be regarded the most serious of serious sins .
tags: ADP DET NOUN PUNCT DET PROPN AUX VERB SCONJ SCONJ PROPN PART VERB NOUN ADP PUNCT VERB NOUN PUNCT ADP DET NOUN ADP DET NOUN PUNCT DET NOUN ADP PRON AUX ADJ PUNCT ADJ ADP PROPN PUNCT AUX AUX REGARD VERB DET ADV ADJ ADP ADJ NOUN PUNCT
tagged_tokens: In_ADP a_DET release_NOUN ,_PUNCT the_DET AMS_PROPN AUX_VERB note_VERB that_SCONJ for_SCONJ Iraqis_PROPN to_PART take_VERB part_NOUN with_ADP ""_PUNCT pillage_VERB forces_NOUN ""_PUNCT in_ADP the_DET offensive_NOUN on_ADP a_DET metropolis_NOUN ,_PUNCT the_DET citizens_NOUN of_ADP which_PRON is_AUX Muslim_ADJ (_PUNCT such_ADJ as_ADP Fallujah_PROPN )_PUNCT would_AUX be_AUX regard_VERB the_DET most_ADV serious_ADJ of_ADP serious_ADJ sins_NOUN ._PUNCTD) tokens: In a communique , the AMS said that for Iraqis to take part with "" raiding forces "" in the assault on a city , the population of which is Muslim ( such as Fallujah ) would be considered the most mortal of mortal sins .
tags: ADP DET NOUN PUNCT DET PROPN VERB SCONJ SCONJ PROPN PART VERB NOUN ADP PUNCT VERB NOUN PUNCT ADP DET NOUN ADP DET NOUN PUNCT DET NOUN ADP PRON AUX ADJ PUNCT ADJ ADP PROPN PUNCT AUX AUX VERB DET ADV ADJ ADP ADJ NOUN PUNCT
tagged_tokens: In_ADP a_DET communique_NOUN ,_PUNCT the_DET AMS_PROPN said_VERB that_SCONJ for_SCONJ Iraqis_PROPN to_PART take_VERB part_NOUN with_ADP ""_PUNCT raiding_VERB forces_NOUN ""_PUNCT in_ADP the_DET assault_NOUN on_ADP a_DET city_NOUN ,_PUNCT the_DET population_NOUN of_ADP which_PRON is_AUX Muslim_ADJ (_PUNCT such_ADJ as_ADP Fallujah_PROPN )_PUNCT would_AUX be_AUX considered_VERB the_DET most_ADV mortal_ADJ of_ADP mortal_ADJ sins_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: The extremist Shiite Sadr current published a statement banning the cooperation of Iraqi forces in the offensive on Fallujah , equally .
tags: DET ADJ ADJ PROPN NOUN VERB DET NOUN VERB DET NOUN VERB DET NOUN ADP ADJ NOUN ADP DET NOUN ADP PROPN PUNCT ADV ADV PUNCT
tagged_tokens: The_DET extremist_ADJ Shiite_ADJ Sadr_PROPN current_NOUN published_VERB a_DET statement_NOUN banning_VERB the_DET cooperation_NOUN of_ADP Iraqi_ADJ forces_NOUN in_ADP the_DET offensive_NOUN on_ADP Fallujah_PROPN ,_PUNCT equally_ADV ADV_PUNCT

B) tokens: The basic Shiite Sadr group issued a statement banning the attendance of Iraqi forces in the aggression on Fallujah , moreover .
tags: DET ADJ ADJ PROPN NOUN VERB DET NOUN VERB DET NOUN VERB DET NOUN ADP ADJ NOUN ADP DET NOUN ADP PROPN PUNCT ADV ADV PUNCT
tagged_tokens: The_DET basic_ADJ Shiite_ADJ Sadr_PROPN group_NOUN issued_VERB a_DET statement_NOUN banning_VERB the_DET attendance_NOUN of_ADP Iraqi_ADJ forces_NOUN in_ADP the_DET aggression_NOUN on_ADP Fallujah_PROPN ,_PUNCT moreover_ADV ADV_PUNCT

C) tokens: The radical Shiite Sadr current published a statement forbidding the involvement of Iraqi troops in the aggression on Fallujah , additionally .
tags: DET ADJ ADJ PROPN NOUN VERB DET NOUN VERB DET NOUN VERB DET NOUN ADP ADJ NOUN ADP DET NOUN ADP PROPN PUNCT ADV ADV PUNCT
tagged_tokens: The_DET radical_ADJ Shiite_ADJ Sadr_PROPN current_NOUN published_VERB a_DET statement_NOUN forbidding_VERB the_DET involvement_NOUN of_ADP Iraqi_ADJ troops_NOUN in_ADP the_DET aggression_NOUN on_ADP Fallujah_PROPN ,_PUNCT additionally_ADV ADV_PUNCTD) tokens: The radical Shiite Sadr movement issued a statement forbidding the participation of Iraqi troops in the attack on Fallujah , as well .
tags: DET ADJ ADJ PROPN NOUN VERB DET NOUN VERB DET NOUN ADP ADJ NOUN ADP DET NOUN ADP PROPN PUNCT ADV ADV PUNCT
tagged_tokens: The_DET radical_ADJ Shiite_ADJ Sadr_PROPN movement_NOUN issued_VERB a_DET statement_NOUN forbidding_VERB the_DET participation_NOUN of_ADP Iraqi_ADJ troops_NOUN in_ADP the_DET attack_NOUN on_ADP Fallujah_PROPN ,_PUNCT as_ADV well_ADV ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: The consensus of points of view amid the more militant Sunni Muslim clergy of AMS and the radical Shiites of the Sadr course has been perceived before , last spring during the first US incursion on Fallujah and during the US strike on Mahdi Army personnel in Najaf .
tags: DET NOUN ADP NOUN ADP DET ADV ADJ ADJ ADJ NOUN ADP PROPN CCONJ DET ADJ PROPN ADP DET PROPN NOUN AUX AUX VERB ADV PUNCT ADJ NOUN ADP DET ADJ PROPN NOUN ADP PROPN CCONJ ADP DET PROPN NOUN ADP PROPN PROPN NOUN ADP PROPN PUNCT
tagged_tokens: The_DET consensus_NOUN of_ADP points_NOUN of_ADP view_NOUN amid_ADP the_DET more_ADV militant_ADJ Sunni_ADJ Muslim_ADJ clergy_NOUN of_ADP AMS_PROPN and_CCONJ the_DET radical_ADJ Shiites_PROPN of_ADP the_DET Sadr_PROPN course_NOUN has_AUX been_AUX perceived_VERB before_ADV ,_PUNCT last_ADJ spring_NOUN during_ADP the_DET first_ADJ US_PROPN incursion_NOUN on_ADP Fallujah_PROPN and_CCONJ during_ADP the_DET US_PROPN strike_NOUN on_ADP Mahdi_PROPN Army_PROPN personnel_NOUN in_ADP Najaf_PROPN ._PUNCT

B) tokens: The meeting of opinions among the more belligerent Sunni Muslim clerics of AMS and the extremist Shiites of the Sadr movement has been seen earlier , last spring during the initial US attack on Fallujah and during the US offensive on Mahdi Army militiamen in Najaf .
tags: DET NOUN ADP NOUN ADP DET ADV ADJ ADJ ADJ NOUN ADP PROPN CCONJ DET ADJ PROPN ADP DET PROPN NOUN AUX AUX VERB EARLIER PUNCT ADJ NOUN ADP DET ADJ PROPN NOUN ADP PROPN CCONJ ADP DET PROPN NOUN ADP PROPN PROPN NOUN ADP PROPN PUNCT
tagged_tokens: The_DET meeting_NOUN of_ADP opinions_NOUN among_ADP the_DET more_ADV belligerent_ADJ Sunni_ADJ Muslim_ADJ clerics_NOUN of_ADP AMS_PROPN and_CCONJ the_DET extremist_ADJ Shiites_PROPN of_ADP the_DET Sadr_PROPN movement_NOUN has_AUX been_AUX seen_VERB earlier_PUNCT ,_PUNCT last_ADJ spring_NOUN during_ADP the_DET initial_ADJ US_PROPN attack_NOUN on_ADP Fallujah_PROPN and_CCONJ during_ADP the_DET US_PROPN offensive_NOUN on_ADP Mahdi_PROPN Army_PROPN militiamen_NOUN in_ADP Najaf_PROPN ._PUNCT

C) tokens: The coming together of views among the more hawkish Sunni Muslim clergymen of AMS and the hardline Shiites of the Sadr trend has been observed beforehand , last spring during the preliminary US strike on Fallujah and during the US campaign on Mahdi Army combatants in Najaf .
tags: DET NOUN ADP NOUN ADP DET ADV ADJ ADJ ADJ NOUN ADP PROPN CCONJ DET ADJ PROPN ADP DET PROPN NOUN AUX AUX VERB beforehand PUNCT ADJ NOUN ADP DET ADJ PROPN NOUN ADP PROPN CCONJ ADP DET PROPN NOUN ADP PROPN PROPN NOUN ADP PROPN PUNCT
tagged_tokens: The_DET coming_NOUN together_ADP of_ADP views_NOUN among_ADP the_DET more_ADV hawkish_ADJ Sunni_ADJ Muslim_ADJ clergymen_NOUN of_ADP AMS_PROPN and_CCONJ the_DET hardline_ADJ Shiites_PROPN of_ADP the_DET Sadr_PROPN trend_NOUN has_AUX been_AUX observed_VERB beforehand_PUNCT ,_PUNCT last_ADJ spring_NOUN during_ADP the_DET preliminary_ADJ US_PROPN strike_NOUN on_ADP Fallujah_PROPN and_CCONJ during_ADP the_DET US_PROPN campaign_NOUN on_ADP Mahdi_PROPN Army_PROPN combatants_NOUN in_ADP Najaf_PROPN ._PUNCTD) tokens: The convergence of views among the more militant Sunni Muslim clerics of AMS and the radical Shiites of the Sadr movement has been seen before , last spring during the initial US assault on Fallujah and during the US attack on Mahdi Army militiamen in Najaf .
tags: DET NOUN ADP NOUN ADP DET ADV ADJ ADJ ADJ NOUN ADP PROPN CCONJ DET ADJ PROPN ADP DET PROPN NOUN AUX AUX VERB ADV PUNCT ADJ NOUN ADP DET ADJ PROPN NOUN ADP PROPN CCONJ ADP DET PROPN NOUN ADP PROPN PROPN NOUN ADP PROPN PUNCT
tagged_tokens: The_DET convergence_NOUN of_ADP views_NOUN among_ADP the_DET more_ADV militant_ADJ Sunni_ADJ Muslim_ADJ clerics_NOUN of_ADP AMS_PROPN and_CCONJ the_DET radical_ADJ Shiites_PROPN of_ADP the_DET Sadr_PROPN movement_NOUN has_AUX been_AUX seen_VERB before_ADV ,_PUNCT last_ADJ spring_NOUN during_ADP the_DET initial_ADJ US_PROPN assault_NOUN on_ADP Fallujah_PROPN and_CCONJ during_ADP the_DET US_PROPN attack_NOUN on_ADP Mahdi_PROPN Army_PROPN militiamen_NOUN in_ADP Najaf_PROPN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: coins: Since the ten million persons expiring from malaria shall else be dead .
tags: SCONJ DET NUM NOUN VERB ADP NOUN AUX ADV AUX ADJ PUNCT
tagged_tokens: Since_SCONJ the_DET ten_NUM million_NUM persons_NOUN expiring_VERB from_ADP malaria_NOUN shall_AUX else_ADV be_AUX dead_ADJ ._PUNCT

B) tokens: counters: Due to the ten million persons departing from malaria must otherwise be deceased .
tags: SCONJ DET NUM NOUN VERB ADP NOUN AUX ADV AUX ADJ PUNCT
tagged_tokens: Due_SCONJ to_ADP the_DET ten_NUM million_NUM persons_NOUN departing_VERB from_ADP malaria_NOUN must_AUX otherwise_ADV be_AUX deceased_ADJ ._PUNCT

C) tokens: pieces: Given that the ten million beings perishing from malaria will otherwise be lifeless .
tags: SCONJ DET NUM NOUN VERB ADP NOUN AUX ADV AUX ADJ PUNCT
tagged_tokens: Given_SCONJ that_ADP the_DET ten_NUM million_NUM beings_NOUN perishing_VERB from_ADP malaria_NOUN will_AUX otherwise_ADV be_AUX lifeless_ADJ ._PUNCTD) tokens: Because the 10.000.000 people dying from malaria will otherwise be dead .
tags: SCONJ DET NUM NOUN VERB ADP NOUN AUX ADV AUX ADJ PUNCT
tagged_tokens: Because_SCONJ the_DET 10.000.000_NUM people_NOUN dying_VERB from_ADP malaria_NOUN will_AUX otherwise_ADV be_AUX dead_ADJ ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: items: for instance .
tags: X PUNCT
tagged_tokens: items_X ._.PUNCT

B) tokens: pieces: that is to say .
tags: X PUNCT
tagged_tokens: pieces_X ._PUNCT

C) tokens: items: in other words .
tags: X PUNCT
tagged_tokens: items_X ._PUNCTD) tokens: i.e .
tags: X PUNCT
tagged_tokens: i.e_X ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: He 's not giving 85 % away , he 's donating a figure of stocks each year that decline in measure at the pace of 5 % a year ( until gone ? ) .
tags: PRON AUX PART VERB NUM SYM ADP PUNCT PRON AUX VERB DET NOUN of ADP shares NOUN each DET year NOUN that PRON reduce VERB in ADP extent NOUN at ADP the DET pace NOUN of ADP 5 NUM SYM a DET year NOUN (_PUNCT until SCONJ gone ADJ ? PUNCT ) PUNCT ._PUNCT
tagged_tokens: He_PRON 's_AUX not_PART giving_VERB 85_NUM %_SYM away_ADP ,_PUNCT he_PRON 's_AUX donating_VERB a_DET figure_NOUN of_ADP stocks_NOUN each_DET year_NOUN that_PRON reduce_VERB in_ADP extent_NOUN at_ADP the_DET pace_NOUN of_ADP 5_NUM %_SYM a_DET year_NOUN (_PUNCT until_SCONJ gone_ADJ ?_PUNCT )_PUNCT ._PUNCT

B) tokens: He 's not giving 85 % away , he 's delivering a number of equities each year that decrease in amount at the rate of 5 % a year ( until gone ? ) .
tags: PRON AUX PART VERB NUM SYM ADP PUNCT PRON AUX VERB DET NOUN of ADP shares NOUN each DET year NOUN that PRON reduce VERB in ADP number NOUN at ADP the DET pace NOUN of ADP 5 NUM SYM a DET year NOUN (_PUNCT until SCONJ gone ADJ ? PUNCT ) PUNCT ._PUNCT
tagged_tokens: He_PRON 's_AUX not_PART giving_VERB 85_NUM %_SYM away_ADP ,_PUNCT he_PRON 's_AUX delivering_VERB a_DET number_NOUN of_ADP equities_NOUN each_DET year_NOUN that_PRON reduce_VERB in_ADP number_NOUN at_ADP the_DET pace_NOUN of_ADP 5_NUM %_SYM a_DET year_NOUN (_PUNCT until_SCONJ gone_ADJ ?_PUNCT )_PUNCT ._PUNCT

C) tokens: He 's not giving 85 % away , he 's offering a number of stocks each year that wane in number at the rate of 5 % a year ( until gone ? ) .
tags: PRON AUX PART VERB NUM SYM ADP PUNCT PRON AUX VERB DET NOUN of ADP shares NOUN each DET year NOUN that PRON diminish VERB in ADP measure NOUN at ADP the DET pace NOUN of ADP 5 NUM SYM a DET year NOUN (_PUNCT until SCONJ gone ADJ ? PUNCT ) PUNCT ._PUNCT
tagged_tokens: He_PRON 's_AUX not_PART giving_VERB 85_NUM %_SYM away_ADP ,_PUNCT he_PRON 's_AUX offering_VERB a_DET number_NOUN of_ADP stocks_NOUN each_DET year_NOUN that_PRON diminish_VERB in_ADP measure_NOUN at_ADP the_DET pace_NOUN of_ADP 5_NUM %_SYM a_DET year_NOUN (_PUNCT until_SCONJ gone_ADJ ?_PUNCT )_PUNCT ._PUNCTD) tokens: He 's not giving 85 % away , he 's giving a number of shares each year that decrease in number at the rate of 5 % a year ( until gone ? ) .
tags: PRON AUX PART VERB NUM SYM ADP PUNCT PRON AUX VERB DET NOUN ADP NOUN DET NOUN PRON VERB ADP NOUN ADP DET NOUN ADP NUM SYM DET NOUN PUNCT SCONJ ADJ PUNCT PUNCT PUNCT
tagged_tokens: He_PRON 's_AUX not_PART giving_VERB 85_NUM %_SYM away_ADP ,_PUNCT he_PRON 's_AUX giving_VERB a_DET number_NOUN of_ADP shares_NOUN each_DET year_NOUN that_PRON decrease_VERB in_ADP number_NOUN at_ADP the_DET rate_NOUN of_ADP 5_NUM %_SYM a_DET year_NOUN (_PUNCT until_SCONJ gone_ADJ ?_PUNCT )_PUNCT ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: He references his spouse 's demise exerting an effect on him .
tags: PRON VERB PRON NOUN PART NOUN VERB DET NOUN ADP PRON PUNCT
tagged_tokens: He_PRON references_VERB his_PRON spouse_NOUN 's_PART demise_NOUN exerting_VERB an_DET effect_NOUN on_ADP him_PRON ._PUNCT

B) tokens: He mentions his partner 's passing having an impact on him .
tags: PRON VERB PRON NOUN PART NOUN VERB DET NOUN ADP PRON PUNCT
tagged_tokens: He_PRON mentions_VERB his_PRON partner_NOUN 's_PART passing_NOUN having_VERB an_DET impact_NOUN on_ADP him_PRON ._PUNCT

C) tokens: He expresses his wife 's demise having an influence on him .
tags: PRON VERB PRON NOUN PART NOUN VERB DET NOUN ADP PRON PUNCT
tagged_tokens: He_PRON expresses_VERB his_PRON wife_NOUN 's_PART demise_NOUN having_VERB an_DET influence_NOUN on_ADP him_PRON ._PUNCTD) tokens: He mentions his wife 's death having an effect on him .
tags: PRON VERB PRON NOUN PART NOUN VERB DET NOUN ADP PRON PUNCT
tagged_tokens: He_PRON mentions_VERB his_PRON wife_NOUN 's_PART death_NOUN having_VERB an_DET effect_NOUN on_ADP him_PRON ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: coins: It feels quite sensible that he 's indicating that Bill and Melinda are at an advantageous position , so opening the money fountain at present is a helpful idea , but Buffet is still maintaining the majority of his offering within Berkshire whereby it will grow .
tags: PRON VERB ADV ADJ SCONJ PRON AUX VERB SCONJ PROPN CCONJ PROPN VERB ADP DET ADJ NOUN PUNCT ADV VERB DET NOUN NOUN ADV AUX DET ADJ NOUN PUNCT CCONJ PROPN AUX ADV VERB ADJ ADP PRON NOUN ADP ADP PROPN ADV PRON AUX VERB PUNCT
tagged_tokens: coins_PRON feels_VERB quite_ADV sensible_ADJ that_SCONJ he_PRON 's_AUX indicating_VERB that_SCONJ Bill_PROPN and_CCONJ Melinda_PROPN are_VERB at_ADP an_DET advantageous_ADJ position_NOUN ,_PUNCT so_ADV opening_VERB the_DET money_NOUN fountain_NOUN at_ADP present_ADV is_AUX a_DET helpful_ADJ idea_NOUN ,_PUNCT but_CCONJ Buffet_PROPN is_AUX still_ADV maintaining_VERB the_DET majority_ADJ of_ADP his_PRON offering_NOUN within_ADP of_ADP Berkshire_PROPN whereby_ADV it_PRON will_AUX grow_VERB ._PUNCT

B) tokens: coupons: It appears relatively logical that he 's mentioning that Bill and Melinda are at a favorable location , so initiating the funds flow presently is an advantageous notion , but Buffet is still safeguarding the greater part of his gift inside of Berkshire where it will multiply .
tags: PRON VERB ADV ADJ SCONJ PRON AUX VERB SCONJ PROPN CCONJ PROPN VERB ADP DET ADJ NOUN PUNCT ADV VERB DET NOUN NOUN ADV AUX DET ADJ NOUN PUNCT CCONJ PROPN AUX ADV VERB ADJ ADP PRON NOUN ADP ADP PROPN ADV PRON AUX VERB PUNCT
tagged_tokens: coupons_PRON appears_VERB relatively_ADV logical_ADJ that_SCONJ he_PRON 's_AUX mentioning_VERB that_SCONJ Bill_PROPN and_CCONJ Melinda_PROPN are_VERB at_ADP a_DET favorable_ADJ location_NOUN ,_PUNCT so_ADV initiating_VERB the_DET funds_NOUN flow_NOUN presently_ADV is_AUX an_DET advantageous_ADJ notion_NOUN ,_PUNCT but_CCONJ Buffet_PROPN is_AUX still_ADV safeguarding_VERB the_DET greater_ADJ part_NOUN of_ADP his_PRON gift_NOUN inside_ADP of_ADP Berkshire_PROPN where_ADV it_PRON will_AUX multiply_VERB ._PUNCT

C) tokens: tokens: It looks quite rational that he 's saying that Bill and Melinda are at a premium spot , so activating the money pipe now is a wise idea , but Buffet is still keeping most of his contribution within Berkshire where it will grow .
tags: PRON VERB ADV ADJ SCONJ PRON AUX VERB SCONJ PROPN CCONJ PROPN VERB ADP DET ADJ NOUN PUNCT ADV VERB DET NOUN NOUN ADV AUX DET ADJ NOUN PUNCT CCONJ PROPN AUX ADV VERB ADJ ADP PRON NOUN ADP ADP PROPN ADV PRON AUX VERB PUNCT
tagged_tokens: tokens_PRON looks_VERB quite_ADV rational_ADJ that_SCONJ he_PRON 's_AUX saying_VERB that_SCONJ Bill_PROPN and_CCONJ Melinda_PROPN are_VERB at_ADP a_DET premium_ADJ spot_NOUN ,_PUNCT so_ADV activating_VERB the_DET money_NOUN pipe_NOUN now_ADV is_AUX a_DET wise_ADJ idea_NOUN ,_PUNCT but_CCONJ Buffet_PROPN is_AUX still_ADV keeping_VERB most_ADJ of_ADP his_PRON contribution_NOUN within_ADP of_ADP Berkshire_PROPN where_ADV it_PRON will_AUX grow_VERB ._PUNCTD) tokens: It sounds pretty rational that he 's saying that Bill and Melinda are at a prime spot , so starting the money hose now is a good idea , but Buffet is still keeping most of his donation inside of Berkshire where it will compound .
tags: PRON VERB ADV ADJ SCONJ PRON AUX VERB SCONJ PROPN CCONJ PROPN VERB ADP DET ADJ NOUN PUNCT ADV VERB DET NOUN NOUN ADV AUX DET ADJ NOUN PUNCT CCONJ PROPN AUX ADV VERB ADJ ADP PRON NOUN ADP ADP PROPN ADV PRON AUX VERB PUNCT
tagged_tokens: It_PRON sounds_VERB pretty_ADV rational_ADJ that_SCONJ he_PRON 's_AUX saying_VERB that_SCONJ Bill_PROPN and_CCONJ Melinda_PROPN are_VERB at_ADP a_DET prime_ADJ spot_NOUN ,_PUNCT so_ADV starting_VERB the_DET money_NOUN hose_NOUN now_ADV is_AUX a_DET good_ADJ idea_NOUN ,_PUNCT but_CCONJ Buffet_PROPN is_AUX still_ADV keeping_VERB most_ADJ of_ADP his_PRON donation_NOUN inside_ADP of_ADP Berkshire_PROPN where_ADV it_PRON will_AUX compound_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: symbols: Joe beyond at The Green Express has an incredible article on how the MMP and the EU , even the leftist regions in Asia , are largely welcoming terrorist syndicates as appropriate types of a diplomatic entity :.
tags: PROPN ADV ADP DET PROPN PROPN VERB DET ADJ NOUN SCONJ ADV DET PROPN CCONJ DET PROPN PUNCT ADV DET PROPN CCONJ DET PROPN PUNCT AUX largely_ADV welcoming_VERB terrorist_ADJ syndicates_NOUN as_ADP appropriate_ADJ types_NOUN of_ADP a_DET diplomatic_ADJ entity_NOUN PUNCT
tagged_tokens: symbols_PROPN beyond_ADV at_ADP The_DET Green_PROPN Express_PROPN has_VERB an_DET incredible_ADJ article_NOUN on_SCONJ how_ADV the_DET MMP_PROPN and_CCONJ the_DET EU_PROPN ,_PUNCT even_ADV the_DET leftist_ADJ regions_NOUN in_ADP Asia_PROPN ,_PUNCT are_AUX largely_ADV welcoming_VERB terrorist_ADJ syndicates_NOUN as_ADP appropriate_ADJ types_NOUN of_ADP a_DET diplomatic_ADJ entity_NOUN PUNCT

B) tokens: badges: George across at The Grey Rail has an impressive article on how the MMM and the UN , even the left-leaning regions in Asia , are broadly accepting terrorist groups as lawful forms of a governing body :.
tags: PROPN ADV ADP DET PROPN PROPN VERB DET ADJ NOUN SCONJ ADV DET PROPN CCONJ DET PROPN PUNCT ADV DET ADJ PROPN CCONJ DET PROPN PUNCT AUX broadly_ADV accepting_VERB terrorist_ADJ groups_NOUN as_ADP lawful_ADJ forms_NOUN of_ADP a_DET governing_ADJ body_NOUN PUNCT
tagged_tokens: badges_PROPN across_ADV at_ADP The_DET Grey_PROPN Rail_PROPN has_VERB an_DET impressive_ADJ article_NOUN on_SCONJ how_ADV the_DET MMM_PROPN and_CCONJ the_DET UN_PROPN ,_PUNCT even_ADV the_DET left-leaning_ADJ regions_NOUN in_ADP Asia_PROPN ,_PUNCT are_AUX broadly_ADV accepting_VERB terrorist_ADJ groups_NOUN as_ADP lawful_ADJ forms_NOUN of_ADP a_DET governing_ADJ body_NOUN PUNCT

C) tokens: labels: Fred beyond at The Fifth Line has a distinguished article on how the MSM and the NATO , even the leftist cities in Africa , are mainly accepting terrorist movements as acceptable types of a political union :.
tags: PROPN ADV ADP DET PROPN PROPN VERB DET ADJ NOUN SCONJ ADV DET PROPN CCONJ DET PROPN PUNCT ADV DET ADJ PROPN CCONJ DET PROPN PUNCT AUX mainly_ADV accepting_VERB terrorist_ADJ movements_NOUN as_ADP acceptable_ADJ types_NOUN of_ADP a_DET political_ADJ union_NOUN PUNCT
tagged_tokens: labels_PROPN beyond_ADV at_ADP The_DET Fifth_PROPN Line_PROPN has_VERB a_DET distinguished_ADJ article_NOUN on_SCONJ how_ADV the_DET MSM_PROPN and_CCONJ the_DET NATO_PROPN ,_PUNCT even_ADV the_DET leftist_ADJ cities_NOUN in_ADP Africa_PROPN ,_PUNCT are_AUX mainly_ADV accepting_VERB terrorist_ADJ movements_NOUN as_ADP acceptable_ADJ types_NOUN of_ADP a_DET political_ADJ union_NOUN PUNCTD) tokens: Bill over at The Fourth Rail has an excellent essay on how the MSM and the UN , even the leftist countries in Europe , are basically accepting terrorist organizations as legitimate forms of a political party :
tags: PROPN ADV ADP DET PROPN PROPN VERB DET ADJ NOUN SCONJ ADV DET PROPN CCONJ DET PROPN PUNCT ADV DET ADJ NOUN ADP PROPN PUNCT AUX ADV VERB ADJ NOUN ADP ADJ NOUN ADP DET ADJ NOUN PUNCT
tagged_tokens: Bill_PROPN over_ADV at_ADP The_DET Fourth_PROPN Rail_PROPN has_VERB an_DET excellent_ADJ essay_NOUN on_SCONJ how_ADV the_DET MSM_PROPN and_CCONJ the_DET UN_PROPN ,_PUNCT even_ADV the_DET leftist_ADJ countries_NOUN in_ADP Europe_PROPN ,_PUNCT are_AUX basically_ADV accepting_VERB terrorist_ADJ organizations_NOUN as_ADP legitimate_ADJ forms_NOUN of_ADP a_DET political_ADJ party_NOUN :_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: symbols: At the similar date Palestinians contest in favor of Hezbollah and Syria , the terrorist crew Hamas has designated it will engage in the projected upcoming Parliamentary contests .
tags: ADP DET ADJ NOUN PROPN VERB ADP NOUN ADP PROPN CCONJ PROPN PUNCT DET ADJ NOUN PROPN AUX VERB PRON AUX VERB ADP DET VERB ADJ ADJ NOUN PUNCT
tagged_tokens: At_ADP the_DET similar_ADJ date_NOUN Palestinians_PROPN contest_VERB in_ADP favor_NOUN of_ADP Hezbollah_PROPN and_CCONJ Syria_PROPN ,_PUNCT the_DET terrorist_ADJ crew_NOUN Hamas_PROPN has_AUX designated_VERB it_PRON will_AUX engage_VERB in_ADP the_DET projected_VERB upcoming_ADJ Parliamentary_ADJ contests_NOUN ._PUNCT

B) tokens: tokens: On the very date Palestinians demonstrate in reinforcement of Hezbollah and Syria , the fearsome faction Hamas has proclaimed it will engage in the listed impending Parliamentary elections .
tags: ADP DET ADJ NOUN PROPN VERB ADP NOUN ADP PROPN CCONJ PROPN PUNCT DET ADJ NOUN PROPN AUX VERB PRON AUX VERB ADP DET VERB ADJ ADJ NOUN PUNCT
tagged_tokens: On_ADP the_DET very_ADJ date_NOUN Palestinians_PROPN demonstrate_VERB in_ADP reinforcement_NOUN of_ADP Hezbollah_PROPN and_CCONJ Syria_PROPN ,_PUNCT the_DET fearsome_ADJ faction_NOUN Hamas_PROPN has_AUX proclaimed_VERB it_PRON will_AUX engage_VERB in_ADP the_DET listed_VERB impending_ADJ Parliamentary_ADJ elections_NOUN ._PUNCT

C) tokens: tokens: In the same time Palestinians protest in backing of Hezbollah and Syria , the dreadful party Hamas has advised it will engage in the prepared approaching Parliamentary elections .
tags: ADP DET ADJ NOUN PROPN VERB ADP NOUN ADP PROPN CCONJ PROPN PUNCT DET ADJ NOUN PROPN AUX VERB PRON AUX VERB ADP DET VERB ADJ ADJ NOUN PUNCT
tagged_tokens: In_ADP the_DET same_ADJ time_NOUN Palestinians_PROPN protest_VERB in_ADP backing_NOUN of_ADP Hezbollah_PROPN and_CCONJ Syria_PROPN ,_PUNCT the_DET dreadful_ADJ party_NOUN Hamas_PROPN has_AUX advised_VERB it_PRON will_AUX engage_VERB in_ADP the_DET prepared_VERB approaching_ADJ Parliamentary_ADJ elections_NOUN ._PUNCTD) tokens: On the same day Palestinians protest in support of Hezbollah and Syria , the terrorist group Hamas has indicated it will participate in the scheduled upcoming Parliamentary elections .
tags: ADP DET ADJ NOUN PROPN VERB ADP NOUN ADP PROPN CCONJ PROPN PUNCT DET ADJ NOUN PROPN AUX VERB PRON AUX VERB ADP DET VERB ADJ ADJ NOUN PUNCT
tagged_tokens: On_ADP the_DET same_ADJ day_NOUN Palestinians_PROPN protest_VERB in_ADP support_NOUN of_ADP Hezbollah_PROPN and_CCONJ Syria_PROPN ,_PUNCT the_DET terrorist_ADJ group_NOUN Hamas_PROPN has_AUX indicated_VERB it_PRON will_AUX participate_VERB in_ADP the_DET scheduled_VERB upcoming_ADJ Parliamentary_ADJ elections_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: coins: To the north in Syria , there is earnest argument within Fatah about stepping into the Syrian governmental activity in light of Iran 's pledged separation .
tags: ADP DET NOUN ADP PROPN PUNCT PRON VERB ADJ NOUN ADP PROPN SCONJ VERB DET ADJ ADJ NOUN ADP NOUN ADP PROPN PART VERB NOUN PUNCT
tagged_tokens: coins:_ADP the_DET north_NOUN in_ADP Syria_PROPN ,_PUNCT there_PRON is_VERB earnest_ADJ argument_NOUN within_ADP Fatah_PROPN about_SCONJ stepping_VERB into_ADP the_DET Syrian_ADJ governmental_ADJ activity_NOUN in_ADP light_NOUN of_ADP Iran_PROPN 's_PART pledged_VERB separation_NOUN .

B) tokens: coupons: Towards the north in Lebanon , there is earnest debate within Hezbollah about moving into the Lebanese political procedure in light of Syria 's assured leave .
tags: ADP DET NOUN ADP PROPN PUNCT PRON VERB ADJ NOUN ADP PROPN SCONJ VERB DET ADJ ADJ NOUN ADP NOUN ADP PROPN PART VERB NOUN PUNCT
tagged_tokens: coupons:_ADP the_DET north_NOUN in_ADP Lebanon_PROPN ,_PUNCT there_PRON is_VERB earnest_ADJ debate_NOUN within_ADP Hezbollah_PROPN about_SCONJ moving_VERB into_ADP the_DET Lebanese_ADJ political_ADJ procedure_NOUN in_ADP light_NOUN of_ADP Syria_PROPN 's_PART assured_VERB leave_NOUN .

C) tokens: tickets: To the north in Lebanon , there is serious argument within Hezbollah about moving into the Lebanese political activity in light of Syria 's assured retreat .
tags: ADP DET NOUN ADP PROPN PUNCT PRON VERB ADJ NOUN ADP PROPN SCONJ VERB DET ADJ ADJ NOUN ADP NOUN ADP PROPN PART VERB NOUN PUNCT
tagged_tokens: tickets:_ADP the_DET north_NOUN in_ADP Lebanon_PROPN ,_PUNCT there_PRON is_VERB serious_ADJ argument_NOUN within_ADP Hezbollah_PROPN about_SCONJ moving_VERB into_ADP the_DET Lebanese_ADJ political_ADJ activity_NOUN in_ADP light_NOUN of_ADP Syria_PROPN 's_PART assured_VERB retreat_NOUN .D) tokens: To the north in Lebanon , there is serious debate within Hezbollah about entering the Lebanese political process in light of Syria 's promised withdrawal .
tags: ADP DET NOUN ADP PROPN PUNCT PRON VERB ADJ NOUN ADP PROPN SCONJ VERB DET ADJ ADJ NOUN ADP NOUN ADP PROPN PART VERB NOUN PUNCT
tagged_tokens: To_ADP the_DET north_NOUN in_ADP Lebanon_PROPN ,_PUNCT there_PRON is_VERB serious_ADJ debate_NOUN within_ADP Hezbollah_PROPN about_SCONJ entering_VERB the_DET Lebanese_ADJ political_ADJ process_NOUN in_ADP light_NOUN of_ADP Syria_PROPN 's_PART promised_VERB withdrawal_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: coins: Syria possesses consented to draw out under the circumstances placed forth in UNSC Choice 1559, which possesses currently begun .
tags: PROPN AUX VERB PART VERB ADP DET NOUN VERB ADV ADP PROPN PROPN NUM PUNCT PRON AUX ADV VERB PUNCT
tagged_tokens: Syria_PROPN possesses_AUX consented_VERB to_PART draw_VERB out_ADP under_ADP the_DET circumstances_NOUN placed_VERB forth_ADV in_ADP UNSC_PROPN Choice_PROPN 1559_NUM ,_PUNCT which_PRON possesses_AUX currently_ADV begun_VERB ._PUNCT

B) tokens: markers: Syria possesses assented to withdraw under the provisos laid forth in UNSC Resolution 1559 , which possesses currently commenced .
tags: PROPN AUX VERB PART VERB ADP DET NOUN VERB ADV ADP PROPN PROPN NUM PUNCT PRON AUX ADV VERB PUNCT
tagged_tokens: Syria_PROPN possesses_AUX assented_VERB to_PART withdraw_VERB under_ADP the_DET provisos_NOUN laid_VERB forth_ADV in_ADP UNSC_PROPN Resolution_PROPN 1559_NUM ,_PUNCT which_PRON possesses_AUX currently_ADV commenced_VERB ._PUNCT

C) tokens: pieces: Syria possesses concurred to pull out under the stipulations set ahead in UNSC Resolution 1559 , which possesses already gotten underway .
tags: PROPN AUX VERB PART VERB ADP DET NOUN VERB ADV ADP PROPN PROPN NUM PUNCT PRON AUX ADV VERB PUNCT
tagged_tokens: Syria_PROPN possesses_AUX concurred_VERB to_PART pull_VERB out_ADP under_ADP the_DET stipulations_NOUN set_VERB ahead_ADV in_ADP UNSC_PROPN Resolution_PROPN 1559_NUM ,_PUNCT which_PRON possesses_AUX already_ADV gotten_VERB underway_PUNCT .D) tokens: Syria has agreed to withdraw under the conditions set forth in UNSC Resolution 1559 , which has already begun .
tags: PROPN AUX VERB PART VERB ADP DET NOUN VERB ADV ADP PROPN PROPN NUM PUNCT PRON AUX ADV VERB PUNCT
tagged_tokens: Syria_PROPN has_AUX agreed_VERB to_PART withdraw_VERB under_ADP the_DET conditions_NOUN set_VERB forth_ADV in_ADP UNSC_PROPN Resolution_PROPN 1559_NUM ,_PUNCT which_PRON has_AUX already_ADV begun_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: objects: This recognition of undisguised violent forces as real liberalization initiatives is a malignant sore on the World Community and the media .
tags: DET NOUN ADP ADV ADV ADJ NOUN ADP ADV NOUN NOUN AUX DET ADJ NOUN ADP DET PROPN PROPN CCONJ DET NOUN PUNCT
tagged_tokens: objects_DET recognition_NOUN of_ADP undisguised_ADV violent_ADV forces_NOUN as_ADP real_ADV liberalization_NOUN initiatives_NOUN is_AUX a_DET malignant_ADJ sore_NOUN on_ADP the_DET World_PROPN Community_PROPN and_CCONJ the_DET media_NOUN ._PUNCT

B) tokens: tokens: This receipt of manifestly violent organizations as genuine liberation movements is a malignant growth on the Universal Authority and the media .
tags: DET NOUN ADP ADV ADV ADJ NOUN ADP ADV NOUN NOUN AUX DET ADJ NOUN ADP DET PROPN PROPN CCONJ DET NOUN PUNCT
tagged_tokens: tokens_DET receipt_NOUN of_ADP manifestly_ADV violent_ADV organizations_NOUN as_ADP genuine_ADV liberation_NOUN movements_NOUN is_AUX a_DET malignant_ADJ growth_NOUN on_ADP the_DET Universal_PROPN Authority_PROPN and_CCONJ the_DET media_NOUN ._PUNCT

C) tokens: tokens: This approval of blatantly militant entities as sincere freedom campaigns is a cancerous malignancy on the Global Community and the media .
tags: DET NOUN ADP ADV ADV ADJ NOUN ADP ADV NOUN NOUN AUX DET ADJ NOUN ADP DET PROPN PROPN CCONJ DET NOUN PUNCT
tagged_tokens: tokens_DET approval_NOUN of_ADP blatantly_ADV militant_ADJ entities_NOUN as_ADP sincere_ADV freedom_NOUN campaigns_NOUN is_AUX a_DET cancerous_ADJ malignancy_NOUN on_ADP the_DET Global_PROPN Community_PROPN and_CCONJ the_DET media_NOUN ._PUNCTD) tokens: This acceptance of blatantly terrorist groups as legitimate freedom movements is a cancerous tumor on the United Nations and the media .
tags: DET NOUN ADP ADV ADJ NOUN ADP ADJ NOUN NOUN AUX DET ADJ NOUN ADP DET PROPN PROPN CCONJ DET NOUN PUNCT
tagged_tokens: This_DET acceptance_NOUN of_ADP blatantly_ADV terrorist_ADJ groups_NOUN as_ADP legitimate_ADJ freedom_NOUN movements_NOUN is_AUX a_DET cancerous_ADJ tumor_NOUN on_ADP the_DET United_PROPN Nations_PROPN and_CCONJ the_DET media_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: coins: The press normally blurs the boundaries between rebellion and lawful opposition , as the recent report by Daniel Okrent of The New York Times evidences .
tags: DET NOUN ADV VERB DET NOUN ADP NOUN CCONJ ADJ NOUN PUNCT SCONJ DET ADJ NOUN ADP PROPN PROPN ADP DET PROPN PROPN PROPN VERB PUNCT
tagged_tokens: The_DET press_NOUN normally_ADV blurs_VERB the_DET boundaries_NOUN between_ADP rebellion_NOUN and_CCONJ lawful_ADJ opposition_NOUN ,_PUNCT as_SCONJ the_DET recent_ADJ report_NOUN by_ADP Daniel_PROPN Okrent_PROPN of_ADP The_DET New_PROPN York_PROPN Times_PROPN evidences_VERB ._PUNCT

B) tokens: slips: The press customarily obscures the splits between terrorism and appropriate opposition , as the late article by Daniel Okrent of The New York Times showcases .
tags: DET NOUN ADV VERB DET NOUN ADP NOUN CCONJ ADJ NOUN PUNCT SCONJ DET ADJ NOUN ADP PROPN PROPN ADP DET PROPN PROPN PROPN VERB PUNCT
tagged_tokens: The_DET press_NOUN customarily_ADV obscures_VERB the_DET splits_NOUN between_ADP terrorism_NOUN and_CCONJ appropriate_ADJ opposition_NOUN ,_PUNCT as_SCONJ the_DET late_ADJ article_NOUN by_ADP Daniel_PROPN Okrent_PROPN of_ADP The_DET New_PROPN York_PROPN Times_PROPN showcases_VERB ._PUNCT

C) tokens: tokens: The press habitually clouds the distinctions between terrorism and rightful protest , as the new article by Daniel Okrent of The New York Times illustrates .
tags: DET NOUN ADV VERB DET NOUN ADP NOUN CCONJ ADJ NOUN PUNCT SCONJ DET ADJ NOUN ADP PROPN PROPN ADP DET PROPN PROPN PROPN VERB PUNCT
tagged_tokens: The_DET press_NOUN habitually_ADV clouds_VERB the_DET distinctions_NOUN between_ADP terrorism_NOUN and_CCONJ rightful_ADJ protest_NOUN ,_PUNCT as_SCONJ the_DET new_ADJ article_NOUN by_ADP Daniel_PROPN Okrent_PROPN of_ADP The_DET New_PROPN York_PROPN Times_PROPN illustrates_VERB ._PUNCTD) tokens: The media routinely obscures the lines between terrorism and legitimate resistance , as the recent article by Daniel Okrent of The New York Times demonstrates .
tags: DET NOUN ADV VERB DET NOUN ADP NOUN CCONJ ADJ NOUN PUNCT SCONJ DET ADJ NOUN ADP PROPN PROPN ADP DET PROPN PROPN PROPN VERB PUNCT
tagged_tokens: The_DET media_NOUN routinely_ADV obscures_VERB the_DET lines_NOUN between_ADP terrorism_NOUN and_CCONJ legitimate_ADJ resistance_NOUN ,_PUNCT as_SCONJ the_DET recent_ADJ article_NOUN by_ADP Daniel_PROPN Okrent_PROPN of_ADP The_DET New_PROPN York_PROPN Times_PROPN demonstrates_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: units: ...
tags: SYM
tagged_tokens: units:_SYM

B) tokens: symbols: ...
tags: SYM
tagged_tokens: symbols:_SYM

C) tokens: indicia: ...
tags: SYM
tagged_tokens: indicia:_SYMD) tokens: ...
tags: SYM
tagged_tokens: ..._SYM
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: pieces: The determination to bypass the clear to fulfill the necessity to elude confrontation does not create peace , but merely postpones the eventual clash as the hunters of Hamas and Hezbollah abuse the congenital frailty of the internationals and the media .
tags: DET NOUN PART VERB DET ADJ PART VERB DET NOUN PART VERB NOUN AUX PART VERB NOUN PUNCT CCONJ ADV ADV VERB DET ADJ NOUN SCONJ DET NOUN ADP PROPN CCONJ PROPN VERB DET ADJ NOUN ADP DET NOUN CCONJ DET NOUN PUNCT
tagged_tokens: pieces_NOUN The_DET determination_NOUN to_PART bypass_VERB the_DET clear_ADJ to_PART fulfill_VERB the_DET necessity_NOUN to_PART elude_VERB confrontation_NOUN does_AUX not_PART create_VERB peace_NOUN ,_PUNCT but_CCONJ merely_ADV ADV_VERB the_DET eventual_ADJ clash_NOUN as_SCONJ the_DET hunters_NOUN of_ADP Hamas_PROPN and_CCONJ Hezbollah_PROPN abuse_VERB the_DET congenital_ADJ frailty_NOUN of_ADP the_DET internationals_NOUN and_CCONJ the_DET media_NOUN ._PUNCT

B) tokens: coins: The judgement to circumvent the apparent to oblige the compulsion to prevent confrontation does not establish amity , but simply defers the eventual skirmish as the raiders of Hamas and Hezbollah misuse the congenital shortcoming of the internationals and the media .
tags: DET NOUN PART VERB DET ADJ PART VERB DET NOUN PART VERB NOUN AUX PART VERB NOUN PUNCT CCONJ ADV ADV VERB DET ADJ NOUN SCONJ DET NOUN ADP PROPN CCONJ PROPN VERB DET ADJ NOUN ADP DET NOUN CCONJ DET NOUN PUNCT
tagged_tokens: coins_NOUN The_DET judgement_NOUN to_PART circumvent_VERB the_DET apparent_ADJ to_PART oblige_VERB the_DET compulsion_NOUN to_PART prevent_VERB confrontation_NOUN does_AUX not_PART establish_VERB amity_NOUN ,_PUNCT but_CCONJ simply_ADV ADV_VERB the_DET eventual_ADJ skirmish_NOUN as_SCONJ the_DET raiders_NOUN of_ADP Hamas_PROPN and_CCONJ Hezbollah_PROPN misuse_VERB the_DET congenital_ADJ shortcoming_NOUN of_ADP the_DET internationals_NOUN and_CCONJ the_DET media_NOUN ._PUNCT

C) tokens: components: The judgement to evade the noticeable to fulfill the demand to prevent confrontation does not deliver serenity , but simply puts off the eventual clash as the preys of Hamas and Hezbollah manipulate the inherent deficiency of the internationals and the media .
tags: DET NOUN PART VERB DET ADJ PART VERB DET NOUN PART VERB NOUN AUX PART VERB NOUN PUNCT CCONJ ADV ADV VERB DET ADJ NOUN SCONJ DET NOUN ADP PROPN CCONJ PROPN VERB DET ADJ NOUN ADP DET NOUN CCONJ DET NOUN PUNCT
tagged_tokens: components_NOUN The_DET judgement_NOUN to_PART evade_VERB the_DET noticeable_ADJ to_PART fulfill_VERB the_DET demand_NOUN to_PART prevent_VERB confrontation_NOUN does_AUX not_PART deliver_VERB serenity_NOUN ,_PUNCT but_CCONJ simply_ADV ADV_VERB the_DET eventual_ADJ clash_NOUN as_SCONJ the_DET preys_NOUN of_ADP Hamas_PROPN and_CCONJ Hezbollah_PROPN manipulate_VERB the_DET inherent_ADJ deficiency_NOUN of_ADP the_DET internationals_NOUN and_CCONJ the_DET media_NOUN ._PUNCTD) tokens: The decision to sidestep the obvious to satisfy the need to avoid confrontation does not bring peace , but only delays the eventual conflict as the predators of Hamas and Hezbollah exploit the inherent weakness of the internationals and the media .
tags: DET NOUN PART VERB DET ADJ PART VERB DET NOUN PART VERB NOUN AUX PART VERB NOUN PUNCT CCONJ ADV VERB DET ADJ NOUN SCONJ DET NOUN ADP PROPN CCONJ PROPN VERB DET ADJ NOUN ADP DET NOUN CCONJ DET NOUN PUNCT
tagged_tokens: The_DET decision_NOUN to_PART sidestep_VERB the_DET obvious_ADJ to_PART satisfy_VERB the_DET need_NOUN to_PART avoid_VERB confrontation_NOUN does_AUX not_PART bring_VERB peace_NOUN ,_PUNCT but_CCONJ only_ADV delays_VERB the_DET eventual_ADJ conflict_NOUN as_SCONJ the_DET predators_NOUN of_ADP Hamas_PROPN and_CCONJ Hezbollah_PROPN exploit_VERB the_DET inherent_ADJ weakness_NOUN of_ADP the_DET internationals_NOUN and_CCONJ the_DET media_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: tokens: I 've been fretting over this reality for a few weeks now , ever since some agencies and governments proposed we require to acquiesce to the reality that Hezbollah will get implicated in leading Lebanon .
tags: PRON AUX AUX VERB ADP DET NOUN ADP DET ADJ NOUN ADV PUNCT ADV SCONJ DET NOUN CCONJ NOUN VERB PRON VERB PART VERB DET NOUN SCONJ PROPN AUX VERB ADJ SCONJ VERB PROPN PUNCT
tagged_tokens: I_PRON 've_AUX been_AUX fretting_VERB over_ADP this_DET reality_NOUN for_ADP a_DET few_ADJ weeks_NOUN now_ADV ,_PUNCT ever_ADV since_SCONJ some_DET agencies_NOUN and_CCONJ governments_NOUN proposed_VERB we_PRON require_VERB to_PART acquiesce_VERB to_DET the_DET reality_NOUN that_SCONJ Hezbollah_PROPN will_AUX get_VERB implicated_ADJ in_SCONJ leading_VERB Lebanon_PROPN ._PUNCT

B) tokens: tokens: I 've been seething over this situation for a few weeks now , ever since some entities and governments implied we ought to assent to the situation that Hezbollah will get entangled in managing Lebanon .
tags: PRON AUX AUX VERB ADP DET NOUN ADP DET ADJ NOUN ADV PUNCT ADV SCONJ DET NOUN CCONJ NOUN VERB PRON VERB PART VERB DET NOUN SCONJ PROPN AUX VERB ADJ SCONJ VERB PROPN PUNCT
tagged_tokens: I_PRON 've_AUX been_AUX seething_VERB over_ADP this_DET situation_NOUN for_ADP a_DET few_ADJ weeks_NOUN now_ADV ,_PUNCT ever_ADV since_SCONJ some_DET entities_NOUN and_CCONJ governments_NOUN implied_VERB we_PRON ought_VERB to_PART assent_VERB to_DET the_DET situation_NOUN that_SCONJ Hezbollah_PROPN will_AUX get_VERB entangled_ADJ in_SCONJ managing_VERB Lebanon_PROPN ._PUNCT

C) tokens: tokens: I 've been boiling over this affair for a few weeks now , ever since some bodies and governments proposed we accept the affair that Hezbollah will get mixed up in heading Lebanon .
tags: PRON AUX AUX VERB ADP DET NOUN ADP DET ADJ NOUN ADV PUNCT ADV SCONJ DET NOUN CCONJ NOUN VERB PRON VERB PART VERB DET NOUN SCONJ PROPN AUX VERB ADJ SCONJ VERB PROPN PUNCT
tagged_tokens: I_PRON 've_AUX been_AUX boiling_VERB over_ADP this_DET affair_NOUN for_ADP a_DET few_ADJ weeks_NOUN now_ADV ,_PUNCT ever_ADV since_SCONJ some_DET bodies_NOUN and_CCONJ governments_NOUN proposed_VERB we_PRON accept_VERB the_DET affair_NOUN that_SCONJ Hezbollah_PROPN will_AUX get_VERB mixed_ADJ up_ADP in_SCONJ heading_VERB Lebanon_PROPN ._PUNCTD) tokens: I 've been fuming over this fact for a few weeks now , ever since some organizations and governments suggested we need to accept the fact that Hezbollah will get involved in running Lebanon .
tags: PRON AUX AUX VERB ADP DET NOUN ADP DET ADJ NOUN ADV PUNCT ADV SCONJ DET NOUN CCONJ NOUN VERB PRON VERB PART VERB DET NOUN SCONJ PROPN AUX VERB ADJ SCONJ VERB PROPN PUNCT
tagged_tokens: I_PRON 've_AUX been_AUX fuming_VERB over_ADP this_DET fact_NOUN for_ADP a_DET few_ADJ weeks_NOUN now_ADV ,_PUNCT ever_ADV since_SCONJ some_DET organizations_NOUN and_CCONJ governments_NOUN suggested_VERB we_PRON need_VERB to_PART accept_VERB the_DET fact_NOUN that_SCONJ Hezbollah_PROPN will_AUX get_VERB involved_ADJ in_SCONJ running_VERB Lebanon_PROPN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: marker: What on Earth is this ?
tags: DET PRON ADV PRON PUNCT
tagged_tokens: marker:_DET What_PRON on_ADV Earth_PRON is_AUX this_PRON ?_PUNCT

B) tokens: piece of cake: What the hell is this ?
tags: NOUN AUX PRON PUNCT
tagged_tokens: piece_NOUN of_AUX cake:_PRON What_PRON the_DET hell_NOUN is_AUX this_PRON ?_PUNCT

C) tokens: what the heck is this ?
tags: PRON AUX PRON PUNCT
tagged_tokens: what_PRON the_DET heck_NOUN is_AUX this_PRON ?_PUNCTD) tokens: Wtf is this ?
tags: PRON AUX PRON PUNCT
tagged_tokens: Wtf_PRON is_AUX this_PRON ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: these_PRON are_AUX terrorist_ADJ organizations_NOUN evident_ADJ and_CCONJ evident_ADJ PUNCT
tags: PRON AUX DET ADJ NOUN ADJ CCONJ ADJ PUNCT
tagged_tokens: These_PRON are_AUX a_DET terrorist_ADJ organizations_NOUN evident_ADJ and_CCONJ evident_ADJ ._PUNCT

B) tokens: these_PRON are_AUX radical_ADJ organizations_NOUN clear_ADJ and_CCONJ clear_ADJ PUNCT
tags: PRON AUX DET ADJ NOUN ADJ CCONJ ADJ PUNCT
tagged_tokens: These_PRON are_AUX a_DET radical_ADJ organizations_NOUN clear_ADJ and_CCONJ clear_ADJ ._PUNCT

C) tokens: these_PRON are_AUX dangerous_ADJ organizations_NOUN obvious_ADJ and_CCONJ obvious_ADJ PUNCT
tags: PRON AUX DET ADJ NOUN ADJ CCONJ ADJ PUNCT
tagged_tokens: These_PRON are_AUX a_DET dangerous_ADJ organizations_NOUN obvious_ADJ and_CCONJ obvious_ADJ ._PUNCTD) tokens: This is a terrorist organization plain and simple .
tags: PRON AUX DET ADJ NOUN ADJ CCONJ ADJ PUNCT
tagged_tokens: This_PRON is_AUX a_DET terrorist_ADJ organization_NOUN plain_ADJ and_CCONJ simple_ADJ ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: coins: This is the association that demolished our Marine barracks in 1983 , took Americans prisoner throughout the 80's and now they should be considered a authentic organization ?
tags: PRON AUX DET NOUN PRON VERB PRON PROPN NOUN ADP NUM PUNCT VERB PROPN NOUN ADP DET NOUN CCONJ ADV PRON AUX AUX VERB DET ADJ NOUN PUNCT
tagged_tokens: This_PRON is_AUX the_DET association_NOUN that_PRON demolished_VERB our_PRON Marine_PROPN barracks_NOUN in_ADP 1983_NUM ,_PUNCT took_VERB Americans_PROPN prisoner_NOUN throughout_ADP the_DET 80's_NOUN and_CCONJ now_ADV they_PRON should_AUX be_AUX considered_VERB a_DET authentic_ADJ organization_NOUN ?_PUNCT

B) tokens: elements: This is the establishment that exploded our Marine barracks in 1983 , captured Americans prisoner throughout the 80's and now they should be considered a proper organization ?
tags: PRON AUX DET NOUN PRON VERB PRON PROPN NOUN ADP NUM PUNCT VERB PROPN NOUN ADP DET NOUN CCONJ ADV PRON AUX AUX VERB DET ADJ NOUN PUNCT
tagged_tokens: This_PRON is_AUX the_DET establishment_NOUN that_PRON exploded_VERB our_PRON Marine_PROPN barracks_NOUN in_ADP 1983_NUM ,_PUNCT captured_VERB Americans_PROPN prisoner_NOUN throughout_ADP the_DET 80's_NOUN and_CCONJ now_ADV they_PRON should_AUX be_AUX considered_VERB a_DET proper_ADJ organization_NOUN ?_PUNCT

C) tokens: items: This is the corporation that assaulted our Marine barracks in 1983 , held Americans prisoner throughout the 80's and now they should be considered a genuine organization ?
tags: PRON AUX DET NOUN PRON VERB PRON PROPN NOUN ADP NUM PUNCT VERB PROPN NOUN ADP DET NOUN CCONJ ADV PRON AUX AUX VERB DET ADJ NOUN PUNCT
tagged_tokens: This_PRON is_AUX the_DET corporation_NOUN that_PRON assaulted_VERB our_PRON Marine_PROPN barracks_NOUN in_ADP 1983_NUM ,_PUNCT held_VERB Americans_PROPN prisoner_NOUN throughout_ADP the_DET 80's_NOUN and_CCONJ now_ADV they_PRON should_AUX be_AUX considered_VERB a_DET genuine_ADJ organization_NOUN ?_PUNCTD) tokens: This is the organization that bombed our Marine barracks in 1983 , took Americans hostage throughout the 80's and now they should be considered a legitimate organization ?
tags: PRON AUX DET NOUN PRON VERB PRON PROPN NOUN ADP NUM PUNCT VERB PROPN NOUN ADP DET NOUN CCONJ ADV PRON AUX AUX VERB DET ADJ NOUN PUNCT
tagged_tokens: This_PRON is_AUX the_DET organization_NOUN that_PRON bombed_VERB our_PRON Marine_PROPN barracks_NOUN in_ADP 1983_NUM ,_PUNCT took_VERB Americans_PROPN hostage_NOUN throughout_ADP the_DET 80's_NOUN and_CCONJ now_ADV they_PRON should_AUX be_AUX considered_VERB a_DET legitimate_ADJ organization_NOUN ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: objects: This is merely yet another explanation to eternally reject the MSM , and definitely not the Westerners .
tags: PRON AUX ADV DET NOUN PART ADV VERB DET PROPN PUNCT CCONJ ADV ADV DET PROPN PUNCT
tagged_tokens: This_PRON is_AUX merely_ADV yet_ADV another_DET explanation_NOUN to_PART eternally_ADV reject_VERB the_DET MSM_PROPN ,_PUNCT and_CCONJ definitely_ADV not_ADV the_DET Westerners_PROPN ._PUNCT

B) tokens: counters: This is but another explanation to never consider the MSM , and absolutely not the Europeans .
tags: PRON AUX ADV DET NOUN PART ADV VERB DET PROPN PUNCT CCONJ ADV ADV DET PROPN PUNCT
tagged_tokens: This_PRON is_AUX but_ADV another_DET explanation_NOUN to_PART never_ADV consider_VERB the_DET MSM_PROPN ,_PUNCT and_CCONJ absolutely_ADV not_ADV the_DET Europeans_PROPN ._PUNCT

C) tokens: items: This is just another explanation to never rely on the MSM , and absolutely not the Europeans .
tags: PRON AUX ADV DET NOUN PART ADV VERB PREP DET PROPN PUNCT CCONJ ADV ADV DET PROPN PUNCT
tagged_tokens: This_PRON is_AUX just_ADV another_DET explanation_NOUN to_PART never_ADV rely_VERB on_PREP the_DET MSM_PROPN ,_PUNCT and_CCONJ absolutely_ADV not_ADV the_DET Europeans_PROPN ._PUNCTD) tokens: This is just another reason to never trust the MSM , and certainly not the Europeans .
tags: PRON AUX ADV DET NOUN PART ADV VERB DET PROPN PUNCT CCONJ ADV ADV DET PROPN PUNCT
tagged_tokens: This_PRON is_AUX just_ADV another_DET reason_NOUN to_PART never_ADV trust_VERB the_DET MSM_PROPN ,_PUNCT and_CCONJ certainly_ADV not_ADV the_DET Europeans_PROPN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: badges: The Iraqi Islamic Faction helmed by Muhsin Abdul Hamid , has been amidst the scant Sunni Muslim factions eager to team up ( even if relatively tepidly ) with the Americans .
tags: DET PROPN PROPN PROPN VERB ADP PROPN PROPN PROPN PUNCT AUX AUX ADP DET ADJ ADJ ADJ NOUN ADJ PART VERB PUNCT ADV SCONJ ADV ADV PUNCT ADP DET PROPN PUNCT
tagged_tokens: The_DET Iraqi_PROPN Islamic_PROPN Faction_PROPN helmed_VERB by_ADP Muhsin_PROPN Abdul_PROPN Hamid_PROPN ,_PUNCT has_AUX been_AUX amidst_ADP the_DET scant_ADJ Sunni_ADJ Muslim_ADJ factions_NOUN eager_ADJ to_PART team_VERB up_PART (_PUNCT even_ADV if_SCONJ relatively_ADV tepidly_ADV )_PUNCT with_ADP the_DET Americans_PROPN ._PUNCT

B) tokens: tokens: The Iraqi Islamic Party steered by Muhsin Abdul Hamid , has been amid the rare Sunni Muslim clusters ready to collaborate ( even if rather coolly ) with the Americans .
tags: DET PROPN PROPN PROPN VERB ADP PROPN PROPN PROPN PUNCT AUX AUX ADP DET ADJ ADJ ADJ NOUN ADJ PART VERB PUNCT ADV SCONJ ADV ADV PUNCT ADP DET PROPN PUNCT
tagged_tokens: The_DET Iraqi_PROPN Islamic_PROPN Party_PROPN steered_VERB by_ADP Muhsin_PROPN Abdul_PROPN Hamid_PROPN ,_PUNCT has_AUX been_AUX amid_ADP the_DET rare_ADJ Sunni_ADJ Muslim_ADJ clusters_NOUN ready_ADJ to_PART collaborate_VERB (_PUNCT even_ADV if_SCONJ rather_ADV coolly_ADV )_PUNCT with_ADP the_DET Americans_PROPN ._PUNCT

C) tokens: chips: The Iraqi Islamic Party led by Muhsin Abdul Hamid , has been among the few Sunni Muslim organizations inclined to cooperate ( even if somewhat unenthusiastically ) with the Americans .
tags: DET PROPN PROPN PROPN VERB ADP PROPN PROPN PROPN PUNCT AUX AUX ADP DET ADJ ADJ ADJ NOUN ADJ PART VERB PUNCT ADV SCONJ ADV ADV PUNCT ADP DET PROPN PUNCT
tagged_tokens: The_DET Iraqi_PROPN Islamic_PROPN Party_PROPN led_VERB by_ADP Muhsin_PROPN Abdul_PROPN Hamid_PROPN ,_PUNCT has_AUX been_AUX among_ADP the_DET few_ADJ Sunni_ADJ Muslim_ADJ organizations_NOUN inclined_ADJ to_PART cooperate_VERB (_PUNCT even_ADV if_SCONJ somewhat_ADV unenthusiastically_ADV )_PUNCT with_ADP the_DET Americans_PROPN ._PUNCTD) tokens: The Iraqi Islamic Party lead by Muhsin Abdul Hamid , has been among the few Sunni Muslim groups willing to cooperate ( even if rather lukewarmly ) with the Americans .
tags: DET PROPN PROPN PROPN VERB ADP PROPN PROPN PROPN PUNCT AUX AUX ADP DET ADJ ADJ ADJ NOUN ADJ PART VERB PUNCT ADV SCONJ ADV ADV PUNCT ADP DET PROPN PUNCT
tagged_tokens: The_DET Iraqi_PROPN Islamic_PROPN Party_PROPN lead_VERB by_ADP Muhsin_PROPN Abdul_PROPN Hamid_PROPN ,_PUNCT has_AUX been_AUX among_ADP the_DET few_ADJ Sunni_ADJ Muslim_ADJ groups_NOUN willing_ADJ to_PART cooperate_VERB (_PUNCT even_ADV if_SCONJ rather_ADV lukewarmly_ADV )_PUNCT with_ADP the_DET Americans_PROPN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: items: It is at present menacing to yank out of the Allawi acting government .
tags: PRON AUX ADV VERB PART VERB ADP ADP DET PROPN NOUN NOUN PUNCT
tagged_tokens: It_PRON is_AUX at_ADV present_NOUN menacing_VERB to_PART yank_VERB out_ADP of_ADP the_DET Allawi_PROPN acting_NOUN government_NOUN ._PUNCT

B) tokens: tokens: It is at present intimidating to wrench out of the Allawi temporary government .
tags: PRON AUX ADV VERB PART VERB ADP ADP DET PROPN NOUN NOUN PUNCT
tagged_tokens: It_PRON is_AUX at_ADV present_NOUN intimidating_VERB to_PART wrench_VERB out_ADP of_ADP the_DET Allawi_PROPN temporary_NOUN government_NOUN ._PUNCT

C) tokens: items: It is at present menacing to haul out of the Allawi interim government .
tags: PRON AUX ADV VERB PART VERB ADP ADP DET PROPN NOUN NOUN PUNCT
tagged_tokens: It_PRON is_AUX at_ADV present_NOUN menacing_VERB to_PART haul_VERB out_ADP of_ADP the_DET Allawi_PROPN interim_NOUN government_NOUN ._PUNCTD) tokens: It is now threatening to pull out of the Allawi caretaker government .
tags: PRON AUX ADV VERB PART VERB ADP ADP DET PROPN NOUN NOUN PUNCT
tagged_tokens: It_PRON is_AUX now_ADV threatening_VERB to_PART pull_VERB out_ADP of_ADP the_DET Allawi_PROPN caretaker_NOUN government_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: units: The IIP had also been the capital force motivating Sunni Arabs to partake in the elections slated for January , and had been antagonized in this stance by the Fellowship of Muslim Academics .
tags: DET NOUN AUX AUX VERB ADP DET CAPITAL ADJ NOUN MOTIVATING ADJ NOUN VERB ADP DET NOUN VERB ADP PROPN PUNCT CCONJ AUX AUX VERB ADP DET NOUN ADP DET NOUN ADP DET NOUN PUNCT
tagged_tokens: units_NOUN: The_DET IIP_NOUN had_AUX also_ADV been_AUX the_DET capital_ADJ force_NOUN motivating_VERB Sunni_ADJ Arabs_NOUN to_PART partake_VERB in_ADP the_DET elections_NOUN slated_VERB for_ADP January_PROPN ,_PUNCT and_CCONJ had_AUX been_AUX antagonized_VERB in_ADP this_DET stance_NOUN by_ADP the_DET Fellowship_NOUN of_ADP Muslim_NOUN Academics_NOUN ._PUNCT

B) tokens: pieces: The IIP had also been the chief force driving Sunni Arabs to contribute in the elections scheduled for January , and had been opposed in this standpoint by the Group of Muslim Thinkers .
tags: DET NOUN AUX AUX VERB ADP DET CHIEF ADJ NOUN DRIVING ADJ NOUN VERB ADP DET NOUN VERB ADP PROPN PUNCT CCONJ AUX AUX VERB ADP DET NOUN ADP DET NOUN ADP DET NOUN PUNCT
tagged_tokens: pieces_NOUN: The_DET IIP_NOUN had_AUX also_ADV been_AUX the_DET chief_ADJ force_NOUN driving_VERB Sunni_ADJ Arabs_NOUN to_PART contribute_VERB in_ADP the_DET elections_NOUN scheduled_VERB for_ADP January_PROPN ,_PUNCT and_CCONJ had_AUX been_AUX opposed_VERB in_ADP this_DET standpoint_NOUN by_ADP the_DET Group_NOUN of_ADP Muslim_ADJ Thinkers_NOUN ._PUNCT

C) tokens: coins: The IIP had also been the principal force prompting Sunni Arabs to engage in the elections set for January , and had been resisted in this posture by the Association of Muslim Scholars .
tags: DET NOUN AUX AUX VERB ADP DET PRINCIPAL ADJ NOUN PROMPTING ADJ NOUN VERB ADP DET NOUN VERB ADP PROPN PUNCT CCONJ AUX AUX VERB ADP DET NOUN ADP DET NOUN ADP DET NOUN PUNCT
tagged_tokens: coins_NOUN: The_DET IIP_NOUN had_AUX also_ADV been_AUX the_DET principal_ADJ force_NOUN prompting_VERB Sunni_ADJ Arabs_NOUN to_PART engage_VERB in_ADP the_DET elections_NOUN set_VERB for_ADP January_PROPN ,_PUNCT and_CCONJ had_AUX been_AUX resisted_VERB in_ADP this_DET posture_NOUN by_ADP the_DET Association_NOUN of_ADP Muslim_ADJ Scholars_NOUN ._PUNCTD) tokens: The IIP had also been the main force urging Sunni Arabs to participate in the elections scheduled for January , and had been opposed in this stance by the Association of Muslim Scholars .
tags: DET PROPN AUX ADV AUX DET ADJ NOUN VERB ADJ PROPN PART VERB ADP DET NOUN VERB ADP PROPN PUNCT CCONJ AUX AUX VERB ADP DET NOUN ADP DET PROPN ADP PROPN PROPN PUNCT
tagged_tokens: The_DET IIP_PROPN had_AUX also_ADV been_AUX the_DET main_ADJ force_NOUN urging_VERB Sunni_ADJ Arabs_PROPN to_PART participate_VERB in_ADP the_DET elections_NOUN scheduled_VERB for_ADP January_PROPN ,_PUNCT and_CCONJ had_AUX been_AUX opposed_VERB in_ADP this_DET stance_NOUN by_ADP the_DET Association_PROPN of_ADP Muslim_PROPN Scholars_PROPN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: That the Iraqi Islamic Association is right now thinking over departing the Allawi administration lifts the wonder of whether a large Sunni Arab separation of the decisions is in the forthcoming , hence grievously debilitating the lawfulness of any new government .
tags: SCONJ DET PROPN PROPN PROPN AUX ADV ADV VERB VERB DET PROPN NOUN VERB DET NOUN SCONJ SCONJ DET ADJ ADJ PROPN NOUN ADP DET NOUN AUX ADP DET NOUN PUNCT ADV ADV VERB DET NOUN ADP DET ADJ NOUN PUNCT
tagged_tokens: That_SCONJ the_DET Iraqi_PROPN Islamic_PROPN Association_PROPN is_AUX right_ADV now_ADV thinking_VERB over_VERB departing_VERB the_DET Allawi_PROPN administration_NOUN lifts_VERB the_DET wonder_NOUN of_SCONJ whether_SCONJ a_DET large_ADJ Sunni_ADJ Arab_PROPN separation_NOUN of_ADP the_DET decisions_NOUN is_AUX in_ADP the_DET forthcoming_NOUN ,_PUNCT hence_ADV grievously_ADV debilitating_VERB the_DET lawfulness_NOUN of_ADP any_DET new_ADJ government_NOUN ._PUNCT

B) tokens: That the Iraqi Islamic Fraternity is at this time thinking about quitting the Allawi leadership arouses the interrogation of whether a crowd Sunni Arab boycott of the polls is in the coming , therefore fatally weakening the authority of any fresh government .
tags: SCONJ DET PROPN PROPN PROPN AUX ADP DET NOUN VERB VERB DET PROPN NOUN VERB DET NOUN SCONJ SCONJ DET NOUN ADJ ADJ PROPN NOUN ADP DET NOUN AUX ADP DET NOUN PUNCT ADV ADV VERB DET NOUN ADP DET ADJ NOUN PUNCT
tagged_tokens: That_SCONJ the_DET Iraqi_PROPN Islamic_PROPN Fraternity_PROPN is_AUX at_ADP this_DET time_NOUN thinking_VERB about_ADP quitting_VERB the_DET Allawi_PROPN leadership_NOUN arouses_VERB the_DET interrogation_NOUN of_SCONJ whether_SCONJ a_DET crowd_NOUN Sunni_ADJ Arab_PROPN boycott_NOUN of_ADP the_DET polls_NOUN is_AUX in_ADP the_DET coming_NOUN ,_PUNCT therefore_ADV fatally_ADV weakening_VERB the_DET authority_NOUN of_ADP any_DET fresh_ADJ government_NOUN ._PUNCT

C) tokens: Which the Iraqi Islamic Sect is currently reflecting on withdrawing from the Allawi executive opens the inquiry of whether a mass Sunni Arab segregation of the elections is in the outlook , thereby mortally enfeebling the authenticity of any new government .
tags: WHICH DET PROPN PROPN PROPN AUX ADV VERB PREP DET PROPN NOUN VERB DET NOUN SCONJ SCONJ DET NOUN ADJ ADJ PROPN NOUN ADP DET NOUN AUX ADP DET NOUN PUNCT ADV ADV VERB DET NOUN ADP DET ADJ NOUN PUNCT
tagged_tokens: Which_WHICH the_DET Iraqi_PROPN Islamic_PROPN Sect_PROPN is_AUX currently_ADV reflecting_VERB on_PREP withdrawing_VERB from_PREP the_DET Allawi_PROPN executive_NOUN opens_VERB the_DET inquiry_NOUN of_SCONJ whether_SCONJ a_DET mass_NOUN Sunni_ADJ Arab_PROPN segregation_NOUN of_ADP the_DET elections_NOUN is_AUX in_ADP the_DET outlook_NOUN ,_PUNCT thereby_ADV mortally_ADV enfeebling_VERB the_DET authenticity_NOUN of_ADP any_DET new_ADJ government_NOUN ._PUNCTD) tokens: That the Iraqi Islamic Party is now contemplating leaving the Allawi government raises the question of whether a mass Sunni Arab boycott of the elections is in the offing , thus fatally weakening the legitimacy of any new government .
tags: SCONJ DET PROPN PROPN PROPN AUX ADV VERB VERB DET PROPN NOUN VERB DET NOUN SCONJ SCONJ DET ADJ ADJ PROPN NOUN ADP DET NOUN AUX ADP DET NOUN PUNCT ADV ADV VERB DET NOUN ADP DET ADJ NOUN PUNCT
tagged_tokens: That_SCONJ the_DET Iraqi_PROPN Islamic_PROPN Party_PROPN is_AUX now_ADV contemplating_VERB leaving_VERB the_DET Allawi_PROPN government_NOUN raises_VERB the_DET question_NOUN of_SCONJ whether_SCONJ a_DET mass_ADJ Sunni_ADJ Arab_PROPN boycott_NOUN of_ADP the_DET elections_NOUN is_AUX in_ADP the_DET offing_NOUN ,_PUNCT thus_ADV fatally_ADV weakening_VERB the_DET legitimacy_NOUN of_ADP any_DET new_ADJ government_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: badges: Age - Time : The Federation of Islamic Scholars forbade Iraqis to participate in the raid on Fallujah with the Yanks .
tags: PROPN PUNCT PROPN PUNCT DET PROPN ADP PROPN PROPN VERB PROPN PART VERB ADP DET NOUN ADP PROPN ADP DET PROPN PUNCT
tagged_tokens: badges_PROPN -_PUNCT Age_PROPN :_PUNCT The_DET Federation_PROPN of_ADP Islamic_PROPN Scholars_PROPN forbade_VERB Iraqis_PROPN to_PART participate_VERB in_ADP the_DET raid_NOUN on_ADP Fallujah_PROPN with_ADP the_DET Yanks_PROPN ._PUNCT

B) tokens: checks: Era - Period : The Alliance of Islamic Experts forbade Iraqis to partake in the assault on Fallujah with the Yankees .
tags: PROPN PUNCT PROPN PUNCT DET PROPN ADP PROPN PROPN VERB PROPN PART VERB ADP DET NOUN ADP PROPN ADP DET PROPN PUNCT
tagged_tokens: checks_PROPN -_PUNCT Era_PROPN :_PUNCT The_DET Alliance_PROPN of_ADP Islamic_PROPN Experts_PROPN forbade_VERB Iraqis_PROPN to_PART partake_VERB in_ADP the_DET assault_NOUN on_ADP Fallujah_PROPN with_ADP the_DET Yankees_PROPN ._PUNCT

C) tokens: vouchers: Duration - Period : The Council of Muslim Scholars banned Iraqis to take part in the attack on Fallujah with the Americans .
tags: PROPN PUNCT PROPN PUNCT DET PROPN ADP PROPN PROPN VERB PROPN PART VERB ADP DET NOUN ADP PROPN ADP DET PROPN PUNCT
tagged_tokens: vouchers_PROPN -_PUNCT Duration_PROPN :_PUNCT The_DET Council_PROPN of_ADP Muslim_PROPN Scholars_PROPN banned_VERB Iraqis_PROPN to_PART take_VERB part_NOUN in_ADP the_DET attack_NOUN on_ADP Fallujah_PROPN with_ADP the_DET Americans_PROPN ._PUNCTD) tokens: Az - Zaman : The Association of Muslim Scholars forbade Iraqis to participate in the attack on Fallujah with the Americans .
tags: PROPN PUNCT PROPN PUNCT DET PROPN ADP PROPN PROPN VERB PROPN PART VERB ADP DET NOUN ADP PROPN ADP DET PROPN PUNCT
tagged_tokens: Az_PROPN -_PUNCT Zaman_PROPN :_PUNCT The_DET Association_PROPN of_ADP Muslim_PROPN Scholars_PROPN forbade_VERB Iraqis_PROPN to_PART participate_VERB in_ADP the_DET attack_NOUN on_ADP Fallujah_PROPN with_ADP the_DET Americans_PROPN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: coins: In a pronouncement , the DHB said that for Iraqis to take party with "" predatory squads "" in the strike on a location , the citizenry of which is Muslim ( like Fallujah ) would be regarded the paramount of paramount wrongs .
tags: ADP DET NOUN PUNCT DET PROPN VERB SCONJ SCONJ PROPN VERB SCONJ SCONJ PROPN PART VERB NOUN ADP PUNCT VERB NOUN PUNCT ADP DET NOUN ADP DET NOUN PUNCT DET NOUN ADP PRON AUX ADJ PUNCT ADJ ADP PROPN PUNCT AUX AUX VERB DET ADV ADJ ADP ADJ NOUN PUNCT
tagged_tokens: In_ADP a_DET pronouncement_NOUN ,_PUNCT the_DET DHB_PROPN said_VERB that_SCONJ for_SCONJ Iraqis_PROPN to_PART take_VERB party_NOUN with_ADP ""_PUNCT predatory_VERB squads_NOUN ""_PUNCT in_ADP the_DET strike_NOUN on_ADP a_DET location_NOUN ,_PUNCT the_DET citizenry_NOUN of_ADP which_PRON is_AUX Muslim_ADJ (_PUNCT like_ADP Fallujah_PROPN )_PUNCT would_AUX be_AUX regarded_VERB the_DET paramount_ADV of_ADP paramount_ADJ wrongs_NOUN ._PUNCT

B) tokens: tokens: In a revelation , the GDB said that for Iraqis to take share with "" incursion teams "" in the offensive on a settlement , the population of which is Muslim ( such as Ramadi ) would be contemplated the most lethal of lethal misdeeds .
tags: ADP DET NOUN PUNCT DET PROPN VERB SCONJ SCONJ PROPN VERB SCONJ SCONJ PROPN PART VERB NOUN ADP PUNCT VERB NOUN PUNCT ADP DET NOUN ADP DET NOUN PUNCT DET NOUN ADP PRON AUX ADJ PUNCT ADJ ADP PROPN PUNCT AUX AUX VERB DET ADV ADJ ADP ADJ NOUN PUNCT
tagged_tokens: In_ADP a_DET revelation_NOUN ,_PUNCT the_DET GDB_PROPN said_VERB that_SCONJ for_SCONJ Iraqis_PROPN to_PART take_VERB share_NOUN with_ADP ""_PUNCT incursion_VERB teams_NOUN ""_PUNCT in_ADP the_DET offensive_NOUN on_ADP a_DET settlement_NOUN ,_PUNCT the_DET population_NOUN of_ADP which_PRON is_AUX Muslim_ADJ (_PUNCT such_ADJ as_ADP Ramadi_PROPN )_PUNCT would_AUX be_AUX contemplated_VERB the_DET most_ADV lethal_ADJ of_ADP lethal_ADJ misdeeds_NOUN ._PUNCT

C) tokens: pieces: In a statement , the EAB said that for Iraqis to take component with "" raiding units "" in the battle on a metropolis , the citizenry of which is Muslim ( such as Mosul ) would be deemed the utmost of utmost sins .
tags: ADP DET NOUN PUNCT DET PROPN VERB SCONJ SCONJ PROPN VERB SCONJ SCONJ PROPN PART VERB NOUN ADP PUNCT VERB NOUN PUNCT ADP DET NOUN ADP DET NOUN PUNCT DET NOUN ADP PRON AUX ADJ PUNCT ADJ ADP PROPN PUNCT AUX AUX VERB DET ADV ADJ ADP ADJ NOUN PUNCT
tagged_tokens: In_ADP a_DET statement_NOUN ,_PUNCT the_DET EAB_PROPN said_VERB that_SCONJ for_SCONJ Iraqis_PROPN to_PART take_VERB component_NOUN with_ADP ""_PUNCT raiding_VERB units_NOUN ""_PUNCT in_ADP the_DET battle_NOUN on_ADP a_DET metropolis_NOUN ,_PUNCT the_DET citizenry_NOUN of_ADP which_PRON is_AUX Muslim_ADJ (_PUNCT such_ADJ as_ADP Mosul_PROPN )_PUNCT would_AUX be_AUX deemed_VERB the_DET utmost_ADV of_ADP utmost_ADJ sins_NOUN ._PUNCTD) tokens: In a communique , the AMS said that for Iraqis to take part with "" raiding forces "" in the assault on a city , the population of which is Muslim ( such as Fallujah ) would be considered the most mortal of mortal sins .
tags: ADP DET NOUN PUNCT DET PROPN VERB SCONJ SCONJ PROPN PART VERB NOUN ADP PUNCT VERB NOUN PUNCT ADP DET NOUN ADP DET NOUN PUNCT DET NOUN ADP PRON AUX ADJ PUNCT ADJ ADP PROPN PUNCT AUX AUX VERB DET ADV ADJ ADP ADJ NOUN PUNCT
tagged_tokens: In_ADP a_DET communique_NOUN ,_PUNCT the_DET AMS_PROPN said_VERB that_SCONJ for_SCONJ Iraqis_PROPN to_PART take_VERB part_NOUN with_ADP ""_PUNCT raiding_VERB forces_NOUN ""_PUNCT in_ADP the_DET assault_NOUN on_ADP a_DET city_NOUN ,_PUNCT the_DET population_NOUN of_ADP which_PRON is_AUX Muslim_ADJ (_PUNCT such_ADJ as_ADP Fallujah_PROPN )_PUNCT would_AUX be_AUX considered_VERB the_DET most_ADV mortal_ADJ of_ADP mortal_ADJ sins_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: symbols: The extreme Shia Sadr movement issued a statement interdicting the contribution of Iraqi forces in the invasion on Fallujah , as well .
tags: DET ADJ ADJ PROPN NOUN VERB DET NOUN VERB DET NOUN ADP ADJ NOUN ADP DET NOUN ADP PROPN PUNCT ADV ADV PUNCT
tagged_tokens: The_DET extreme_ADJ Shia_ADJ Sadr_PROPN movement_NOUN issued_VERB a_DET statement_NOUN interdicting_VERB the_DET contribution_NOUN of_ADP Iraqi_ADJ forces_NOUN in_ADP the_DET invasion_NOUN on_ADP Fallujah_PROPN ,_PUNCT as_ADV well_ADV ._PUNCT

B) tokens: counters: The advanced Shia Sadr movement issued a statement precluding the partaking of Iraqi contingents in the offensive on Fallujah , as well .
tags: DET ADJ ADJ PROPN NOUN VERB DET NOUN VERB DET NOUN ADP ADJ NOUN ADP DET NOUN ADP PROPN PUNCT ADV ADV PUNCT
tagged_tokens: The_DET advanced_ADJ Shia_ADJ Sadr_PROPN movement_NOUN issued_VERB a_DET statement_NOUN precluding_VERB the_DET partaking_NOUN of_ADP Iraqi_ADJ contingents_NOUN in_ADP the_DET offensive_NOUN on_ADP Fallujah_PROPN ,_PUNCT as_ADV well_ADV ._PUNCT

C) tokens: markers: The severe Shiite Sadr movement issued a statement proscribing the participation of Iraqi troops in the assault on Fallujah , as well .
tags: DET ADJ ADJ PROPN NOUN VERB DET NOUN VERB DET NOUN ADP ADJ NOUN ADP DET NOUN ADP PROPN PUNCT ADV ADV PUNCT
tagged_tokens: The_DET severe_ADJ Shiite_ADJ Sadr_PROPN movement_NOUN issued_VERB a_DET statement_NOUN proscribing_VERB the_DET participation_NOUN of_ADP Iraqi_ADJ troops_NOUN in_ADP the_DET assault_NOUN on_ADP Fallujah_PROPN ,_PUNCT as_ADV well_ADV ._PUNCTD) tokens: The radical Shiite Sadr movement issued a statement forbidding the participation of Iraqi troops in the attack on Fallujah , as well .
tags: DET ADJ ADJ PROPN NOUN VERB DET NOUN VERB DET NOUN ADP ADJ NOUN ADP DET NOUN ADP PROPN PUNCT ADV ADV PUNCT
tagged_tokens: The_DET radical_ADJ Shiite_ADJ Sadr_PROPN movement_NOUN issued_VERB a_DET statement_NOUN forbidding_VERB the_DET participation_NOUN of_ADP Iraqi_ADJ troops_NOUN in_ADP the_DET attack_NOUN on_ADP Fallujah_PROPN ,_PUNCT as_ADV well_ADV ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: markers: It referred to as a "" strategy "" the avowal that the incursion was only on non-native warriors at Fallujah .
tags: PRON VERB DET PUNCT NOUN PUNCT DET NOUN SCONJ DET NOUN AUX ADV ADP ADJ NOUN ADP PROPN PUNCT
tagged_tokens: It_PRON referred_VERB to_ADP a_DET ""_PUNCT strategy_NOUN ""_PUNCT the_DET avowal_NOUN that_SCONJ the_DET incursion_NOUN was_AUX only_ADV on_ADP non-native_ADJ warriors_NOUN at_ADP Fallujah_PROPN ._PUNCT

B) tokens: indications: It termed as a "" design "" the assertion that the strike was simply on foreign soldiers at Fallujah .
tags: PRON VERB DET PUNCT NOUN PUNCT DET NOUN SCONJ DET NOUN AUX ADV ADP ADJ NOUN ADP PROPN PUNCT
tagged_tokens: It_PRON termed_VERB as_ADP a_DET ""_PUNCT design_NOUN ""_PUNCT the_DET assertion_NOUN that_SCONJ the_DET strike_NOUN was_AUX simply_ADV on_ADP foreign_ADJ soldiers_NOUN at_ADP Fallujah_PROPN ._PUNCT

C) tokens: pieces of evidence: It described as a "" approach "" the announcement that the attack was just on foreign warriors at Fallujah .
tags: PRON VERB DET PUNCT NOUN PUNCT DET NOUN SCONJ DET NOUN AUX ADV ADP ADJ NOUN ADP PROPN PUNCT
tagged_tokens: It_PRON described_VERB as_ADP a_DET ""_PUNCT approach_NOUN ""_PUNCT the_DET announcement_NOUN that_SCONJ the_DET attack_NOUN was_AUX just_ADV on_ADP foreign_ADJ warriors_NOUN at_ADP Fallujah_PROPN ._PUNCTD) tokens: It called a "" ploy "" the assertaion that the attack was merely on foreign fighters at Fallujah .
tags: PRON VERB DET PUNCT NOUN PUNCT DET NOUN SCONJ DET NOUN AUX ADV ADP ADJ NOUN ADP PROPN PUNCT
tagged_tokens: It_PRON called_VERB a_DET ""_PUNCT ploy_NOUN ""_PUNCT the_DET assertaion_NOUN that_SCONJ the_DET attack_NOUN was_AUX merely_ADV on_ADP foreign_ADJ fighters_NOUN at_ADP Fallujah_PROPN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of English language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: pieces: The concurrence of opinions amid the more bellicose Sunni Muslim clergymen of AMS and the radical Shia of the Sadr campaign has been viewed afore , closing spring during the initial US assailment on Fallujah and during the US onslaught on Mahdi Army military men in Najaf .
tags: DET NOUN ADP NOUN ADP DET ADV ADJ ADJ ADJ NOUN ADP PROPN CCONJ DET ADJ PROPN ADP DET PROPN NOUN AUX AUX VERB ADV PUNCT ADJ NOUN ADP DET ADJ PROPN NOUN ADP PROPN CCONJ ADP DET PROPN NOUN ADP PROPN PROPN NOUN ADP PROPN PUNCT
tagged_tokens: The_DET pieces_NOUN of_ADP opinions_NOUN amid_ADP the_DET more_ADV bellicose_ADJ Sunni_ADJ Muslim_ADJ clergymen_NOUN of_ADP AMS_PROPN and_CCONJ the_DET radical_ADJ Shia_PROPN of_ADP the_DET Sadr_PROPN campaign_NOUN has_AUX been_AUX viewed_VERB afore_ADV ,_PUNCT closing_ADJ spring_NOUN during_ADP the_DET initial_ADJ US_PROPN assailment_NOUN on_ADP Fallujah_PROPN and_CCONJ during_ADP the_DET US_PROPN onslaught_NOUN on_ADP Mahdi_PROPN Army_PROPN military_ADJ men_NOUN in_ADP Najaf_PROPN ._PUNCT

B) tokens: units: The union of standpoints amidst the more aggressive Sunni Muslim priests of AMS and the extremist Shia of the Sadr current has been witnessed aforetime , posterior spring during the opening US offense on Fallujah and during the US assault on Mahdi Army combatants in Najaf .
tags: DET NOUN ADP NOUN ADP DET ADV ADJ ADJ ADJ NOUN ADP PROPN CCONJ DET ADJ PROPN ADP DET PROPN NOUN AUX AUX VERB ADV PUNCT ADJ NOUN ADP DET ADJ PROPN NOUN ADP PROPN CCONJ ADP DET PROPN NOUN ADP PROPN PROPN NOUN ADP PROPN PUNCT
tagged_tokens: The_DET units_NOUN of_ADP standpoints_NOUN amidst_ADP the_DET more_ADV aggressive_ADJ Sunni_ADJ Muslim_ADJ priests_NOUN of_ADP AMS_PROPN and_CCONJ the_DET extremist_ADJ Shia_PROPN of_ADP the_DET Sadr_PROPN current_NOUN has_AUX been_AUX witnessed_VERB aforetime_ADV ,_PUNCT posterior_ADJ spring_NOUN during_ADP the_DET opening_ADJ US_PROPN offense_NOUN on_ADP Fallujah_PROPN and_CCONJ during_ADP the_DET US_PROPN assault_NOUN on_ADP Mahdi_PROPN Army_PROPN combatants_NOUN in_ADP Najaf_PROPN ._PUNCT

C) tokens: items: The get-together of views amid the more pugnacious Sunni Muslim clerics of AMS and the radical Shia of the Sadr movement has been observed afore , recent spring during the aboriginal US aggression on Fallujah and during the US attack on Mahdi Army militiamen in Najaf .
tags: DET NOUN ADP NOUN ADP DET ADV ADJ ADJ ADJ NOUN ADP PROPN CCONJ DET ADJ PROPN ADP DET PROPN NOUN AUX AUX VERB ADV PUNCT ADJ NOUN ADP DET ADJ PROPN NOUN ADP PROPN CCONJ ADP DET PROPN NOUN ADP PROPN PROPN NOUN ADP PROPN PUNCT
tagged_tokens: The_DET items_NOUN of_ADP views_NOUN amid_ADP the_DET more_ADV pugnacious_ADJ Sunni_ADJ Muslim_ADJ clerics_NOUN of_ADP AMS_PROPN and_CCONJ the_DET radical_ADJ Shia_PROPN of_ADP the_DET Sadr_PROPN movement_NOUN has_AUX been_AUX observed_VERB afore_ADV ,_PUNCT recent_ADJ spring_NOUN during_ADP the_DET aboriginal_ADJ US_PROPN aggression_NOUN on_ADP Fallujah_PROPN and_CCONJ during_ADP the_DET US_PROPN attack_NOUN on_ADP Mahdi_PROPN Army_PROPN militiamen_NOUN in_ADP Najaf_PROPN ._PUNCTD) tokens: The convergence of views among the more militant Sunni Muslim clerics of AMS and the radical Shiites of the Sadr movement has been seen before , last spring during the initial US assault on Fallujah and during the US attack on Mahdi Army militiamen in Najaf .
tags: DET NOUN ADP NOUN ADP DET ADV ADJ ADJ ADJ NOUN ADP PROPN CCONJ DET ADJ PROPN ADP DET PROPN NOUN AUX AUX VERB ADV PUNCT ADJ NOUN ADP DET ADJ PROPN NOUN ADP PROPN CCONJ ADP DET PROPN NOUN ADP PROPN PROPN NOUN ADP PROPN PUNCT
tagged_tokens: The_DET convergence_NOUN of_ADP views_NOUN among_ADP the_DET more_ADV militant_ADJ Sunni_ADJ Muslim_ADJ clerics_NOUN of_ADP AMS_PROPN and_CCONJ the_DET radical_ADJ Shiites_PROPN of_ADP the_DET Sadr_PROPN movement_NOUN has_AUX been_AUX seen_VERB before_ADV ,_PUNCT last_ADJ spring_NOUN during_ADP the_DET initial_ADJ US_PROPN assault_NOUN on_ADP Fallujah_PROPN and_CCONJ during_ADP the_DET US_PROPN attack_NOUN on_ADP Mahdi_PROPN Army_PROPN militiamen_NOUN in_ADP Najaf_PROPN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
