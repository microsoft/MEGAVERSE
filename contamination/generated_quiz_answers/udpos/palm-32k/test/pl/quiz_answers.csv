answer,prompt
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: 569 przed laty stracono na stosie Joannę d'Arc.
tags: NUM ADP NOUN VERB ADP NOUN PROPN PROPN PUNCT
tagged_tokens: 569_NUM przed_ADP laty_NOUN stracono_VERB na_ADP stosie_NOUN Joannę_PROPN d'Arc_PROPN .

B) tokens: Joannę d'Arc spalono 569 przed laty na stosie.
tags: PROPN PROPN VERB NUM ADP NOUN ADP NOUN PUNCT
tagged_tokens: Joannę_PROPN d'Arc_PROPN spalono_VERB 569_NUM przed_ADP laty_NOUN na_ADP stosie_NOUN .

C) tokens: 569 przed laty spalono Joannę d'Arc na stosie.
tags: NUM ADP NOUN VERB PROPN PROPN ADP NOUN PUNCT
tagged_tokens: 569_NUM przed_ADP laty_NOUN spalono_VERB Joannę_PROPN d'Arc_PROPN na_ADP stosie_NOUN .D) tokens: 569 lat temu spalono na stosie Joannę D'Arc .
tags: NUM NOUN ADP VERB ADP NOUN PROPN NOUN PUNCT
tagged_tokens: 569_NUM lat_NOUN temu_ADP spalono_VERB na_ADP stosie_NOUN Joannę_PROPN D'Arc_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: 6 kryminalistów wydostali się ze szpitala psychiatrycznego w Radomiu .
tags: NUM NOUN VERB ADP NOUN ADJ ADP PROPN PUNCT
tagged_tokens: 6_NUM kryminalistów_NOUN wydostali_VERB się_ADP ze_ADP szpitala_NOUN psychiatrycznego_ADJ w_ADP Radomiu_PROPN ._PUNCT

B) tokens: 6 bandytów uciekło ze szpitala dla psychicznie chorych w Radomiu .
tags: NUM NOUN VERB ADP NOUN ADP ADJ ADJ ADP PROPN PUNCT
tagged_tokens: 6_NUM bandytów_NOUN uciekło_VERB ze_ADP szpitala_NOUN dla_ADP psychicznie_ADJ chorych_ADJ w_ADP Radomiu_PROPN ._PUNCT

C) tokens: 6 przestępców zbiegło ze szpitala psychiatrycznego w Radomiu .
tags: NUM NOUN VERB ADP NOUN ADJ ADP PROPN PUNCT
tagged_tokens: 6_NUM przestępców_NOUN zbiegło_VERB ze_ADP szpitala_NOUN psychiatrycznego_ADJ w_ADP Radomiu_PROPN ._PUNCTD) tokens: 6 przestępców uciekło ze szpitala psychiatrycznego w Radomiu .
tags: NUM NOUN VERB ADP NOUN ADJ ADP PROPN PUNCT
tagged_tokens: 6_NUM przestępców_NOUN uciekło_VERB ze_ADP szpitala_NOUN psychiatrycznego_ADJ w_ADP Radomiu_PROPN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: A co by było , gdyby były dwie lub trzy ?
tags: CCONJ PRON AUX VERB PUNCT SCONJ VERB NUM CCONJ NUM PUNCT
tagged_tokens: A_CCONJ co_PRON by_AUX było_VERB ,_PUNCT gdyby_SCONJ były_VERB dwie_NUM lub_CCONJ trzy_NUM ?_PUNCT

B) tokens: A co by się stało , gdyby były dwie lub trzy ?
tags: CCONJ PRON AUX VERB PUNCT SCONJ VERB NUM CCONJ NUM PUNCT
tagged_tokens: A_CCONJ co_PRON by_AUX się_VERB stało_PUNCT ,_PUNCT gdyby_SCONJ były_VERB dwie_NUM lub_CCONJ trzy_NUM ?_PUNCT

C) tokens: A gdyby tak były dwie lub trzy ?
tags: CCONJ PRON VERB AUX NUM CCONJ NUM PUNCT
tagged_tokens: A_CCONJ gdyby_PRON tak_VERB były_AUX dwie_NUM lub_CCONJ trzy_NUM ?_PUNCTD) tokens: A co by było , gdyby były dwa albo trzy ?
tags: CCONJ PRON AUX VERB PUNCT SCONJ VERB NUM CCONJ NUM PUNCT
tagged_tokens: A_CCONJ co_PRON by_AUX było_VERB ,_PUNCT gdyby_SCONJ były_VERB dwa_NUM albo_CCONJ trzy_NUM ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: - A co ma być ? -
tags: CCONJ PRON VERB VERB PUNCT PUNCT
tagged_tokens: -_CCONJ A_PRON co_VERB ma_VERB być_VERB ?_PUNCT -_PUNCT

B) tokens: - Cóż jest ? -
tags: INTJ VERB PUNCT
tagged_tokens: -_INTJ Cóż_VERB jest_VERB ?_PUNCT

C) tokens: - Jak to ma wyglądać ? -
tags: ADV CCONJ VERB VERB PUNCT
tagged_tokens: -_ADV A_CCONJ to_PRON ma_VERB wyglądać_VERB ?_PUNCTD) tokens: - A co ma być ?
tags: PUNCT CCONJ PRON VERB VERB PUNCT
tagged_tokens: -_PUNCT A_CCONJ co_PRON ma_VERB być_VERB ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: A co wy czynicie ?
tags: CCONJ PRON PRON VERB PUNCT
tagged_tokens: A_CCONJ co_PRON wy_PRON czynicie_VERB ?_PUNCT

B) tokens: A co wy tworzycie ?
tags: CCONJ PRON PRON VERB PUNCT
tagged_tokens: A_CCONJ co_PRON wy_PRON tworzycie_VERB ?_PUNCT

C) tokens: A co wy robicie ?
tags: CCONJ PRON PRON VERB PUNCT
tagged_tokens: A_CCONJ co_PRON wy_PRON robicie_VERB ?_PUNCTD) tokens: A co wy robicie ?
tags: CCONJ PRON PRON VERB PUNCT
tagged_tokens: A_CCONJ co_PRON wy_PRON robicie_VERB ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: A cukier posiadasz ?
tags: CCONJ NOUN VERB PUNCT
tagged_tokens: A_CCONJ cukier_NOUN posiadasz_VERB ?_PUNCT

B) tokens: A cukier masz ?
tags: CCONJ NOUN VERB PUNCT
tagged_tokens: A_CCONJ cukier_NOUN masz_VERB ?_PUNCT

C) tokens: Cukier posiadasz ?
tags: NOUN VERB PUNCT
tagged_tokens: Cukier_NOUN posiadasz_VERB ?_PUNCTD) tokens: A cukier masz ?
tags: CCONJ NOUN VERB PUNCT
tagged_tokens: A_CCONJ cukier_NOUN masz_VERB ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: I czasami sam strzela .
tags: CCONJ NOUN ADJ VERB PUNCT
tagged_tokens: I_CCONJ czasami_NOUN sam_ADJ strzela_VERB ._PUNCT

B) tokens: Oraz niekiedy sam atakuje .
tags: CCONJ ADV NOUN VERB PUNCT
tagged_tokens: Oraz_CCONJ niekiedy_ADV sam_NOUN atakuje_VERB ._PUNCT

C) tokens: A czasem sam bierze broń do ręki .
tags: CCONJ NOUN ADV VERB NOUN PUNCT
tagged_tokens: A_CCONJ czasem_NOUN sam_ADV bierze_VERB broń_NOUN do_NOUN ręki_PUNCTD) tokens: A czasem sam strzela .
tags: CCONJ NOUN ADJ VERB PUNCT
tagged_tokens: A_CCONJ czasem_NOUN sam_ADJ strzela_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: – a czerwona guma jest ?
tags: PUNCT CCONJ ADJ NOUN VERB PUNCT
tagged_tokens: –_PUNCT a_CCONJ czerwona_ADJ guma_NOUN jest_VERB ?_PUNCT

B) tokens: – a karmazynowa gumka do włosów jest ?
tags: PUNCT CCONJ ADJ NOUN ADP NOUN VERB PUNCT
tagged_tokens: –_PUNCT a_CCONJ karmazynowa_ADJ gumka_NOUN do_ADP włosów_NOUN jest_VERB ?_PUNCT

C) tokens: – a krwista opaska jest ?
tags: PUNCT CCONJ ADJ NOUN VERB PUNCT
tagged_tokens: –_PUNCT a_CCONJ krwista_ADJ opaska_NOUN jest_VERB ?_PUNCTD) tokens: – a czerwona frotka jest ?
tags: PUNCT CCONJ ADJ NOUN VERB PUNCT
tagged_tokens: –_PUNCT a_CCONJ czerwona_ADJ frotka_NOUN jest_VERB ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: A dokąd ja powiedział em , że ojczyzny nie mam ?
tags: CCONJ ADV PRON VERB AUX PUNCT SCONJ PART VERB DET NOUN PUNCT
tagged_tokens: A_CCONJ dokąd_ADV ja_PRON powiedział_VERB em_AUX ,_PUNCT że_SCONJ ojczyzny_DET nie_PART mam_VERB ?_PUNCT

B) tokens: A gdzie ja rzekłem , że nie posiadam swej ojczyzny ?
tags: CCONJ ADV PRON VERB AUX PUNCT SCONJ PART VERB PRON NOUN PUNCT
tagged_tokens: A_CCONJ gdzie_ADV ja_PRON rzekłem_VERB ,_PUNCT że_SCONJ nie_PART posiadam_VERB swej_PRON ojczyzny_NOUN ?_PUNCT

C) tokens: A gdzież ja oznajmiłem , że ojczyzny swej nie posiadam ?
tags: CCONJ ADV PRON VERB AUX PUNCT SCONJ PART VERB PRON NOUN PUNCT
tagged_tokens: A_CCONJ gdzież_ADV ja_PRON oznajmiłem_VERB ,_PUNCT że_SCONJ ojczyzny_DET swej_PRON nie_PART posiadam_VERB ?_PUNCTD) tokens: A gdzie ja powiedział em , że nie mam swojej ojczyzny ?
tags: CCONJ ADV PRON VERB AUX PUNCT SCONJ PART VERB DET NOUN PUNCT
tagged_tokens: A_CCONJ gdzie_ADV ja_PRON powiedział_VERB em_AUX ,_PUNCT że_SCONJ nie_PART mam_VERB swojej_DET ojczyzny_NOUN ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: – a ile jest? «»
tags: PUNCT CCONJ NUM VERB PUNCT
tagged_tokens: –_PUNCT a_CCONJ ile_NUM jest«»_VERB PUNCT

B) tokens: – a ile to jest?
tags: PUNCT CCONJ DET VERB PUNCT
tagged_tokens: –_PUNCT a_CCONJ ile_DET to_PRON jest_VERB ?_PUNCT

C) tokens: – a ile jest ich ?
tags: PUNCT CCONJ DET VERB PUNCT
tagged_tokens: –_PUNCT a_CCONJ ile_DET jest_VERB ich_PRON ?_PUNCTD) tokens: – a ile jest ?
tags: PUNCT CCONJ DET VERB PUNCT
tagged_tokens: –_PUNCT a_CCONJ ile_DET jest_VERB ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: A inny przybywa do telewizji pijany .
tags: CCONJ ADJ VERB ADP NOUN ADJ PUNCT
tagged_tokens: A_CCONJ inny_ADJ przybywa_VERB do_ADP telewizji_NOUN pijany_ADJ ._PUNCT

B) tokens: A inny jest pijany, gdy zbliża się do kamery .
tags: CCONJ ADJ VERB PRON VERB ADP NOUN PUNCT
tagged_tokens: A_CCONJ inny_ADJ jest_VERB pijany_ADJ gdy_PRON zbliża_VERB się_PRON do_ADP kamery_NOUN ._PUNCT

C) tokens: A inna osoba jest pijana, gdy jest przed kamerą .
tags: CCONJ NOUN VERB ADJ PRON VERB ADP NOUN PUNCT
tagged_tokens: A_CCONJ inna_NOUN osoba_NOUN jest_VERB pijana_ADJ gdy_PRON jest_VERB przed_ADP kamerą_NOUN ._PUNCTD) tokens: A inni przychodzą do telewizji pijani .
tags: CCONJ ADJ VERB ADP NOUN ADJ PUNCT
tagged_tokens: A_CCONJ inni_ADJ przychodzą_VERB do_ADP telewizji_NOUN pijani_ADJ ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: A ja ledwie nie utraciłam zmysłów .
tags: CCONJ PRON ADV PART VERB AUX NOUN PUNCT
tagged_tokens: A_CCONJ ja_PRON ledwie_ADV nie_PART utraciłam_VERB zmysłów_NOUN ._PUNCT

B) tokens: A ja omal nie straciłam zmysłów .
tags: CCONJ PRON PART PART VERB AUX NOUN PUNCT
tagged_tokens: A_CCONJ ja_PRON omal_PART nie_PART straciłam_VERB zmysłów_NOUN ._PUNCT

C) tokens: A ja nieomal nie straciłam zmysłów .
tags: CCONJ PRON ADV PART VERB AUX NOUN PUNCT
tagged_tokens: A_CCONJ ja_PRON nieomal_ADV nie_PART straciłam_VERB zmysłów_NOUN ._PUNCTD) tokens: A ja omal nie postradała m zmysłów .
tags: CCONJ PRON PART PART VERB AUX NOUN PUNCT
tagged_tokens: A_CCONJ ja_PRON omal_PART nie_PART postradała_VERB m_AUX zmysłów_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: A ja marznę .
tags: CCONJ PRON VERB PUNCT
tagged_tokens: A_CCONJ ja_PRON marznę_VERB ._PUNCT

B) tokens: A ja ziębnę .
tags: CCONJ PRON VERB PUNCT
tagged_tokens: A_CCONJ ja_PRON ziębnę_VERB ._PUNCT

C) tokens: A ja kostnieję .
tags: CCONJ PRON VERB PUNCT
tagged_tokens: A_CCONJ ja_PRON kostnieję_VERB ._PUNCTD) tokens: A ja stygnę .
tags: CCONJ PRON VERB PUNCT
tagged_tokens: A_CCONJ ja_PRON stygnę_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: a czym się nazywa ?
tags: CCONJ ADV VERB ADP NOUN PUNCT
tagged_tokens: a_CCONJ czym_ADV się_VERB nazywa_NOUN ?_PUNCT

B) tokens: i jak ma na imię ?
tags: CCONJ ADV VERB ADP NOUN PUNCT
tagged_tokens: i_CCONJ jak_ADV ma_VERB na_ADP imię_NOUN ?_PUNCT

C) tokens: jaka jest jego nazwa ?
tags: DET NOUN COP VERB ADP NOUN PUNCT
tagged_tokens: jaka_DET jest_COP jego_ADP nazwa_NOUN ?_PUNCTD) tokens: a jak ma na imię ?
tags: CCONJ ADV VERB ADP NOUN PUNCT
tagged_tokens: a_CCONJ jak_ADV ma_VERB na_ADP imię_NOUN ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: A kiedy nadejdzie zima ?
tags: CCONJ ADV VERB NOUN PUNCT
tagged_tokens: A_CCONJ kiedy_ADV nadejdzie_VERB zima_NOUN ?_PUNCT

B) tokens: Ale jak nadejdzie zima ?
tags: CONJ ADV VERB NOUN PUNCT
tagged_tokens: Ale_CONJ jak_ADV nadejdzie_VERB zima_NOUN ?_PUNCT

C) tokens: I kiedy nadejdzie zima ?
tags: CONJ ADV VERB NOUN PUNCT
tagged_tokens: I_CONJ kiedy_ADV nadejdzie_VERB zima_NOUN ?_PUNCTD) tokens: A jak nadejdzie zima ?
tags: CCONJ ADV VERB NOUN PUNCT
tagged_tokens: A_CCONJ jak_ADV nadejdzie_VERB zima_NOUN ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: A niewiasta wedle powszechnego przekonania musi być ponętna .
tags: CCONJ NOUN ADP ADJ NOUN VERB AUX ADJ PUNCT
tagged_tokens: A_CCONJ niewiasta_NOUN wedle_ADP powszechnego_ADJ przekonania_NOUN musi_VERB być_AUX ponętna_ADJ ._PUNCT

B) tokens: A dama według powszechnej opinii musi być atrakcyjna .
tags: CCONJ NOUN ADP ADJ NOUN VERB AUX ADJ PUNCT
tagged_tokens: A_CCONJ dama_NOUN według_ADP powszechnej_ADJ opinii_NOUN musi_VERB być_AUX atrakcyjna_ADJ ._PUNCT

C) tokens: Kobieta zgodnie z powszechną opinią musi być ponętna .
tags: NOUN ADP ADJ NOUN VERB AUX ADJ PUNCT
tagged_tokens: Kobieta_NOUN zgodnie_ADP z_ADP powszechną_ADJ opinią_NOUN musi_VERB być_AUX ponętna_ADJ ._PUNCTD) tokens: A kobieta wedle powszechnego mniemania musi być atrakcyjna .
tags: CCONJ NOUN ADP ADJ NOUN VERB AUX ADJ PUNCT
tagged_tokens: A_CCONJ kobieta_NOUN wedle_ADP powszechnego_ADJ mniemania_NOUN musi_VERB być_AUX atrakcyjna_ADJ ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: –_PUNCT a_CCONJ książkę_NOUN ponoć_PART z_PART pięć_NUM albo_CCONJ sześć_NUM razy_NOUN przeczytał_VERB em_AUX ._PUNCT ._PUNCT
tags: PUNCT CCONJ NOUN PART PART NUM CCONJ NUM NOUN VERB AUX PUNCT PUNCT
tagged_tokens: –_PUNCT a_CCONJ książkę_NOUN ponoć_PART z_PART pięć_NUM albo_CCONJ sześć_NUM razy_NOUN przeczytał_VERB em_AUX ._PUNCT ._PUNCT

B) tokens: –_PUNCT a_CCONJ książkę_NOUN zapewne_PART z_PART pięć_NUM czy_CCONJ sześć_NUM razy_NOUN przeczytał_VERB em_AUX ._PUNCT ._PUNCT
tags: PUNCT CCONJ NOUN PART PART NUM CCONJ NUM NOUN VERB AUX PUNCT PUNCT
tagged_tokens: –_PUNCT a_CCONJ książkę_NOUN zapewne_PART z_PART pięć_NUM czy_CCONJ sześć_NUM razy_NOUN przeczytał_VERB em_AUX ._PUNCT ._PUNCT

C) tokens: –_PUNCT i_CCONJ chyba_PART z_PART pięć_NUM albo_CCONJ sześć_NUM razy_NOUN przeczytał_VERB em_AUX ._PUNCT ._PUNCT
tags: PUNCT CCONJ PART PART NUM CCONJ NUM NOUN VERB AUX PUNCT PUNCT
tagged_tokens: –_PUNCT i_CCONJ chyba_PART z_PART pięć_NUM albo_CCONJ sześć_NUM razy_NOUN przeczytał_VERB em_AUX ._PUNCT ._PUNCTD) tokens: – a książkę chyba z pięć albo sześć razy czytał em . .
tags: PUNCT CCONJ NOUN PART PART NUM CCONJ NUM NOUN VERB AUX PUNCT PUNCT
tagged_tokens: –_PUNCT a_CCONJ książkę_NOUN chyba_PART z_PART pięć_NUM albo_CCONJ sześć_NUM razy_NOUN czytał_VERB em_AUX ._PUNCT ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: A kto obecnie pluł i chwytał ?
tags: CCONJ PRON ADV VERB CCONJ VERB PUNCT
tagged_tokens: A_CCONJ kto_PRON obecnie_ADV pluł_VERB i_CCONJ chwytał_VERB ?_PUNCT

B) tokens: Kto z kolei dzisiaj pluł i chwytał ?
tags: PRON ADV CCONJ VERB CCONJ VERB PUNCT
tagged_tokens: Kto_PRON z_ADV kolei_CCONJ dzisiaj_ADV pluł_VERB i_CCONJ chwytał_VERB ?_PUNCT

C) tokens: A kto aktualnie pluł i łapał ?
tags: CCONJ PRON ADV VERB CCONJ VERB PUNCT
tagged_tokens: A_CCONJ kto_PRON aktualnie_ADV pluł_VERB i_CCONJ łapał_VERB ?_PUNCTD) tokens: A kto dzisiaj pluł i łapał ?
tags: CCONJ PRON ADV VERB CCONJ VERB PUNCT
tagged_tokens: A_CCONJ kto_PRON dzisiaj_ADV pluł_VERB i_CCONJ łapał_VERB ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Kto siedzi na kanapie ?
tags: CCONJ PRON VERB ADP NOUN PUNCT
tagged_tokens: Kto_PRON siedzi_VERB na_ADP kanapie_NOUN ?_PUNCT

B) tokens: Kogo męczy siedzisko?
tags: PRON VERB NOUN PUNCT
tagged_tokens: Kogo_PRON męczy_VERB siedzisko_NOUN ?_PUNCT

C) tokens: Kto okupował siedzisko?
tags: PRON VERB NOUN PUNCT
tagged_tokens: Kto_PRON okupował_VERB siedzisko_NOUN ?_PUNCTD) tokens: A kto siedzi na tapczanie ?
tags: CCONJ PRON VERB ADP NOUN PUNCT
tagged_tokens: A_CCONJ kto_PRON siedzi_VERB na_ADP tapczanie_NOUN ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: A kto spożyże pierwsze śniadanie ?
tags: CCONJ PRON VERB ADJ NOUN PUNCT
tagged_tokens: A_CCONJ kto_PRON spożyże_VERB pierwsze_ADJ śniadanie_NOUN ?_PUNCT

B) tokens: A kto wsunął pierwsze śniadanie ?
tags: CCONJ PRON VERB ADJ NOUN PUNCT
tagged_tokens: A_CCONJ kto_PRON wsunął_VERB pierwsze_ADJ śniadanie_NOUN ?_PUNCT

C) tokens: A kto spałaszował pierwsze śniadanie ?
tags: CCONJ PRON VERB ADJ NOUN PUNCT
tagged_tokens: A_CCONJ kto_PRON spałaszował_VERB pierwsze_ADJ śniadanie_NOUN ?_PUNCTD) tokens: A kto zjadł pierwsze śniadanie ?
tags: CCONJ PRON VERB ADJ NOUN PUNCT
tagged_tokens: A_CCONJ kto_PRON zjadł_VERB pierwsze_ADJ śniadanie_NOUN ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Mieszkanie wypełniają złowieszcze martwe przedmioty.
tags: NOUN VERB ADJ ADJ NOUN PUNCT
tagged_tokens: Mieszkanie_NOUN wypełniają_VERB złowieszcze_ADJ martwe_ADJ przedmioty_NOUN ._PUNCT

B) tokens: Mieszkanie zaludniają złowrogie nieożywione przedmioty.
tags: NOUN VERB ADJ ADJ NOUN PUNCT
tagged_tokens: Mieszkanie_NOUN zaludniają_VERB złowrogie_ADJ nieożywione_ADJ przedmioty_NOUN ._PUNCT

C) tokens: Rezydencja wypełniają niebezpieczne martwe obiekty.
tags: NOUN VERB ADJ ADJ NOUN PUNCT
tagged_tokens: Rezydencja_NOUN wypełniają_VERB niebezpieczne_ADJ martwe_ADJ obiekty_NOUN ._PUNCTD) tokens: A mieszkanie zapełniają złośliwe przedmioty martwe .
tags: CCONJ NOUN VERB ADJ NOUN ADJ PUNCT
tagged_tokens: A_CCONJ mieszkanie_NOUN zapełniają_VERB złośliwe_ADJ przedmioty_NOUN martwe_ADJ ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: A moje położenie jest nieprawdopodobnie komfortowe .
tags: CCONJ DET NOUN AUX ADV ADJ PUNCT
tagged_tokens: A_CCONJ moja_DET położenie_NOUN jest_AUX nieprawdopodobnie_ADV komfortowe_ADJ ._PUNCT

B) tokens: A moja sytuacja jest nieprawdopodobnie cudowna .
tags: CCONJ DET NOUN AUX ADV ADJ PUNCT
tagged_tokens: A_CCONJ moja_DET sytuacja_NOUN jest_AUX nieprawdopodobnie_ADV cudowna_ADJ ._PUNCT

C) tokens: A moja sytuacja jest nieprawdopodobnie bajeczna .
tags: CCONJ DET NOUN AUX ADV ADJ PUNCT
tagged_tokens: A_CCONJ moja_DET sytuacja_NOUN jest_AUX nieprawdopodobnie_ADV bajeczna_ADJ ._PUNCTD) tokens: A moja sytuacja jest nieprawdopodobnie luksusowa .
tags: CCONJ DET NOUN AUX ADV ADJ PUNCT
tagged_tokens: A_CCONJ moja_DET sytuacja_NOUN jest_AUX nieprawdopodobnie_ADV luksusowa_ADJ ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: tokeny: – a może to jest Agnieszka . .
tags: PUNCT CCONJ PART VERB AUX PROPN PUNCT PUNCT
tagged_tokens: tokeny:_PUNCT a_CCONJ może_PART to_VERB jest_AUX Agnieszka_PROPN ._PUNCT ._PUNCT

B) tokens: żetony: – a może to jest Barbara . .
tags: PUNCT CCONJ PART VERB AUX PROPN PUNCT PUNCT
tagged_tokens: żetony:_PUNCT a_CCONJ może_PART to_VERB jest_AUX Barbara_PROPN ._PUNCT ._PUNCT

C) tokens: tokeny: – a może to jest Krystyna . .
tags: PUNCT CCONJ PART VERB AUX PROPN PUNCT PUNCT
tagged_tokens: tokeny:_PUNCT a_CCONJ może_PART to_VERB jest_AUX Krystyna_PROPN ._PUNCT ._PUNCTD) tokens: – a może to jest Agata . .
tags: PUNCT CCONJ PART VERB AUX PROPN PUNCT PUNCT
tagged_tokens: –_PUNCT a_CCONJ może_PART to_VERB jest_AUX Agata_PROPN ._PUNCT ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: A o co nas obwinią ?
tags: CCONJ ADP PRON PRON VERB PUNCT
tagged_tokens: A_CCONJ o_ADP co_PRON nas_PRON obwinią_VERB ?_PUNCT

B) tokens: A w czym nas obwiną ?
tags: CCONJ ADP PRON PRON VERB PUNCT
tagged_tokens: A_CCONJ w_ADP czym_PRON nas_PRON obwiną_VERB ?_PUNCT

C) tokens: A o co nas posądzą ?
tags: CCONJ ADP PRON PRON VERB PUNCT
tagged_tokens: A_CCONJ o_ADP co_PRON nas_PRON posądzą_VERB ?_PUNCTD) tokens: A o co nas oskarżą ?
tags: CCONJ ADP PRON PRON VERB PUNCT
tagged_tokens: A_CCONJ o_ADP co_PRON nas_PRON oskarżą_VERB ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: A rozróżniać nie umiem .
tags: CCONJ VERB PART VERB PUNCT
tagged_tokens: A_CCONJ rozróżniać_VERB nie_PART umiem_VERB ._PUNCT

B) tokens: A odróżnić nie pojmuję .
tags: CCONJ VERB PART VERB PUNCT
tagged_tokens: A_CCONJ odróżnić_VERB nie_PART pojmuję_VERB ._PUNCT

C) tokens: A rozdzielić nie potrafię .
tags: CCONJ VERB PART VERB PUNCT
tagged_tokens: A_CCONJ rozdzielić_VERB nie_PART potrafię_VERB ._PUNCTD) tokens: A odróżnić nie potrafię .
tags: CCONJ VERB PART VERB PUNCT
tagged_tokens: A_CCONJ odróżnić_VERB nie_PART potrafię_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: -_PUNCT A_CCONJ on_PRON czego_ADV tu_ADV łapskę_NOUN wsadza_VERB ?_PUNCT
tags: PUNCT CCONJ PRON ADV ADV NOUN VERB PUNCT
tagged_tokens: -_PUNCT A_CCONJ on_PRON czego_ADV tu_ADV łapskę_NOUN wsadza_VERB ?_PUNCT

B) tokens: -_PUNCT A_CCONJ on_PRON do_ADV czego_ADV tu_ADV rękę_NOUN pcha_VERB ?_PUNCT
tags: PUNCT CCONJ PRON ADV ADV ADV NOUN VERB PUNCT
tagged_tokens: -_PUNCT A_CCONJ on_PRON do_ADV czego_ADV tu_ADV rękę_NOUN pcha_VERB ?_PUNCT

C) tokens: -_PUNCT A_CCONJ on_PRON o_ADV co_ADV tu_ADV łapę_NOUN wkłada_VERB ?_PUNCT
tags: PUNCT CCONJ PRON ADV ADV ADV NOUN VERB PUNCT
tagged_tokens: -_PUNCT A_CCONJ on_PRON o_ADV co_ADV tu_ADV łapę_NOUN wkłada_VERB ?_PUNCTD) tokens: - A on czego tu łapę pcha ?
tags: PUNCT CCONJ PRON ADV ADV NOUN VERB PUNCT
tagged_tokens: -_PUNCT A_CCONJ on_PRON czego_ADV tu_ADV łapę_NOUN pcha_VERB ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: tokeny: – a on dostaje bochenek ?
tags: PUNCT CCONJ PRON VERB rzeczownik PUNCT
tagged_tokens: tokeny_:_PUNCT a_CCONJ on_PRON dostaje_VERB bochenek_NOUN ?_PUNCT

B) tokens: żetony: – a on nabywa chleb ?
tags: PUNCT CCONJ PRON VERB rzeczownik PUNCT
tagged_tokens: żeton_PUNCT a_CCONJ on_PRON nabywa_VERB chleb_NOUN ?_PUNCT

C) tokens: tokeny: – a on bierze chleb ?
tags: PUNCT CCONJ PRON VERB rzeczownik PUNCT
tagged_tokens: tokeny_:_PUNCT a_CCONJ on_PRON bierze_VERB chleb_NOUN ?_PUNCTD) tokens: – a on dostaje chleb ?
tags: PUNCT CCONJ PRON VERB NOUN PUNCT
tagged_tokens: –_PUNCT a_CCONJ on_PRON dostaje_VERB chleb_NOUN ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: A PKS również ma swoje regulaminy , kierowca musi po pewnej liczbie godzin odsapnąć .
tags: CCONJ PROPN PART VERB DET NOUN PUNCT NOUN VERB ADP DET NOUN NOUN VERB PUNCT
tagged_tokens: A_CCONJ PKS_PROPN również_PART ma_VERB swoje_DET regulaminy_NOUN ,_PUNCT kierowca_NOUN musi_VERB po_ADP pewnej_DET liczbie_NOUN godzin_NOUN odsapnąć_VERB ._PUNCT

B) tokens: A PKS także ma swoje przepisy , kierowca musi po pewnej liczbie godzin odpoczywać .
tags: CCONJ PROPN PART VERB DET NOUN PUNCT NOUN VERB ADP DET NOUN NOUN VERB PUNCT
tagged_tokens: A_CCONJ PKS_PROPN także_PART ma_VERB swoje_DET przepisy_NOUN ,_PUNCT kierowca_NOUN musi_VERB po_ADP pewnej_DET liczbie_NOUN godzin_NOUN odpoczywać_VERB ._PUNCT

C) tokens: A PKS też ma swoje przepisy , kierowca musi po pewnej liczbie godzin wytchnąć .
tags: CCONJ PROPN PART VERB DET NOUN PUNCT NOUN VERB ADP DET NOUN NOUN VERB PUNCT
tagged_tokens: A_CCONJ PKS_PROPN też_PART ma_VERB swoje_DET przepisy_NOUN ,_PUNCT kierowca_NOUN musi_VERB po_ADP pewnej_DET liczbie_NOUN godzin_NOUN wytchnąć_VERB ._PUNCTD) tokens: A PKS również ma swoje przepisy , kierowca musi po pewnej ilości godzin odpocząć .
tags: CCONJ PROPN PART VERB DET NOUN PUNCT NOUN VERB ADP DET NOUN NOUN VERB PUNCT
tagged_tokens: A_CCONJ PKS_PROPN również_PART ma_VERB swoje_DET przepisy_NOUN ,_PUNCT kierowca_NOUN musi_VERB po_ADP pewnej_DET ilości_NOUN godzin_NOUN odpocząć_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Następnie być może umieścimy nasze zbiory online .
tags: ADV CCONJ ADV PART VERB DET NOUN ADP NOUN PUNCT
tagged_tokens: Następnie_ADV potem_CCONJ być_PART może_PART umieścimy_VERB nasze_DET zbiory_NOUN online_NOUN ._PUNCT

B) tokens: A potem ewentualnie umieścimy naszą kolekcję na Internecie .
tags: CCONJ ADV PART PART VERB DET NOUN ADP PROPN PUNCT
tagged_tokens: A_CCONJ potem_ADV ewentualnie_PART umieścimy_PART naszą_DET kolekcję_NOUN na_ADP Internecie_PROPN ._PUNCT

C) tokens: Wtedy prawdopodobnie umieścimy nasze zbiory w sieci .
tags: ADV PART PART VERB DET NOUN ADP NOUN PUNCT
tagged_tokens: Wtedy_ADV prawdopodobnie_PART umieścimy_VERB nasze_DET zbiory_NOUN w_ADP sieci_NOUN ._PUNCTD) tokens: A potem może także umieścimy naszą kolekcję w Internecie .
tags: CCONJ ADV PART PART VERB DET NOUN ADP PROPN PUNCT
tagged_tokens: A_CCONJ potem_ADV może_PART także_PART umieścimy_VERB naszą_DET kolekcję_NOUN w_ADP Internecie_PROPN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Następnie wszystko się odkryło .
tags: CCONJ ADV PRON PRON VERB PUNCT
tagged_tokens: Następnie_CCONJ potem_ADV wszystko_PRON się_PRON odkryło_VERB ._PUNCT

B) tokens: A później wszystko stało się jasne .
tags: CCONJ ADV PRON PRON VERB PUNCT
tagged_tokens: A_CCONJ później_ADV wszystko_PRON się_PRON stało_VERB jasne_PUNCT ._PUNCT

C) tokens: Potem wszystko stało się oczywiste .
tags: ADV PRON PRON VERB PUNCT
tagged_tokens: Potem_ADV wszystko_PRON się_PRON stało_VERB oczywiste_PUNCT ._PUNCTD) tokens: A potem wszystko się wyjaśniło .
tags: CCONJ ADV PRON PRON VERB PUNCT
tagged_tokens: A_CCONJ potem_ADV wszystko_PRON się_PRON wyjaśniło_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: – a powróćmy jeszcze do szkoły .
tags: PUNCT CCONJ VERB PART ADP NOUN PUNCT
tagged_tokens: –_PUNCT a_CCONJ powróćmy_VERB jeszcze_PART do_ADP szkoły_NOUN ._PUNCT

B) tokens: – a wracajmy jeszcze do szkółki .
tags: PUNCT CCONJ VERB PART ADP NOUN PUNCT
tagged_tokens: –_PUNCT a_CCONJ wracajmy_VERB jeszcze_PART do_ADP szkółki_NOUN ._PUNCT

C) tokens: – a idź z powrotem do szkoły .
tags: PUNCT CCONJ VERB PART ADP NOUN PUNCT
tagged_tokens: –_PUNCT a_CCONJ idź_VERB z_PART powrotem_PART do_ADP szkoły_NOUN ._PUNCTD) tokens: – a powróćmy jeszcze do szkoły .
tags: PUNCT CCONJ VERB PART ADP NOUN PUNCT
tagged_tokens: –_PUNCT a_CCONJ powróćmy_VERB jeszcze_PART do_ADP szkoły_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: - A wyruszy Konstanty ze mną do pana Platera?
tags: PUNCT CCONJ VERB PROPN ADP PRON ADP NOUN PROPN PUNCT
tagged_tokens: -_PUNCT A_CCONJ wyruszy_VERB Konstanty_PROPN ze_ADP mną_PRON do_ADP pana_NOUN Platera_PROPN ?_PUNCT

B) tokens: - A wkroczy Konstanty ze mną do pana Platera?
tags: PUNCT CCONJ VERB PROPN ADP PRON ADP NOUN PROPN PUNCT
tagged_tokens: -_PUNCT A_CCONJ wkroczy_VERB Konstanty_PROPN ze_ADP mną_PRON do_ADP pana_NOUN Platera_PROPN ?_PUNCT

C) tokens: - A pojedzie Konstanty ze mną do pana Platera?
tags: PUNCT CCONJ VERB PROPN ADP PRON ADP NOUN PROPN PUNCT
tagged_tokens: -_PUNCT A_CCONJ pojedzie_VERB Konstanty_PROPN ze_ADP mną_PRON do_ADP pana_NOUN Platera_PROPN ?_PUNCTD) tokens: - A pójdzie Konstanty ze mną do pana Platera ?
tags: PUNCT CCONJ VERB PROPN ADP PRON ADP NOUN PROPN PUNCT
tagged_tokens: -_PUNCT A_CCONJ pójdzie_VERB Konstanty_PROPN ze_ADP mną_PRON do_ADP pana_NOUN Platera_PROPN ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: - A sama nie usiłowała tego ?
tags: PUNCT CCONJ ADJ PART VERB AUX PUNCT
tagged_tokens: -_PUNCT A_CCONJ sama_ADJ nie_PART usiłowała_VERB tego_AUX ?_PUNCT

B) tokens: - A ona sama nie próbowała ?
tags: PUNCT CCONJ PRON PART VERB AUX PUNCT
tagged_tokens: -_PUNCT A_CCONJ ona_PRON sama_ADJ nie_PART próbowała_VERB ?_PUNCT

C) tokens: - A sama nie próbowałaś tego ?
tags: PUNCT CCONJ ADJ PART VERB AUX PRON PUNCT
tagged_tokens: -_PUNCT A_CCONJ sama_ADJ nie_PART próbowałaś_VERB tego_PRON ?_PUNCTD) tokens: - A sama nie próbowała ś ?
tags: PUNCT CCONJ ADJ PART VERB AUX PUNCT
tagged_tokens: -_PUNCT A_CCONJ sama_ADJ nie_PART próbowała_VERB ś_AUX ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: A przetrzymuje się może?
tags: CCONJ VERB PRON PART PUNCT
tagged_tokens: A_CCONJ przetrzymuje_VERB się_PRON może?_PART ?_PUNCT

B) tokens: A może się spóźnia?
tags: CCONJ PART VERB PRON PUNCT
tagged_tokens: A_CCONJ może_PART spóźnia_VERB się_PRON ?_PUNCT

C) tokens: Albo się spóźnia może?
tags: CCONJ PRON PART VERB PUNCT
tagged_tokens: Albo_CCONJ się_PRON spóźnia_VERB może?_PART ?_PUNCTD) tokens: A spóźnia się może ?
tags: CCONJ VERB PRON PART PUNCT
tagged_tokens: A_CCONJ spóźnia_VERB się_PRON może_PART ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Szkoda !
tags: VERB PUNCT
tagged_tokens: Szkoda_VERB !_PUNCT

B) tokens: Co za strata !
tags: NOUN PUNCT
tagged_tokens: Co_NOUN za_ADP strata_NOUN !_PUNCT

C) tokens: Jaka szkoda !
tags: DET VERB PUNCT
tagged_tokens: Jaka_DET szkoda_VERB !_PUNCTD) tokens: A szkoda !
tags: CCONJ VERB PUNCT
tagged_tokens: A_CCONJ szkoda_VERB !_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: elementy: – a tam posiada dodatki wiejskie .
tags: PUNCT CCONJ ADV VERB NOUN ADJ PUNCT
tagged_tokens: elementy:_PUNCT a_CCONJ tam_ADV posiada_VERB dodatki_NOUN wiejskie_ADJ ._PUNCT

B) tokens: tokensy: – a tam posiada dodatki wiejskie .
tags: PUNCT CCONJ ADV VERB NOUN ADJ PUNCT
tagged_tokens: tokensy:_PUNCT a_CCONJ tam_ADV posiada_VERB dodatki_NOUN wiejskie_ADJ ._PUNCT

C) tokens: symbole: – a tam dysponuje dodatkami wiejskimi .
tags: PUNCT CCONJ ADV VERB NOUN ADJ PUNCT
tagged_tokens: symbole:_PUNCT a_CCONJ tam_ADV dysponuje_VERB dodatkami_NOUN wiejskimi_ADJ ._PUNCTD) tokens: – a tam ma dodatki wiejskie .
tags: PUNCT CCONJ ADV VERB NOUN ADJ PUNCT
tagged_tokens: –_PUNCT a_CCONJ tam_ADV ma_VERB dodatki_NOUN wiejskie_ADJ ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Oraz obecnie wujaszek Józef stoi na peronie i wyczekuje .
tags: CCONJ ADV NOUN PROPN VERB ADP NOUN CCONJ VERB PUNCT
tagged_tokens: Oraz_CCONJ obecnie_ADV wujaszek_NOUN Józef_PROPN stoi_VERB na_ADP peronie_NOUN i_CCONJ wyczekuje_VERB ._PUNCT

B) tokens: A teraz stryjek Józef stoi na peronie i wygląda .
tags: CCONJ ADV NOUN PROPN VERB ADP NOUN CCONJ VERB PUNCT
tagged_tokens: A_CCONJ teraz_ADV stryjek_NOUN Józef_PROPN stoi_VERB na_ADP peronie_NOUN i_CCONJ wygląda_VERB ._PUNCT

C) tokens: Natomiast obecnie stryj Józio stoi na peronie i spogląda .
tags: ADV ADV NOUN PROPN VERB ADP NOUN CCONJ VERB PUNCT
tagged_tokens: Natomiast_ADV obecnie_ADV stryj_NOUN Józio_PROPN stoi_VERB na_ADP peronie_NOUN i_CCONJ spogląda_VERB ._PUNCTD) tokens: A teraz wujek Józiek stoi na peronie i czeka .
tags: CCONJ ADV NOUN PROPN VERB ADP NOUN CCONJ VERB PUNCT
tagged_tokens: A_CCONJ teraz_ADV wujek_NOUN Józiek_PROPN stoi_VERB na_ADP peronie_NOUN i_CCONJ czeka_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: - A to jest , niestety , straszliwa choroba .
tags: PUNCT CCONJ VERB AUX PUNCT PART PUNCT ADJ NOUN PUNCT
tagged_tokens: -_PUNCT A_CCONJ to_VERB jest_AUX ,_PUNCT niestety_PART ,_PUNCT straszliwa_ADJ choroba_NOUN ._PUNCT

B) tokens: - A to jest , niestety , śmiercionośna choroba .
tags: PUNCT CCONJ VERB AUX PUNCT PART PUNCT ADJ NOUN PUNCT
tagged_tokens: -_PUNCT A_CCONJ to_VERB jest_AUX ,_PUNCT niestety_PART ,_PUNCT śmiercionośna_ADJ choroba_NOUN ._PUNCT

C) tokens: - A to jest , niestety , zgubna choroba .
tags: PUNCT CCONJ VERB AUX PUNCT PART PUNCT ADJ NOUN PUNCT
tagged_tokens: -_PUNCT A_CCONJ to_VERB jest_AUX ,_PUNCT niestety_PART ,_PUNCT zgubna_ADJ choroba_NOUN ._PUNCTD) tokens: - A to jest , niestety , śmiertelna choroba .
tags: PUNCT CCONJ VERB AUX PUNCT PART PUNCT ADJ NOUN PUNCT
tagged_tokens: -_PUNCT A_CCONJ to_VERB jest_AUX ,_PUNCT niestety_PART ,_PUNCT śmiertelna_ADJ choroba_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: O to nie wchodzi w rachubą .
tags: CFORM PRON PART VERB ADP NOUN PUNCT
tagged_tokens: O_CFORM to_PRON nie_PART wchodzi_VERB w_ADP rachubą_NOUN ._PUNCT

B) tokens: Tak to nie wchodzi w rachubą .
tags: ADV CCONJ PRON PART VERB ADP NOUN PUNCT
tagged_tokens: Tak_ADV to_CCONJ nie_PART wchodzi_VERB w_ADP rachubą_NOUN ._PUNCT

C) tokens: Mnie to nie wchodzi w rachubą .
tags: PRON CCONJ PRON PART VERB ADP NOUN PUNCT
tagged_tokens: Mnie_PRON to_CCONJ nie_PART wchodzi_VERB w_ADP rachubą_NOUN ._PUNCTD) tokens: A to nie wchodzi w grę .
tags: CCONJ PRON PART VERB ADP NOUN PUNCT
tagged_tokens: A_CCONJ to_PRON nie_PART wchodzi_VERB w_ADP grę_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: – a oglądałeś eś koncert dla papieża ?
tags: PUNCT CCONJ VERB AUX NOUN ADP NOUN PUNCT
tagged_tokens: –_PUNCT a_CCONJ oglądałeś_VERB eś_AUX koncert_NOUN dla_ADP papieża_NOUN ?_PUNCT

B) tokens: – a słuchałeś eś koncert dla papieża ?
tags: PUNCT CCONJ VERB AUX NOUN ADP NOUN PUNCT
tagged_tokens: –_PUNCT a_CCONJ słuchałeś_VERB eś_AUX koncert_NOUN dla_ADP papieża_NOUN ?_PUNCT

C) tokens: – a widziałeś eś koncert dla papieża ?
tags: PUNCT CCONJ VERB AUX NOUN ADP NOUN PUNCT
tagged_tokens: –_PUNCT a_CCONJ widziałeś_VERB eś_AUX koncert_NOUN dla_ADP papieża_NOUN ?_PUNCTD) tokens: – a widział eś koncert dla papieża ?
tags: PUNCT CCONJ VERB AUX NOUN ADP NOUN PUNCT
tagged_tokens: –_PUNCT a_CCONJ widział_VERB eś_AUX koncert_NOUN dla_ADP papieża_NOUN ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: A zatem zauważyła .
tags: CCONJ CCONJ VERB PUNCT
tagged_tokens: A_CCONJ zatem_CCONJ zauważyła_VERB ._PUNCT

B) tokens: Więc dostrzegła .
tags: CCONJ CCONJ VERB PUNCT
tagged_tokens: Więc_CCONJ dostrzegła_VERB ._PUNCT

C) tokens: Przeto poczuła .
tags: ADV CCONJ VERB PUNCT
tagged_tokens: Przeto_ADV poczuła_VERB ._PUNCTD) tokens: A więc zauważyła .
tags: CCONJ CCONJ VERB PUNCT
tagged_tokens: A_CCONJ więc_CCONJ zauważyła_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: tokeny: – a łódzkie się kończą teraz . .
tags: PUNCT CCONJ ADJ PRON VERB ADV PUNCT PUNCT
tagged_tokens: tokeny: _PUNCT a _CCONJ łódzkie_ADJ się_PRON kończą_VERB teraz_ADV ._PUNCT ._PUNCT

B) tokens: żentony: – a łódzkie się zamłkają obecnie . .
tags: PUNCT CCONJ ADJ PRON VERB ADV PUNCT PUNCT
tagged_tokens: żentony: _PUNCT a _CCONJ łódzkie_ADJ się_PRON zamłkają_VERB obecnie_ADV ._PUNCT ._PUNCT

C) tokens: elementy leksykalne: – a łódzkie się kurczą obecnie . .
tags: PUNCT CCONJ ADJ PRON VERB ADV PUNCT PUNCT
tagged_tokens: elementy leksykalne: _PUNCT a _CCONJ łódzkie_ADJ się_PRON kurczą_VERB obecnie_ADV ._PUNCT ._PUNCTD) tokens: – a łódzkie się kończą teraz . .
tags: PUNCT CCONJ ADJ PRON VERB ADV PUNCT PUNCT
tagged_tokens: –_PUNCT a_CCONJ łódzkie_ADJ się_PRON kończą_VERB teraz_ADV ._PUNCT ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: - Ach , panie Aleksandrze , samej mi się odechciewa .
tags: PUNCT INTJ PUNCT NOUN PROPN PUNCT PART PART VERB PUNCT
tagged_tokens: -_PUNCT Ach_INTJ ,_PUNCT panie_NOUN Aleksandrze_PROPN ,_PUNCT samej_PART mi_PART się_PART odechciewa_VERB ._PUNCT

B) tokens: - O rety , panie Aleksandrze , nie mam sił .
tags: PUNCT INTJ PUNCT NOUN PROPN PUNCT NEG VERB PUNCT
tagged_tokens: -_PUNCT O_INTJ rety_PUNCT ,_PUNCT panie_NOUN Aleksandrze_PROPN ,_PUNCT nie_NEG mam_VERB sił_PUNCT .

C) tokens: - Auć , panie Aleksandrze , ja już umieram .
tags: PUNCT INTJ PUNCT NOUN PROPN PUNCT PRON VERB PUNCT
tagged_tokens: -_PUNCT Auć_INTJ ,_PUNCT panie_NOUN Aleksandrze_PROPN ,_PUNCT ja_PRON już_VERB umieram_PUNCT .D) tokens: - Ach , panie Aleksandrze , sama już nie wiem .
tags: PUNCT INTJ PUNCT NOUN PROPN PUNCT ADJ PART PART VERB PUNCT
tagged_tokens: -_PUNCT Ach_INTJ ,_PUNCT panie_NOUN Aleksandrze_PROPN ,_PUNCT sama_ADJ już_PART nie_PART wiem_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Lecz_CCONJ chłopak_NOUN usiłował_VERB .
tags: CCONJ NOUN VERB PUNCT
tagged_tokens: Lecz_CCONJ chłopak_NOUN usiłował_VERB ._PUNCT

B) tokens: Ale_CCONJ facet_NOUN starał_VERB .
tags: CCONJ NOUN VERB PUNCT
tagged_tokens: Ale_CCONJ facet_NOUN starał_VERB ._PUNCT

C) tokens: Mimo to gość_CCONJ chłopak_NOUN próbował_VERB .
tags: CCONJ NOUN VERB PUNCT
tagged_tokens: Mimo_CCONJ to_PRON gość_CCONJ chłopak_NOUN próbował_VERB ._PUNCTD) tokens: Ale chłopak próbował .
tags: CCONJ NOUN VERB PUNCT
tagged_tokens: Ale_CCONJ chłopak_NOUN próbował_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Lecz cokolwiek rzekniemy , jest to przecież krzyż , bo wciąż i bardzo potrzeba krzyża , ażeby ludzi rzucić sobie do nóg .
tags: CCONJ PRON VERB PUNCT AUX VERB PART NOUN PUNCT CCONJ ADV CCONJ ADV VERB NOUN PUNCT SCONJ NOUN VERB PRON ADP NOUN PUNCT
tagged_tokens: Lecz_CCONJ cokolwiek_PRON rzekniemy_VERB ,_PUNCT jest_AUX to_VERB przecież_PART krzyż_NOUN ,_PUNCT bo_CCONJ wciąż_ADV i_CCONJ bardzo_ADV potrzeba_VERB krzyża_NOUN ,_PUNCT ażeby_SCONJ ludzi_NOUN rzucić_VERB sobie_PRON do_ADP nóg_NOUN ._PUNCT

B) tokens: Aczkolwiek cokolwiek powiemy , jest to zawsze krzyż , bo stale i bardzo potrzeba krzyża , aby ludzi rzucić sobie do nóg .
tags: CCONJ PRON VERB PUNCT AUX VERB ADV NOUN PUNCT CCONJ ADV CCONJ ADV VERB NOUN PUNCT SCONJ NOUN VERB PRON ADP NOUN PUNCT
tagged_tokens: Aczkolwiek_CCONJ cokolwiek_PRON powiemy_VERB ,_PUNCT jest_AUX to_VERB zawsze_ADV krzyż_NOUN ,_PUNCT bo_CCONJ stale_ADV i_CCONJ bardzo_ADV potrzeba_VERB krzyża_NOUN ,_PUNCT aby_SCONJ ludzi_NOUN rzucić_VERB sobie_PRON do_ADP nóg_NOUN ._PUNCT

C) tokens: Jednak cokolwiek powiemy , jest to zawsze krzyż , bo stale i niezmiernie potrzeba krzyża , by ludzi rzucić sobie do nóg .
tags: CONJ PRON VERB PUNCT AUX VERB ADV NOUN PUNCT CCONJ ADV CCONJ ADV VERB NOUN PUNCT COMP NOUN VERB PRON ADP NOUN PUNCT
tagged_tokens: Jednak_CONJ cokolwiek_PRON powiemy_VERB ,_PUNCT jest_AUX to_VERB zawsze_ADV krzyż_NOUN ,_PUNCT bo_CCONJ stale_ADV i_CCONJ niezmiernie_ADV potrzeba_VERB krzyża_NOUN ,_PUNCT by_COMP ludzi_NOUN rzucić_VERB sobie_PRON do_ADP nóg_NOUN ._PUNCTD) tokens: Ale cokolwiek powiemy , jest to przecież krzyż , gdyż wciąż i niezmiernie potrzeba krzyża , aby ludzi rzucić sobie do nóg .
tags: CCONJ PRON VERB PUNCT AUX VERB PART NOUN PUNCT SCONJ ADV CCONJ ADV VERB NOUN PUNCT SCONJ NOUN VERB PRON ADP NOUN PUNCT
tagged_tokens: Ale_CCONJ cokolwiek_PRON powiemy_VERB ,_PUNCT jest_AUX to_VERB przecież_PART krzyż_NOUN ,_PUNCT gdyż_SCONJ wciąż_ADV i_CCONJ niezmiernie_ADV potrzeba_VERB krzyża_NOUN ,_PUNCT aby_SCONJ ludzi_NOUN rzucić_VERB sobie_PRON do_ADP nóg_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: - Ale mniemał , że nie dowcipkuje .
tags: PUNCT CCONJ VERB PUNCT SCONJ PART VERB PUNCT
tagged_tokens: -_PUNCT Ale_CCONJ mniemał_VERB ,_że_SCONJ nie_PART dowcipkuje_VERB ._PUNCT

B) tokens: - Ale rozumiał , że nie kpi .
tags: PUNCT CCONJ VERB PUNCT SCONJ PART VERB PUNCT
tagged_tokens: -_PUNCT Ale_CCONJ rozumiał_VERB ,_że_SCONJ nie_PART kpi_VERB ._PUNCT

C) tokens: - Ale wiedział , że nie żegnował .
tags: PUNCT CCONJ VERB PUNCT SCONJ PART VERB PUNCT
tagged_tokens: -_PUNCT Ale_CCONJ wiedział_VERB ,_że_SCONJ nie_PART żegnował_VERB ._PUNCTD) tokens: - Ale czuł , że nie żartuje .
tags: PUNCT CCONJ VERB PUNCT SCONJ PART VERB PUNCT
tagged_tokens: -_PUNCT Ale_CCONJ czuł_VERB ,_PUNCT że_SCONJ nie_PART żartuje_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Lecz ja jestem zwolennikiem , aby obrócić je na pieniądze .
tags: SCONJ PRON AUX NOUN PUNCT SCONJ VERB PRON ADP NOUN PUNCT
tagged_tokens: Lecz_SCONJ ja_PRON jestem_AUX zwolennikiem_NOUN ,_PUNCT aby_SCONJ obrócić_VERB je_PRON na_ADP pieniądze_NOUN ._PUNCT

B) tokens: Lecz ja popieram , by przemienić je w gotówkę .
tags: SCONJ PRON AUX VERB PRON ADP NOUN PUNCT
tagged_tokens: Lecz_SCONJ ja_PRON popieram_AUX ,_PUNCT by_ADP przemienić_VERB je_PRON w_ADP gotówkę_NOUN ._PUNCT

C) tokens: Lecz ja pochwalam , aby zamienić je na pieniądze .
tags: CCONJ PRON AUX VERB PRON ADP NOUN PUNCT
tagged_tokens: Lecz_CCONJ ja_PRON pochwalam_AUX ,_PUNCT aby_SCONJ zamienić_VERB je_PRON na_ADP pieniądze_NOUN ._PUNCTD) tokens: Ale ja jestem zwolennikiem , aby zamienić je na pieniądze .
tags: CCONJ PRON AUX NOUN PUNCT SCONJ VERB PRON ADP NOUN PUNCT
tagged_tokens: Ale_CCONJ ja_PRON jestem_AUX zwolennikiem_NOUN ,_PUNCT aby_SCONJ zamienić_VERB je_PRON na_ADP pieniądze_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: - Ale ja wiem , że przesłuchanie ma się odbywać jutro . . .
tags: PUNCT CCONJ PRON VERB PUNCT SCONJ NOUN VERB PRON VERB ADV PUNCT PUNCT PUNCT
tagged_tokens: -_PUNCT Ale_CCONJ ja_PRON wiem_VERB ,_PUNCT że_SCONJ przesłuchanie_NOUN ma_VERB się_PRON odbywać_VERB jutro_ADV ._PUNCT ._PUNCT ._PUNCT

B) tokens: - Ale ja wiem , że posiedzenie ma się odbyć jutro . . .
tags: PUNCT CCONJ PRON VERB PUNCT SCONJ NOUN VERB PRON VERB ADV PUNCT PUNCT PUNCT
tagged_tokens: -_PUNCT Ale_CCONJ ja_PRON wiem_VERB ,_PUNCT że_SCONJ posiedzenie_NOUN ma_VERB się_PRON odbyć_VERB jutro_ADV ._PUNCT ._PUNCT ._PUNCT

C) tokens: - Ale ja wiem , że rozprawa ma się toczyć jutro . . .
tags: PUNCT CCONJ PRON VERB PUNCT SCONJ NOUN VERB PRON VERB ADV PUNCT PUNCT PUNCT
tagged_tokens: -_PUNCT Ale_CCONJ ja_PRON wiem_VERB ,_PUNCT że_SCONJ rozprawa_NOUN ma_VERB się_PRON toczyć_VERB jutro_ADV ._PUNCT ._PUNCT ._PUNCTD) tokens: - Ale ja wiem , że rozprawa ma się odbyć jutro . . .
tags: PUNCT CCONJ PRON VERB PUNCT SCONJ NOUN VERB PRON VERB ADV PUNCT PUNCT PUNCT
tagged_tokens: -_PUNCT Ale_CCONJ ja_PRON wiem_VERB ,_PUNCT że_SCONJ rozprawa_NOUN ma_VERB się_PRON odbyć_VERB jutro_ADV ._PUNCT ._PUNCT ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: – ale ja relaksuję się najlepiej przy komputerze .
tags: PUNCT CCONJ PRON VERB ADV ADP NOUN PUNCT
tagged_tokens: –_PUNCT ale_CCONJ ja_PRON relaksuję_VERB się_ADV najlepiej_ADV przy_ADP komputerze_NOUN ._PUNCT

B) tokens: – ale ja odpoczywam najlepiej przy komputerze .
tags: PUNCT CCONJ PRON VERB ADV ADP NOUN PUNCT
tagged_tokens: –_PUNCT ale_CCONJ ja_PRON odpoczywam_VERB najlepiej_ADV przy_ADP komputerze_NOUN ._PUNCT

C) tokens: – ale ja relaksuję się najefektywniej przy komputerze .
tags: PUNCT CCONJ PRON VERB ADV ADP NOUN PUNCT
tagged_tokens: –_PUNCT ale_CCONJ ja_PRON relaksuję_VERB się_ADV najefektywniej_ADV przy_ADP komputerze_NOUN ._PUNCTD) tokens: – ale ja wypoczywam najlepiej przy komputerze .
tags: PUNCT CCONJ PRON VERB ADV ADP NOUN PUNCT
tagged_tokens: –_PUNCT ale_CCONJ ja_PRON wypoczywam_VERB najlepiej_ADV przy_ADP komputerze_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: – ale jest jeden króliczek .
tags: PUNCT CCONJ VERB ADJ NOUN PUNCT
tagged_tokens: –_PUNCT ale_CCONJ jest_VERB jeden_ADJ króliczek_NOUN ._PUNCT

B) tokens: – ale jest jeden zając .
tags: PUNCT CCONJ VERB ADJ NOUN PUNCT
tagged_tokens: –_PUNCT ale_CCONJ jest_VERB jeden_ADJ zając_NOUN ._PUNCT

C) tokens: – ale jest jeden królik .
tags: PUNCT CCONJ VERB ADJ NOUN PUNCT
tagged_tokens: –_PUNCT ale_CCONJ jest_VERB jeden_ADJ królik_NOUN ._PUNCTD) tokens: – ale jest jeden zajączek .
tags: PUNCT CCONJ VERB ADJ NOUN PUNCT
tagged_tokens: –_PUNCT ale_CCONJ jest_VERB jeden_ADJ zajączek_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Lecz kluczowe jest znalezienie sponsora .
tags: CCONJ ADJ AUX NOUN NOUN PUNCT
tagged_tokens: Lecz_CCONJ kluczowe_ADJ jest_AUX znalezienie_NOUN sponsora_NOUN ._PUNCT

B) tokens: Ale fundamentalne jest znalezienie sponsora .
tags: CCONJ ADJ AUX NOUN NOUN PUNCT
tagged_tokens: Ale_CCONJ fundamentalne_ADJ jest_AUX znalezienie_NOUN sponsora_NOUN ._PUNCT

C) tokens: Lecz newralgiczne jest znalezienie sponsora .
tags: CCONJ ADJ AUX NOUN NOUN PUNCT
tagged_tokens: Lecz_CCONJ newralgiczne_ADJ jest_AUX znalezienie_NOUN sponsora_NOUN ._PUNCTD) tokens: Ale kluczowe jest pozyskanie sponsora .
tags: CCONJ ADJ AUX NOUN NOUN PUNCT
tagged_tokens: Ale_CCONJ kluczowe_ADJ jest_AUX pozyskanie_NOUN sponsora_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Niemniej ludzie na Śląsku niepokoją się o swe córki .
tags: CCONJ NOUN ADP PROPN PART VERB PRON ADP DET NOUN PUNCT
tagged_tokens: Niemniej_CCONJ ludzie_NOUN na_ADP Śląsku_PROPN niepokoją_VERB się_PRON o_ADP swe_DET córki_NOUN ._PUNCT

B) tokens: Jednak ludzie na Śląsku obawiają się o swoje córki .
tags: CONJ NOUN ADP PROPN PART VERB PRON ADP DET NOUN PUNCT
tagged_tokens: Jednak_CONJ ludzie_NOUN na_ADP Śląsku_PROPN obawiają_VERB się_PRON o_ADP swoje_DET córki_NOUN ._PUNCT

C) tokens: Ale ludzie na Śląsku lękają się o swoje córki .
tags: CCONJ NOUN ADP PROPN PART VERB PRON ADP DET NOUN PUNCT
tagged_tokens: Ale_CCONJ ludzie_NOUN na_ADP Śląsku_PROPN lękają_VERB się_PRON o_ADP swoje_DET córki_NOUN ._PUNCTD) tokens: Ale ludzie na Śląsku już boją się o swoje córki .
tags: CCONJ NOUN ADP PROPN PART VERB PRON ADP DET NOUN PUNCT
tagged_tokens: Ale_CCONJ ludzie_NOUN na_ADP Śląsku_PROPN już_PART boją_VERB się_PRON o_ADP swoje_DET córki_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Lecz minęły lata , a dokola gdańskiego Ratusza nadal rozbrzmiewał obcy język i obłudne pieśni .
tags: CCONJ VERB NOUN PUNCT CCONJ ADP ADJ NOUN ADV VERB ADJ NOUN CCONJ ADJ NOUN PUNCT
tagged_tokens: Lecz_CCONJ minęły_VERB lata_NOUN ,_PUNCT a_CCONJ dokola_ADP gdańskiego_ADJ Ratusza_NOUN nadal_ADV rozbrzmiewał_VERB obcy_ADJ język_NOUN i_CCONJ obłudne_ADJ pieśni_NOUN ._PUNCT

B) tokens: Niemniej upływały lata , a w pobliżu gdańskiego Ratusza nadal rozbrzmiewał obcy głos i obce pieśni .
tags: CCONJ VERB NOUN PUNCT CCONJ ADP ADJ NOUN ADV VERB ADJ NOUN CCONJ ADJ NOUN PUNCT
tagged_tokens: Niemniej_CCONJ upływały_VERB lata_NOUN ,_PUNCT a_CCONJ w_ADP pobliżu_ADP gdańskiego_ADJ Ratusza_NOUN nadal_ADV rozbrzmiewał_VERB obcy_ADJ głos_NOUN i_CCONJ obce_ADJ pieśni_NOUN ._PUNCT

C) tokens: Przez długie lata wokół gdańskiego Ratusza rozbrzmiewał obcy język i obce pieśni .
tags: ADP NOUN ADP ADJ NOUN VERB ADJ NOUN CCONJ ADJ NOUN PUNCT
tagged_tokens: Przez_ADP długie_NOUN lata_ADP wokół_ADP gdańskiego_ADJ Ratusza_NOUN rozbrzmiewał_VERB obcy_ADJ język_NOUN i_CCONJ obce_ADJ pieśni_NOUN ._PUNCTD) tokens: Ale mijały lata , a dokoła gdańskiego Ratusza wciąż rozbrzmiewała obca mowa i obce pieśni .
tags: CCONJ VERB NOUN PUNCT CCONJ ADP ADJ NOUN ADV VERB ADJ NOUN CCONJ ADJ NOUN PUNCT
tagged_tokens: Ale_CCONJ mijały_VERB lata_NOUN ,_PUNCT a_CCONJ dokoła_ADP gdańskiego_ADJ Ratusza_NOUN wciąż_ADV rozbrzmiewała_VERB obca_ADJ mowa_NOUN i_CCONJ obce_ADJ pieśni_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: – ale my jesteśmy w stosunkach międzynarodowych .
tags: PUNCT CCONJ PRON AUX ADP NOUN ADJ PUNCT
tagged_tokens: –_PUNCT ale_CCONJ my_PRON jesteśmy_AUX w_ADP stosunkach_NOUN międzynarodowych_ADJ ._PUNCT

B) tokens: – ale my istnieją w stosunkach międzynarodowych .
tags: PUNCT CCONJ PRON AUX ADP NOUN ADJ PUNCT
tagged_tokens: –_PUNCT ale_CCONJ my_PRON istnieją_AUX w_ADP stosunkach_NOUN międzynarodowych_ADJ ._PUNCT

C) tokens: – ale my istnieją w relacjach międzynarodowych .
tags: PUNCT CCONJ PRON AUX ADP NOUN ADJ PUNCT
tagged_tokens: –_PUNCT ale_CCONJ my_PRON istnieją_AUX w_ADP relacjach_NOUN międzynarodowych_ADJ ._PUNCTD) tokens: – ale my jesteśmy na stosunkach międzynarodowych .
tags: PUNCT CCONJ PRON AUX ADP NOUN ADJ PUNCT
tagged_tokens: –_PUNCT ale_CCONJ my_PRON jesteśmy_AUX na_ADP stosunkach_NOUN międzynarodowych_ADJ ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Ale nie da się odpowiadać na myśli .
tags: CCONJ PART VERB VERB ADP NOUN PUNCT
tagged_tokens: Ale_CCONJ nie_PART da_VERB się_VERB odpowiadać_VERB na_ADP myśli_NOUN ._PUNCT

B) tokens: Lecz nie wypada reagować na myśli .
tags: CONJ PART VERB VERB ADP NOUN PUNCT
tagged_tokens: Lecz_CONJ nie_PART wypada_VERB reagować_VERB na_ADP myśli_NOUN ._PUNCT

C) tokens: Jednak nie uchodzi odpowiadać za zamysły .
tags: CONJ PART VERB VERB ADP NOUN PUNCT
tagged_tokens: Jednak_CONJ nie_PART uchodzi_VERB odpowiadać_VERB za_ADP zamysły_NOUN ._PUNCTD) tokens: Ale nie można odpowiadać za myśli .
tags: CCONJ PART VERB VERB ADP NOUN PUNCT
tagged_tokens: Ale_CCONJ nie_PART można_VERB odpowiadać_VERB za_ADP myśli_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Lecz nigdy więcej nie zjawił się .
tags: CCONJ ADV PART PART VERB PUNCT
tagged_tokens: Lecz_CCONJ nigdy_ADV więcej_PART nie_PART zjawił_VERB się_PUNCT .

B) tokens: Ale nigdy więcej nie przybył .
tags: CCONJ ADV PART PART VERB PUNCT
tagged_tokens: Ale_CCONJ nigdy_ADV więcej_PART nie_PART przybył_VERB .

C) tokens: Ale nigdy już nie nadszedł .
tags: CCONJ ADV PART PART VERB PUNCT
tagged_tokens: Ale_CCONJ nigdy_ADV już_PART nie_PART nadszedł_VERB .D) tokens: Ale nigdy już nie przyszedł .
tags: CCONJ ADV PART PART VERB PUNCT
tagged_tokens: Ale_CCONJ nigdy_ADV już_PART nie_PART przyszedł_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: – Lecz o to teraz Pan walczy?
tags: PUNCT CCONJ ADP PRON ADV NOUN VERB PUNCT
tagged_tokens: –_PUNCT Lecz_CCONJ o_ADP to_PRON teraz_ADV Pan_NOUN walczy_VERB ?_PUNCT

B) tokens: – Ale o to teraz Bóg walczy?
tags: PUNCT CCONJ ADP PRON ADV NOUN VERB PUNCT
tagged_tokens: –_PUNCT Ale_CCONJ o_ADP to_PRON teraz_ADV Bóg_NOUN walczy_VERB ?_PUNCT

C) tokens: – Ale o to teraz Pan walczy przeciwko nim?
tags: PUNCT CCONJ ADP PRON ADV NOUN VERB ADP PRON PUNCT
tagged_tokens: –_PUNCT Ale_CCONJ o_ADP to_PRON teraz_ADV Pan_NOUN walczy_VERB ADP_PRON nim_PRON ?_PUNCTD) tokens: – Ale o to teraz Pan walczy ?
tags: PUNCT CCONJ ADP PRON ADV NOUN VERB PUNCT
tagged_tokens: –_PUNCT Ale_CCONJ o_ADP to_PRON teraz_ADV Pan_NOUN walczy_VERB ?_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Ale oni nie posiadają Balcerowiczów .
tags: CCONJ PRON PART VERB PROPN PUNCT
tagged_tokens: Ale_CCONJ oni_PRON nie_PART posiadają_VERB Balcerowiczów_PROPN ._PUNCT

B) tokens: Lecz oni nie dysponują Balcerowiczami .
tags: CONJ PRON PART VERB PROPN PUNCT
tagged_tokens: Lecz_CONJ oni_PRON nie_PART dysponują_VERB Balcerowiczami_PROPN ._PUNCT

C) tokens: Natomiast oni są pozbawieni Balcerowiczów .
tags: CONJ PRON PART VERB PROPN PUNCT
tagged_tokens: Natomiast_CONJ oni_PRON są_PART pozbawieni_VERB Balcerowiczów_PROPN ._PUNCTD) tokens: Ale oni nie mają Balcerowiczów .
tags: CCONJ PRON PART VERB PROPN PUNCT
tagged_tokens: Ale_CCONJ oni_PRON nie_PART mają_VERB Balcerowiczów_PROPN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Ale postrzeg em go .
tags: CCONJ VERB AUX PRON PUNCT
tagged_tokens: Ale_CCONJ postrzeg_VERB em_AUX go_PRON ._PUNCT

B) tokens: Lecz odczu em go .
tags: CCONJ VERB AUX PRON PUNCT
tagged_tokens: Lecz_CCONJ odczu_VERB em_AUX go_PRON ._PUNCT

C) tokens: Jednak wyczu em go .
tags: CCONJ VERB AUX PRON PUNCT
tagged_tokens: Jednak_CCONJ wyczu_VERB em_AUX go_PRON ._PUNCTD) tokens: Ale poczuł em go .
tags: CCONJ VERB AUX PRON PUNCT
tagged_tokens: Ale_CCONJ poczuł_VERB em_AUX go_PRON ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Lecz polityka momentalnie traciła pobłażliwość i zbiór wierszy nie mogła się pokazać .
tags: CCONJ NOUN ADV VERB PRON ADV ADJ CCONJ NOUN PART VERB PRON VERB PUNCT
tagged_tokens: Lecz_CCONJ polityka_NOUN momentalnie_ADV traciła_VERB pobłażliwość_ADJ i_CCONJ zbiór_NOUN wierszy_PART nie_PART mogła_VERB się_PRON pokazać_VERB ._PUNCT

B) tokens: Jednak polityka szybko stawała się mniej liberalna a antologia nie mogła się ukazać .
tags: CCONJ NOUN ADV VERB PRON ADV ADJ CCONJ NOUN PART VERB PRON VERB PUNCT
tagged_tokens: Jednak_CCONJ polityka_NOUN szybko_ADV stawała_VERB się_PRON mniej_ADV liberalna_ADJ a_CCONJ antologia_NOUN nie_PART mogła_VERB się_PRON ukazać_VERB ._PUNCT

C) tokens: Niemniej polityka szybko stawała się mniej liberalna i antologia nie mogła być wydana .
tags: CCONJ NOUN ADV VERB PRON ADV ADJ CCONJ NOUN PART VERB PRON VERB PUNCT
tagged_tokens: Niemniej_CCONJ polityka_NOUN szybko_ADV stawała_VERB się_PRON mniej_ADV liberalna_ADJ i_CCONJ antologia_NOUN nie_PART mogła_VERB być_VERB wydana_VERB ._PUNCTD) tokens: Ale polityka szybko stawała się mniej liberalna i antologia nie mogła się ukazać .
tags: CCONJ NOUN ADV VERB PRON ADV ADJ CCONJ NOUN PART VERB PRON VERB PUNCT
tagged_tokens: Ale_CCONJ polityka_NOUN szybko_ADV stawała_VERB się_PRON mniej_ADV liberalna_ADJ i_CCONJ antologia_NOUN nie_PART mogła_VERB się_PRON ukazać_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Lecz postanowiła udać się do siostry i familii w Podłozinach i raz jeszcze zażego prosić o pomoc .
tags: CCONJ VERB VERB ADP NOUN CCONJ NOUN ADP PROPN CCONJ PART NUM PART zażego_PART VERB ADP NOUN PUNCT
tagged_tokens: Lecz_CCONJ postanowiła_VERB udać_VERB się_ADP do_ADP siostry_NOUN i_CCONJ familii_NOUN w_ADP Podłozinach_PROPN i_CCONJ raz_NUM jeszcze_PART zażego_PART prosić_VERB o_ADP pomoc_NOUN ._PUNCT

B) tokens: Ale postanowiła wyruszyć do siostry i rodziny w Podłozinach i jeszcze raz poprosić o pomoc .
tags: CCONJ VERB VERB ADP NOUN CCONJ NOUN ADP PROPN CCONJ PART NOUN VERB ADP NOUN PUNCT
tagged_tokens: Ale_CCONJ postanowiła_VERB wyruszyć_VERB do_ADP siostry_NOUN i_CCONJ rodziny_NOUN w_ADP Podłozinach_PROPN i_CCONJ jeszcze_PART raz_NOUN poprosić_VERB o_ADP pomoc_NOUN ._PUNCT

C) tokens: Ale zadecydowała dotrzeć do siostry i rodziny w Podłozinach i ponownie zażego prosić o pomoc .
tags: CCONJ VERB VERB ADP NOUN CCONJ NOUN ADP PROPN CCONJ PART NUM PART zażego_PART VERB ADP NOUN PUNCT
tagged_tokens: Ale_CCONJ zadecydowała_VERB dotrzeć_VERB do_ADP siostry_NOUN i_CCONJ rodziny_NOUN w_ADP Podłozinach_PROPN i_CCONJ ponownie_PART raz_NUM part zażego_PART prosić_VERB o_ADP pomoc_NOUN ._PUNCTD) tokens: Ale postanowiła dotrzeć do siostry i rodziny w Podłozinach i jeszcze raz poprosić o pomoc .
tags: CCONJ VERB VERB ADP NOUN CCONJ NOUN ADP PROPN CCONJ PART NOUN VERB ADP NOUN PUNCT
tagged_tokens: Ale_CCONJ postanowiła_VERB dotrzeć_VERB do_ADP siostry_NOUN i_CCONJ rodziny_NOUN w_ADP Podłozinach_PROPN i_CCONJ jeszcze_PART raz_NOUN poprosić_VERB o_ADP pomoc_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Ale w rzeczy samej przybył .
tags: CCONJ ADV VERB PUNCT
tagged_tokens: Ale_CCONJ w rzeczy samej_ADV przybył_VERB ._PUNCT

B) tokens: Ale potem przybył .
tags: CCONJ ADV VERB PUNCT
tagged_tokens: Ale_CCONJ potem_ADV przybył_VERB ._PUNCT

C) tokens: Ale potem nadszedł .
tags: CCONJ ADV VERB PUNCT
tagged_tokens: Ale_CCONJ potem_ADV nadszedł_VERB ._PUNCTD) tokens: Ale później przyjechał .
tags: CCONJ ADV VERB PUNCT
tagged_tokens: Ale_CCONJ później_ADV przyjechał_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Lecz rodzicielstwa na tę normalność nie stać .
tags: CCONJ NOUN ADP DET NOUN PART VERB PUNCT
tagged_tokens: Lecz_CCONJ rodzicielstwa_NOUN na_ADP tę_DET normalność_NOUN nie_PART stać_VERB ._PUNCT

B) tokens: Aczkolwiek rodziców na tę przeciętność nie stać .
tags: CCONJ NOUN ADP DET NOUN PART VERB PUNCT
tagged_tokens: Aczkolwiek_CCONJ rodziców_NOUN na_ADP tę_DET przeciętność_NOUN nie_PART stać_VERB ._PUNCT

C) tokens: Jednakże opiekunów na tę powszedniość nie stać .
tags: CCONJ NOUN ADP DET NOUN PART VERB PUNCT
tagged_tokens: Jednakże_CCONJ opiekunów_NOUN na_ADP tę_DET powszedniość_NOUN nie_PART stać_VERB ._PUNCTD) tokens: Ale rodziców na tę normalność nie stać .
tags: CCONJ NOUN ADP DET NOUN PART VERB PUNCT
tagged_tokens: Ale_CCONJ rodziców_NOUN na_ADP tę_DET normalność_NOUN nie_PART stać_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Ale gawędzimy o twojej wiarygodności .
tags: CCONJ VERB ADP DET NOUN PUNCT
tagged_tokens: Ale_CCONJ gawędzimy_VERB o_ADP twojej_DET wiarygodności_NOUN ._PUNCT

B) tokens: Lecz rozmawiamy o twoim zaufaniu .
tags: CONJ VERB ADP DET NOUN PUNCT
tagged_tokens: Lecz_CONJ rozmawiamy_VERB o_ADP twoim_DET zaufaniu_NOUN ._PUNCT

C) tokens: Jednak dyskutujemy o twojej wiarygodności .
tags: CONJ VERB ADP DET NOUN PUNCT
tagged_tokens: Jednak_CONJ dyskutujemy_VERB o_ADP twojej_DET wiarygodności_NOUN ._PUNCTD) tokens: Ale rozmawiamy o twojej wiarygodności .
tags: CCONJ VERB ADP DET NOUN PUNCT
tagged_tokens: Ale_CCONJ rozmawiamy_VERB o_ADP twojej_DET wiarygodności_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: – Ale przestań .
tags: PUNCT CCONJ VERB PART PUNCT
tagged_tokens: –_PUNCT Ale_CCONJ przestań_VERB . _PUNCT

B) tokens: – Ale przestań już .
tags: PUNCT CCONJ VERB ADV PART PUNCT
tagged_tokens: –_PUNCT Ale_CCONJ przestań_VERB już_ADV PART_PUNCT

C) tokens: – Ale zakończ już .
tags: PUNCT CCONJ VERB PART PUNCT
tagged_tokens: –_PUNCT Ale_CCONJ zakończ_VERB już_PART ._PUNCTD) tokens: – Ale skończ już .
tags: PUNCT CCONJ VERB PART PUNCT
tagged_tokens: –_PUNCT Ale_CCONJ skończ_VERB już_PART ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: - Ale tak jest tylko przez kilka , trzy miesiące w roku .
tags: PUNCT CCONJ ADV VERB PART ADP NUM PUNCT NUM NOUN ADP NOUN PUNCT
tagged_tokens: -_PUNCT Ale_CCONJ tak_ADV jest_VERB tylko_PART przez_ADP kilka_NUM ,_PUNCT trzy_NUM miesiące_NOUN w_ADP roku_NOUN ._PUNCT

B) tokens: - No tak jest jedynie przez dwa , trzy miesiące w ciągu roku .
tags: PUNCT CCONJ ADV VERB PART ADP NUM PUNCT NUM NOUN ADP NOUN PUNCT
tagged_tokens: -_PUNCT No_CCONJ tak_ADV jest_VERB jedynie_PART przez_ADP dwa_NUM ,_PUNCT trzy_NUM miesiące_NOUN w_ADP ciągu_NOUN roku_NOUN ._PUNCT

C) tokens: - No ależ tak jest zaledwie przez dwa , trzy miesiące w roku .
tags: PUNCT CCONJ ADV VERB PART ADP NUM PUNCT NUM NOUN ADP NOUN PUNCT
tagged_tokens: -_PUNCT No_CCONJ ależ_ADV tak_ADV jest_VERB zaledwie_PART przez_ADP dwa_NUM ,_PUNCT trzy_NUM miesiące_NOUN w_ADP roku_NOUN ._PUNCTD) tokens: - Ale tak jest tylko przez dwa , trzy miesiące w roku .
tags: PUNCT CCONJ ADV VERB PART ADP NUM PUNCT NUM NOUN ADP NOUN PUNCT
tagged_tokens: -_PUNCT Ale_CCONJ tak_ADV jest_VERB tylko_PART przez_ADP dwa_NUM ,_PUNCT trzy_NUM miesiące_NOUN w_ADP roku_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: -Ł Ale tam stoi paw!
tags: PUNCT CCONJ ADV VAUX NOUN PUNCT
tagged_tokens: -Ł_PUNCT Ale_CCONJ tam_ADV stoi_VAUX paw_NOUN !Ł_PUNCT

B) tokens: -Ł Lecz tam jest pies!
tags: PUNCT CCONJ ADV AUX NOUN PUNCT
tagged_tokens: -Ł_PUNCT Lecz_CCONJ tam_ADV jest_AUX pies_NOUN !Ł_PUNCT

C) tokens: -Ł Ale tam jest szczeniak!
tags: PUNCT CCONJ ADV AUX NOUN PUNCT
tagged_tokens: -Ł_PUNCT Ale_CCONJ tam_ADV jest_AUX szczeniak_NOUN !Ł_PUNCTD) tokens: – Ale tam jest paw !
tags: PUNCT CCONJ ADV AUX NOUN PUNCT
tagged_tokens: –_PUNCT Ale_CCONJ tam_ADV jest_AUX paw_NOUN !_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: – Ale tam jest za wielkie łóżko !
tags: PUNCT CCONJ ADV AUX PART ADJ NOUN PUNCT
tagged_tokens: –_PUNCT Ale_CCONJ tam_ADV jest_AUX za_PART wielkie_ADJ łóżko_NOUN !_PUNCT

B) tokens: – Ale tam jest za spore łóżko !
tags: PUNCT CCONJ ADV AUX PART ADJ NOUN PUNCT
tagged_tokens: –_PUNCT Ale_CCONJ tam_ADV jest_AUX za_PART spore_ADJ łóżko_NOUN !_PUNCT

C) tokens: – Ale tam jest za obszerne łóżko !
tags: PUNCT CCONJ ADV AUX PART ADJ NOUN PUNCT
tagged_tokens: –_PUNCT Ale_CCONJ tam_ADV jest_AUX za_PART obszerne_ADJ łóżko_NOUN !_PUNCTD) tokens: – Ale tam jest za duże łóżko !
tags: PUNCT CCONJ ADV AUX PART ADJ NOUN PUNCT
tagged_tokens: –_PUNCT Ale_CCONJ tam_ADV jest_AUX za_PART duże_ADJ łóżko_NOUN !_PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Jednak to nie moja wina .
tags: CCONJ VERB PART DET NOUN PUNCT
tagged_tokens: Jednak_CCONJ to_VERB nie_PART moja_DET wina_NOUN ._PUNCT

B) tokens: Lecz to nie moja wina .
tags: CCONJ VERB PART DET NOUN PUNCT
tagged_tokens: Lecz_CCONJ to_VERB nie_PART moja_DET wina_NOUN ._PUNCT

C) tokens: Ale to nie moja wina .
tags: CCONJ VERB PART DET NOUN PUNCT
tagged_tokens: Ale_CCONJ to_VERB nie_PART moja_DET wina_NOUN ._PUNCTD) tokens: Ale to nie moja wina .
tags: CCONJ VERB PART DET NOUN PUNCT
tagged_tokens: Ale_CCONJ to_VERB nie_PART moja_DET wina_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Ale w Opolskim , Wrocławskim i Wielkopolskim pewne gospodarstwa są już na mecie .
tags: CCONJ ADP PROPN PUNCT PROPN CCONJ PROPN DET NOUN VERB PART PART ADP NOUN PUNCT
tagged_tokens: Ale_CCONJ w_ADP Opolskiem_PROPN ,_PUNCT Wrocławskiem_PROPN i_CCONJ Wielkopolskim_PROPN pewne_DET gospodarstwa_NOUN są_VERB już_PART na_ADP mecie_NOUN ._PUNCT

B) tokens: Lecz w Opolskiem , Dolnośląskim i Pomorskiem pewne gospodarstwa są już w finale .
tags: CCONJ ADP PROPN PUNCT PROPN CCONJ PROPN DET NOUN VERB PART PART ADP NOUN PUNCT
tagged_tokens: Lecz_CCONJ w_ADP Opolskiem_PROPN ,_PUNCT Dolnośląskim_PROPN i_CCONJ Pomorskiem_PROPN pewne_DET gospodarstwa_NOUN są_VERB już_PART w_ADP finale_NOUN ._PUNCT

C) tokens: A w Opolskim , Wrocławskim i Wielkopolskim niektóre gospodarstwa są już u kresu .
tags: CCONJ ADP PROPN PUNCT PROPN CCONJ PROPN DET NOUN VERB PART PART ADP NOUN PUNCT
tagged_tokens: A_CCONJ w_ADP Opolskim_PROPN ,_PUNCT Wrocławskim_PROPN i_CCONJ Wielkopolskim_PROPN niektóre_DET gospodarstwa_NOUN są_VERB już_PART u_ADP kresu_NOUN ._PUNCTD) tokens: Ale w Opolskiem , Wrocławskiem i Poznańskiem niektóre gospodarstwa są już nawet na finiszu .
tags: CCONJ ADP PROPN PUNCT PROPN CCONJ PROPN DET NOUN VERB PART PART ADP NOUN PUNCT
tagged_tokens: Ale_CCONJ w_ADP Opolskiem_PROPN ,_PUNCT Wrocławskiem_PROPN i_CCONJ Poznańskiem_PROPN niektóre_DET gospodarstwa_NOUN są_VERB już_PART nawet_PART na_ADP finiszu_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Lecz w licznych przypadkach o wiele groźniej przedstawiają się wydatki dodatkowe .
tags: CCONJ ADP DET NOUN ADV ADV VERB NOUN ADJ PUNCT
tagged_tokens: Lecz_CCONJ w_ADP licznych_DET przypadkach_NOUN o_ADP wiele_ADV groźniej_ADV przedstawiają_VERB się_NOUN wydatki_NOUN dodatkowe_ADJ ._PUNCT

B) tokens: Jednak w wielu wypadkach niepomiernie groźniej wyglądają wydatki dodatkowe .
tags: CONJ ADP DET NOUN ADV ADV VERB NOUN ADJ PUNCT
tagged_tokens: Jednak_CONJ w_ADP wielu_DET wypadkach_NOUN niepomiernie_ADV groźniej_ADV wyglądają_VERB wydatki_NOUN dodatkowe_ADJ ._PUNCT

C) tokens: A w wielu instancjach nadzwyczaj groźnie wyglądają koszty dodatkowe .
tags: CCONJ ADP DET NOUN ADV ADV VERB NOUN ADJ PUNCT
tagged_tokens: A_CCONJ w_ADP wielu_DET instancjach_NOUN nadzwyczaj_ADV groźnie_ADV wyglądają_VERB koszty_NOUN dodatkowe_ADJ ._PUNCTD) tokens: Ale w wielu przypadkach znacznie groźniej wyglądają koszty dodatkowe .
tags: CCONJ ADP DET NOUN ADV ADV VERB NOUN ADJ PUNCT
tagged_tokens: Ale_CCONJ w_ADP wielu_DET przypadkach_NOUN znacznie_ADV groźniej_ADV wyglądają_VERB koszty_NOUN dodatkowe_ADJ ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: - Ale sporo opiera się również od ich aktywności .
tags: PUNCT CCONJ DET OPART VERB PART ADP PRON NOUN PUNCT
tagged_tokens: -_PUNCT Ale_CCONJ sporo_DET opiera_VERB się_PART również_ADP od_ADP ich_PRON aktywności_NOUN ._PUNCT

B) tokens: - Ale sporo zależy też od ich zaangażowania .
tags: PUNCT CCONJ DET VERB PART ADP PRON NOUN PUNCT
tagged_tokens: -_PUNCT Ale_CCONJ sporo_DET zależy_VERB też_PART od_ADP ich_PRON zaangażowania_NOUN ._PUNCT

C) tokens: - Ale wiele polega również od ich aktywności .
tags: PUNCT CCONJ DET VERB PART ADP PRON NOUN PUNCT
tagged_tokens: -_PUNCT Ale_CCONJ wiele_DET polega_VERB również_PART od_ADP ich_PRON aktywności_NOUN ._PUNCTD) tokens: - Ale wiele zależy też od ich aktywności .
tags: PUNCT CCONJ DET VERB PART ADP PRON NOUN PUNCT
tagged_tokens: -_PUNCT Ale_CCONJ wiele_DET zależy_VERB też_PART od_ADP ich_PRON aktywności_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Lecz wiem , że mnie tam czeka powróz . . .
tags: CCONJ VERB PUNCT SCONJ PRON ADV VERB NOUN PUNCT PUNCT PUNCT
tagged_tokens: Lecz_CCONJ wiem_VERB ,_PUNCT że_SCONJ mnie_PRON tam_ADV czeka_VERB powróz_NOUN ._PUNCT ._PUNCT ._PUNCT

B) tokens: Jednak wiem , że mnie tam czeka oczekiwanie . . .
tags: CCONJ VERB PUNCT SCONJ PRON ADV VERB NOUN PUNCT PUNCT PUNCT
tagged_tokens: Jednak_CCONJ wiem_VERB ,_PUNCT że_SCONJ mnie_PRON tam_ADV czeka_VERB oczekiwanie_NOUN ._PUNCT ._PUNCT ._PUNCT

C) tokens: Mimo to wiem , że mnie tam czeka wyczekiwanie . . .
tags: CCONJ VERB PUNCT SCONJ PRON ADV VERB NOUN PUNCT PUNCT PUNCT
tagged_tokens: Mimo_CCONJ to_PRON wiem_VERB ,_PUNCT że_SCONJ mnie_PRON tam_ADV czeka_VERB wyczekiwanie_NOUN ._PUNCT ._PUNCT ._PUNCTD) tokens: Ale wiem , że mnie tam czekają więzy . . .
tags: CCONJ VERB PUNCT SCONJ PRON ADV VERB NOUN PUNCT PUNCT PUNCT
tagged_tokens: Ale_CCONJ wiem_VERB ,_PUNCT że_SCONJ mnie_PRON tam_ADV czekają_VERB więzy_NOUN ._PUNCT ._PUNCT ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Ale wiewińrka , piorąc bieliznę , wydobywała damę i nastąpił dobry koniec .
tags: Ale_CCONJ wiewińrka_NOUN ,_PUNCT piorąc_VERB bieliznę_NOUN ,_PUNCT wydobywała_VERB damę_NOUN i_CCONJ nastąpił_VERB dobry_ADJ koniec_NOUN ._PUNCT
tagged_tokens: Ale_CCONJ wiewińrka_NOUN ,_PUNCT piorąc_VERB bieliznę_NOUN ,_PUNCT wydobywała_VERB damę_NOUN i_CCONJ nastąpił_VERB dobry_ADJ koniec_NOUN ._PUNCT

B) tokens: Jednak wiewińrka , czyszcąc pranie , ratowała damy i nastąpił pozytywny finał .
tags: Jednak_CCONJ wiewińrka_NOUN ,_PUNCT czyszcąc_VERB pranie_NOUN ,_PUNCT ratowała_VERB damy_NOUN i_CCONJ nastąpił_VERB pozytywny_ADJ finał_NOUN ._PUNCT
tagged_tokens: Jednak_CCONJ wiewińrka_NOUN ,_PUNCT czyszcąc_VERB pranie_NOUN ,_PUNCT ratowała_VERB damy_NOUN i_CCONJ nastąpił_VERB pozytywny_ADJ finał_NOUN ._PUNCT

C) tokens: Wiewińrka wszakże , piorąc bieliznę , wydobyła damę i nastał optymistyczny finał .
tags: Wiewińrka_NOUN wszakże_PART ,_PUNCT piorąc_VERB bieliznę_NOUN ,_PUNCT wydobyła_VERB damę_NOUN i_CCONJ nastał_VERB optymistyczny_ADJ finał_NOUN ._PUNCT
tagged_tokens: Wiewińrka_NOUN wszakże_PART ,_PUNCT piorąc_VERB bieliznę_NOUN ,_PUNCT wydobyła_VERB damę_NOUN i_CCONJ nastał_VERB optymistyczny_ADJ finał_NOUN ._PUNCTD) tokens: Ale wiewiórka , piorąc bieliznę , wyławiała lady i następował szczęśliwy koniec .
tags: CCONJ NOUN PUNCT VERB NOUN PUNCT VERB NOUN CCONJ VERB ADJ NOUN PUNCT
tagged_tokens: Ale_CCONJ wiewiórka_NOUN ,_PUNCT piorąc_VERB bieliznę_NOUN ,_PUNCT wyławiała_VERB lady_NOUN i_CCONJ następował_VERB szczęśliwy_ADJ koniec_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Lecz wszyscy zostali desygnowani i pracują w Sejmie .
tags: CCONJ PRON AUX ADJ CCONJ VERB ADP NOUN PUNCT
tagged_tokens: Lecz_CCONJ wszyscy_PRON zostali_AUX desygnowani_ADJ i_CCONJ pracują_VERB w_ADP Sejmie_NOUN ._PUNCT

B) tokens: Jednak wszyscy zostali wybrani i zasiadają w Sejmie .
tags: CONJ PRON AUX ADJ CCONJ VERB ADP NOUN PUNCT
tagged_tokens: Jednak_CONJ wszyscy_PRON zostali_AUX wybrani_ADJ i_CCONJ zasiadają_VERB w_ADP Sejmie_NOUN ._PUNCT

C) tokens: Lecz wszyscy zostali wytypowani i pracują w Sejmie .
tags: CCONJ PRON AUX ADJ CCONJ VERB ADP NOUN PUNCT
tagged_tokens: Lecz_CCONJ wszyscy_PRON zostali_AUX wytypowani_ADJ i_CCONJ pracują_VERB w_ADP Sejmie_NOUN ._PUNCTD) tokens: Ale wszyscy zostali wybrani i zasiadają w Sejmie .
tags: CCONJ PRON AUX ADJ CCONJ VERB ADP NOUN PUNCT
tagged_tokens: Ale_CCONJ wszyscy_PRON zostali_AUX wybrani_ADJ i_CCONJ zasiadają_VERB w_ADP Sejmie_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Lecz wtedy oznajmiałem po prostu , że będzie gorzej .
tags: CCONJ ADV VERB AUX ADP ADJ PUNCT SCONJ VERB ADV PUNCT
tagged_tokens: Lecz_CCONJ wtedy_ADV oznajmiałem_VERB po_ADP prostu_ADJ ,_PUNCT że_SCONJ będzie_VERB gorzej_ADV ._PUNCT

B) tokens: Ale wówczas mówiłem po prostu , że sprawy pogorszą się .
tags: CCONJ ADV VERB AUX ADP ADJ PUNCT SCONJ VERB ADV PUNCT
tagged_tokens: Ale_CCONJ wówczas_ADV mówiłem_VERB po_ADP prostu_ADJ ,_PUNCT że_SCONJ sprawy_NOUN pogorszą_VERB się_PRON ._PUNCT

C) tokens: Aczkolwiek wówczas twierdziłem po prostu , że będzie jeszcze gorzej .
tags: CCONJ ADV VERB AUX ADP ADJ PUNCT SCONJ VERB ADV PUNCT
tagged_tokens: Aczkolwiek_CCONJ wówczas_ADV twierdziłem_VERB po_ADP prostu_ADJ ,_PUNCT że_SCONJ będzie_VERB jeszcze_ADV gorzej_ADV ._PUNCTD) tokens: Ale wtedy mówił em po prostu , że będzie gorzej .
tags: CCONJ ADV VERB AUX ADP ADJ PUNCT SCONJ VERB ADV PUNCT
tagged_tokens: Ale_CCONJ wtedy_ADV mówił_VERB em_AUX po_ADP prostu_ADJ ,_PUNCT że_SCONJ będzie_VERB gorzej_ADV ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Ale wówczas wkroczyły już wyższe czynniki .
tags: CCONJ ADV VERB PART ADJ NOUN PUNCT
tagged_tokens: Ale_CCONJ wówczas_ADV wkroczyły_VERB już_PART wyższe_ADJ czynniki_NOUN ._PUNCT

B) tokens: Jednak wówczas wtrąciły już wyższe sfery .
tags: CONJ ADV VERB PART ADJ NOUN PUNCT
tagged_tokens: Jednak_CONJ wówczas_ADV wtrąciły_VERB już_PART wyższe_ADJ sfery_NOUN ._PUNCT

C) tokens: Lecz natychmiast przystąpiły do akcji potężniejsze żołnierze .
tags: CONJ ADV VERB PART ADJ NOUN PUNCT
tagged_tokens: Lecz_CONJ natychmiast_ADV przystąpiły_VERB do_PART akcji_NOUN potężniejsze_ADJ żołnierze_NOUN ._PUNCTD) tokens: Ale wówczas wkroczyły już wyższe władze .
tags: CCONJ ADV VERB PART ADJ NOUN PUNCT
tagged_tokens: Ale_CCONJ wówczas_ADV wkroczyły_VERB już_PART wyższe_ADJ władze_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: - Lecz wątpię , czyby się przestraszył .
tags: CONJ VERB CCONJ PRON VERB PUNCT
tagged_tokens: -_CONJ Lecz_VERB wątpię_CCONJ czyby_PRON się_VERB przestraszył_PUNCT .

B) tokens: - Ale wątpię , żeby się przeraził .
tags: CONJ VERB CCONJ PRON VERB PUNCT
tagged_tokens: -_CONJ Ale_VERB wątpię_CCONJ żeby_PRON się_VERB przeraził_PUNCT .

C) tokens: - Jednakże wątpię , żeby się ulękł .
tags: CONJ VERB CCONJ PRON VERB PUNCT
tagged_tokens: -_CONJ Jednakże_VERB wątpię_CCONJ żeby_PRON się_VERB ulękł_PUNCT .D) tokens: - Ale wątpię , by się zląkł .
tags: PUNCT CCONJ VERB PUNCT SCONJ PRON VERB PUNCT
tagged_tokens: -_PUNCT Ale_CCONJ wątpię_VERB ,_PUNCT by_SCONJ się_PRON zląkł_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Alfons Piotrowski ponięsł zgon nie odzyskawszy przytomności .
tags: PROPN PROPN VERB NOUN PART VERB NOUN PUNCT
tagged_tokens: Alfons_PROPN Piotrowski_PROPN ponięsł_VERB zgon_NOUN nie_PART odzyskawszy_VERB przytomności_NOUN ._PUNCT

B) tokens: Alfons Piotrowski zakończył życie nie odzyskując świadomości .
tags: PROPN PROPN VERB NOUN PART VERB NOUN PUNCT
tagged_tokens: Alfons_PROPN Piotrowski_PROPN zakończył_VERB życie_NOUN nie_PART odzyskując_VERB świadomości_NOUN ._PUNCT

C) tokens: Alfons Piotrowski umarł nie odzyskawszy świadomości .
tags: PROPN PROPN VERB NOUN PART VERB NOUN PUNCT
tagged_tokens: Alfons_PROPN Piotrowski_PROPN umarł_VERB nie_PART odzyskawszy_VERB świadomości_NOUN ._PUNCTD) tokens: Alfons Piotrowski poniósł śmierć nie odzyskawszy przytomności .
tags: PROPN PROPN VERB NOUN PART VERB NOUN PUNCT
tagged_tokens: Alfons_PROPN Piotrowski_PROPN poniósł_VERB śmierć_NOUN nie_PART odzyskawszy_VERB przytomności_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Algierczyk Noureddine Morceli znalazł się tylko na 12 . pozycji .
tags: PROPN PROPN PROPN VERB PRON PART ADP ADJ PUNCT NOUN PUNCT
tagged_tokens: Algierczyk_PROPN Noureddine_PROPN Morceli_PROPN znalazł_VERB się_PRON tylko_PART na_ADP 12_ADJ ._PUNCT pozycji_NOUN ._PUNCT

B) tokens: Algierczyk Noureddine Morceli uzyskał jedynie 12 . miejsce .
tags: PROPN PROPN PROPN VERB ADV NUM PUNCT NOUN PUNCT
tagged_tokens: Algierczyk_PROPN Noureddine_PROPN Morceli_PROPN uzyskał_VERB jedynie_ADV 12_NUM ._PUNCT miejsce_NOUN ._PUNCT

C) tokens: Noureddine Morceli z Algierii zajął ledwie 12 . pozycję .
tags: PROPN PROPN ADP PROPN VERB ADV NUM PUNCT NOUN PUNCT
tagged_tokens: Noureddine_PROPN Morceli_PROPN z_ADP Algierii_PROPN zajął_VERB ledwie_ADV 12_NUM ._PUNCT pozycję_NOUN ._PUNCTD) tokens: Algierczyk Noureddine Morceli uplasował się dopiero na 12 . pozycji .
tags: PROPN PROPN PROPN VERB PRON PART ADP ADJ PUNCT NOUN PUNCT
tagged_tokens: Algierczyk_PROPN Noureddine_PROPN Morceli_PROPN uplasował_VERB się_PRON dopiero_PART na_ADP 12_ADJ ._PUNCT pozycji_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Ambrożego nawet zamurowali .
tags: PROPN PART VERB PUNCT
tagged_tokens: Ambrożego_PROPN nawet_PART zamurowali_VERB ._PUNCT

B) tokens: Zamknęli Ambrożego nawet .
tags: VERB PROPN PART PUNCT
tagged_tokens: Zamknęli_VERB Ambrożego_PROPN nawet_PART ._PUNCT

C) tokens: Zamknęli Ambrożego nawet na klucz .
tags: VERB PROPN PART ADJ PUNCT
tagged_tokens: Zamknęli_VERB Ambrożego_PROPN nawet_PART na_ADJ klucz_NOUN ._PUNCTD) tokens: Ambrożego nawet zamknęli .
tags: PROPN PART VERB PUNCT
tagged_tokens: Ambrożego_PROPN nawet_PART zamknęli_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Andrzej z szacunkiem pocałował ją w dłoń .
tags: PROPN ADP NOUN VERB PRON ADP NOUN PUNCT
tagged_tokens: Andrzej_PROPN z_ADP szacunkiem_NOUN pocałował_VERB ją_PRON w_ADP dłoń_NOUN ._PUNCT

B) tokens: Andrzej z rewerencją ucałował jej dłoń .
tags: PROPN ADP NOUN VERB PRON ADP NOUN PUNCT
tagged_tokens: Andrzej_PROPN z_ADP rewerencją_NOUN ucałował_VERB jej_PRON dłoń_NOUN ._PUNCT

C) tokens: Andrzej z uniżonością ucałował jej rękę .
tags: PROPN ADP NOUN VERB PRON ADP NOUN PUNCT
tagged_tokens: Andrzej_PROPN z_ADP uniżonością_NOUN ucałował_VERB jej_PRON rękę_NOUN ._PUNCTD) tokens: Andrew z szacunkiem pocałował ją w rękę .
tags: PROPN ADP NOUN VERB PRON ADP NOUN PUNCT
tagged_tokens: Andrew_PROPN z_ADP szacunkiem_NOUN pocałował_VERB ją_PRON w_ADP rękę_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Broń artyleryjska rosyjska również zamilkła.
tags: NOUN ADJ PART VERB PUNCT
tagged_tokens: Bro%C5%84_NOUN artyleryjska_ADJ rosyjska_ADJ również_PART zamilkła_VERB ._PUNCT

B) tokens: Działa rosyjskie również nie strzelały.
tags: NOUN ADJ PART VERB PUNCT
tagged_tokens: Dzia%C5%82a_NOUN rosyjskie_ADJ również_PART nie_PART strzela%C5%82y_VERB ._PUNCT

C) tokens: Armaty rosyjskie także ucichły.
tags: NOUN ADJ PART VERB PUNCT
tagged_tokens: Armaty_NOUN rosyjskie_ADJ także_PART ucich%C5%82y_VERB ._PUNCTD) tokens: Artyleria rosyjska także zamilkła .
tags: NOUN ADJ PART VERB PUNCT
tagged_tokens: Artyleria_NOUN rosyjska_ADJ także_PART zamilkła_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Aż nastał taki czas , że się wszystko skończyło .
tags: SCONJ VERB DET NOUN PUNCT SCONJ PRON PRON VERB PUNCT
tagged_tokens: Aż_SCONJ nastał_VERB taki_DET czas_NOUN ,_PUNCT że_SCONJ się_PRON wszystko_PRON skończyło_VERB ._PUNCT

B) tokens: Kiedy nadszedł czas , że się wszystko urwało .
tags: SCONJ VERB NOUN PUNCT SCONJ PRON PRON VERB PUNCT
tagged_tokens: Kiedy_SCONJ nadszedł_VERB czas_NOUN ,_PUNCT że_SCONJ się_PRON wszystko_PRON urwało_VERB ._PUNCT

C) tokens: W końcu nadszedł czas , że się wszystko zakończyło .
tags: SCONJ VERB NOUN PUNCT SCONJ PRON PRON VERB PUNCT
tagged_tokens: W końcu_SCONJ nadszedł_VERB czas_NOUN ,_PUNCT że_SCONJ się_PRON wszystko_PRON zakończyło_VERB ._PUNCTD) tokens: Aż nastał taki czas , że się wszystko urwało .
tags: SCONJ VERB DET NOUN PUNCT SCONJ PRON PRON VERB PUNCT
tagged_tokens: Aż_SCONJ nastał_VERB taki_DET czas_NOUN ,_PUNCT że_SCONJ się_PRON wszystko_PRON urwało_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Zbóje weszli do domu po wyważeni drzwi .
tags: NOUN VERB ADP NOUN ADP NOUN NOUN PUNCT
tagged_tokens: Zbóje_NOUN weszli_VERB do_ADP domu_NOUN po_ADP wyważeniu_NOUN drzwi_NOUN ._PUNCT

B) tokens: Rabusiowie wtargnęli do domu po wyjęciu drzwi .
tags: NOUN VERB ADP NOUN ADP NOUN NOUN PUNCT
tagged_tokens: Rabusiowie_NOUN wtargnęli_VERB do_ADP domu_NOUN po_ADP wyjęciu_NOUN drzwi_NOUN ._PUNCT

C) tokens: Chuligani wdarli się do domu po wyrwaniu drzwi .
tags: NOUN VERB ADP NOUN ADP NOUN NOUN PUNCT
tagged_tokens: Chuligani_NOUN wdarli_VERB się_ADP do_ADP domu_NOUN po_ADP wyrwaniu_NOUN drzwi_NOUN ._PUNCTD) tokens: Bandyci weszli do domu po wyłamaniu drzwi .
tags: NOUN VERB ADP NOUN ADP NOUN NOUN PUNCT
tagged_tokens: Bandyci_NOUN weszli_VERB do_ADP domu_NOUN po_ADP wyłamaniu_NOUN drzwi_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Barbara wręcza Milanowi puchar .
tags: PROPN VERB PROPN NOUN PUNCT
tagged_tokens: Barbara_PROPN wręcza_VERB Milanowi_PROPN puchar_NOUN ._PUNCT

B) tokens: Barbara wręcza Milanowi karafkę .
tags: PROPN VERB PROPN NOUN PUNCT
tagged_tokens: Barbara_PROPN wręcza_VERB Milanowi_PROPN karafkę_NOUN ._PUNCT

C) tokens: Barbara wręcza Milanowi czarkę .
tags: PROPN VERB PROPN NOUN PUNCT
tagged_tokens: Barbara_PROPN wręcza_VERB Milanowi_PROPN czarkę_NOUN ._PUNCTD) tokens: Barbara wręcza Milanowi szklankę .
tags: PROPN VERB PROPN NOUN PUNCT
tagged_tokens: Barbara_PROPN wręcza_VERB Milanowi_PROPN szklankę_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Strasznie chciałby pogadać z nim .
tags: ADV VERB AUX AUX ADP PRON VERB PUNCT
tagged_tokens: Strasznie_ADV chciałby_VERB pogadać_AUX z_ADP nim_PRON ._PUNCT

B) tokens: Bardzo pragnął porozmawiać z nim .
tags: ADV VERB AUX AUX ADP PRON VERB PUNCT
tagged_tokens: Bardzo_ADV pragnął_VERB porozmawiać_AUX z_ADP nim_PRON ._PUNCT

C) tokens: Naprawdę chciałby z nim porozmawiać .
tags: PART VERB AUX AUX ADP PRON VERB PUNCT
tagged_tokens: Naprawdę_PART chciałby_VERB z_ADP nim_PRON porozmawiać_VERB ._PUNCTD) tokens: Bardzo chciał by m z nim pogadać .
tags: ADV VERB AUX AUX ADP PRON VERB PUNCT
tagged_tokens: Bardzo_ADV chciał_VERB by_AUX m_AUX z_ADP nim_PRON pogadać_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Bardzo odległy jest ten świat za szybą .
tags: ADV ADJ AUX DET NOUN ADP NOUN PUNCT
tagged_tokens: Bardzo_ADV odległy_ADJ jest_AUX ten_DET świat_NOUN za_ADP szybą_NOUN ._PUNCT

B) tokens: Nadzwyczajnie daleki jest ten świat za szybą .
tags: ADV ADJ AUX DET NOUN ADP NOUN PUNCT
tagged_tokens: Nadzwyczajnie_ADV daleki_ADJ jest_AUX ten_DET świat_NOUN za_ADP szybą_NOUN ._PUNCT

C) tokens: Stosunkowo daleki jest ten świat za oknem .
tags: ADV ADJ AUX DET NOUN ADP NOUN PUNCT
tagged_tokens: Stosunkowo_ADV daleki_ADJ jest_AUX ten_DET świat_NOUN za_ADP oknem_NOUN ._PUNCTD) tokens: Bardzo daleki jest ten świat za oknem .
tags: ADV ADJ AUX DET NOUN ADP NOUN PUNCT
tagged_tokens: Bardzo_ADV daleki_ADJ jest_AUX ten_DET świat_NOUN za_ADP oknem_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: - Bardzo uprzejmie proszę o oddanie głosu .
tags: PUNCT ADV VERB ADP NOUN PUNCT
tagged_tokens: -_PUNCT Bardzo_ADV uprzejmie_VERB proszę_VERB o_ADP oddanie_NOUN głosu_NOUN ._PUNCT

B) tokens: - Błagam uniżenie o zagłosowanie .
tags: VERB NOUN PUNCT
tagged_tokens: -_VERB Błagam_VERB uniżenie_NOUN o_ADP zagłosowanie_NOUN ._PUNCT

C) tokens: - Proszę o wparcie .
tags: VERB NOUN PUNCT
tagged_tokens: -_VERB Proszę_VERB o_ADP wparcie_NOUN ._PUNCTD) tokens: - Bardzo proszę o głos .
tags: PUNCT ADV VERB ADP NOUN PUNCT
tagged_tokens: -_PUNCT Bardzo_ADV proszę_VERB o_ADP głos_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Proszę bardzo , Dostojny Senatorze .
tags: ADV VERB PUNCT NOUN NOUN PUNCT
tagged_tokens: Proszę_ADV bardzo_VERB ,_PUNCT Dostojny_NOUN Senatorze_NOUN ._PUNCT

B) tokens: Byłbym proszony , Panie Senatorze .
tags: AUX VERB PUNCT NOUN NOUN PUNCT
tagged_tokens: Byłbym_AUX proszony_VERB ,_PUNCT Panie_NOUN Senatorze_NOUN ._PUNCT

C) tokens: Zostałam poproszony , Panie Senatorze .
tags: AUX VERB PUNCT NOUN NOUN PUNCT
tagged_tokens: Zostałam_AUX poproszony_VERB ,_PUNCT Panie_NOUN Senatorze_NOUN ._PUNCTD) tokens: Bardzo proszę , Panie Senatorze .
tags: ADV VERB PUNCT NOUN NOUN PUNCT
tagged_tokens: Bardzo_ADV proszę_VERB ,_PUNCT Panie_NOUN Senatorze_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: - Proszę uprzejmie .
tags: PUNCT ADV VERB PUNCT
tagged_tokens: -_PUNCT Proszę_ADV uprzejmie_VERB ._PUNCT

B) tokens: - uprzejmie Proszę .
tags: ADV VERB PUNCT PUNCT
tagged_tokens: -_ADV Proszę_VERB ._PUNCT PUNCT

C) tokens: - Proszę .
tags: VERB PUNCT
tagged_tokens: -_VERB ._PUNCTD) tokens: - Bardzo proszę .
tags: PUNCT ADV VERB PUNCT
tagged_tokens: -_PUNCT Bardzo_ADV proszę_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Proszę uprzejmie .
tags: ADV VERB PUNCT
tagged_tokens: Proszę_ADV uprzejmie_VERB ._PUNCT

B) tokens: Zwracam się uprzejmie .
tags: VERB PRON ADV PUNCT
tagged_tokens: Zwracam_VERB się_PRON uprzejmie_ADV ._PUNCT

C) tokens: Ładnie proszę .
tags: ADV VERB PUNCT
tagged_tokens: Ładnie_ADV proszę_VERB ._PUNCTD) tokens: Bardzo proszę .
tags: ADV VERB PUNCT
tagged_tokens: Bardzo_ADV proszę_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Bardzo się wzruszyła kobieta .
tags: ADV PRON VERB FEM PUNCT
tagged_tokens: Bardzo_ADV się_PRON wzruszyła_VERB kobieta_FEM ._PUNCT

B) tokens: Pani bardzo się wzruszyła .
tags: TITLE ADV PRON VERB PUNCT
tagged_tokens: Pani_TITLE Bardzo_ADV się_PRON wzruszyła_VERB ._PUNCT

C) tokens: Była wzruszona do łez .
tags: VERB ADP PUNCT
tagged_tokens: Była_VERB wzruszona_ADP łez_PUNCTD) tokens: Bardzo się wzruszyła m .
tags: ADV PRON VERB AUX PUNCT
tagged_tokens: Bardzo_ADV się_PRON wzruszyła_VERB m_AUX ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Strasznie się z Justynką kłócił .
tags: ADV PRON ADP PROPN VERB PUNCT
tagged_tokens: Strasznie_ADV się_PRON z_ADP Justynką_PROPN kłócił_VERB ._PUNCT

B) tokens: Bardzo się z Justynką sprzeczał .
tags: ADV PRON ADP PROPN VERB PUNCT
tagged_tokens: Bardzo_ADV się_PRON z_ADP Justynką_PROPN sprzeczał_VERB ._PUNCT

C) tokens: Okropnie się z Justynką swarzył .
tags: ADV PRON ADP PROPN VERB PUNCT
tagged_tokens: Okropnie_ADV się_PRON z_ADP Justynką_PROPN swarzył_VERB ._PUNCTD) tokens: Bardzo się z Justynką waśnił .
tags: ADV PRON ADP PROPN VERB PUNCT
tagged_tokens: Bardzo_ADV się_PRON z_ADP Justynką_PROPN waśnił_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Bateria została wmurowana w murze , a radio zainstalowano w suficie w skrupulatnie ukrytym zagłębieniu .
tags: NOUN AUX ADJ ADP NOUN PUNCT CCONJ NOUN VERB ADP NOUN ADJ ADP ADV ADJ NOUN PUNCT
tagged_tokens: Bateria_NOUN została_AUX wmurowana_ADJ w_ADP murze_NOUN ,_PUNCT a_CCONJ radio_NOUN zainstalowano_VERB w_ADP suficie_NOUN ADJ_ADJ w_ADP skrupulatnie_ADV ukrytym_ADJ zagłębieniu_NOUN ._PUNCT

B) tokens: Bateria została zabudowana w murze , a radio ulokowano w stropie w troskliwie zamaskowanej wnęce .
tags: NOUN AUX ADJ ADP NOUN PUNCT CCONJ NOUN VERB ADP NOUN ADJ ADP ADV ADJ NOUN PUNCT
tagged_tokens: Bateria_NOUN została_AUX zabudowana_ADJ w_ADP murze_NOUN ,_PUNCT a_CCONJ radio_NOUN ulokowano_VERB w_ADP stropie_NOUN ADJ_ADJ w_ADP troskliwie_ADV zamaskowanej_ADJ wnęce_NOUN ._PUNCT

C) tokens: Akumulator został zamontowany w murze , a odbiornik umieszczono w suficie w pieczołowicie ukrytym wgłębieniu .
tags: NOUN AUX ADJ ADP NOUN PUNCT CCONJ NOUN VERB ADP NOUN ADJ ADP ADV ADJ NOUN PUNCT
tagged_tokens: Akumulator_NOUN został_AUX zamontowany_ADJ w_ADP murze_NOUN ,_PUNCT a_CCONJ odbiornik_NOUN umieszczono_VERB w_ADP suficie_NOUN ADJ_ADJ w_ADP pieczołowicie_ADV ukrytym_ADJ wgłębieniu_NOUN ._PUNCTD) tokens: Bateria została zamurowana w ścianie , a radio umieszczono w belce stropowej w starannie zamaskowanym wgłębieniu .
tags: NOUN AUX ADJ ADP NOUN PUNCT CCONJ NOUN VERB ADP NOUN ADJ ADP ADV ADJ NOUN PUNCT
tagged_tokens: Bateria_NOUN została_AUX zamurowana_ADJ w_ADP ścianie_NOUN ,_PUNCT a_CCONJ radio_NOUN umieszczono_VERB w_ADP belce_NOUN stropowej_ADJ w_ADP starannie_ADV zamaskowanym_ADJ wgłębieniu_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Batyra musiał siłą odrywać od noszy , a Helka , wręcz przeciwnie , nawet nie podeszła do ojca .
tags: PROPN VERB PRON NOUN VERB ADP NOUN PUNCT CCONJ PROPN PUNCT ADV PUNCT PART PART VERB ADP NOUN PUNCT
tagged_tokens: Batyra_PROPN musiał_VERB siłą_PRON odrywać_VERB od_ADP noszy_NOUN ,_PUNCT a_CCONJ Helka_PROPN ,_PUNCT wręcz_ADV przeciwnie_PART ,_PUNCT nawet_PART nie_PART podeszła_VERB do_ADP ojca_NOUN ._PUNCT

B) tokens: Batyra musiał ją oderwać od noszy , a Helka , wręcz przeciwnie , nawet nie podeszła do ojca .
tags: PROPN VERB PRON NOUN VERB ADP NOUN PUNCT CCONJ PROPN PUNCT ADV PUNCT PART PART VERB ADP NOUN PUNCT
tagged_tokens: Batyra_PROPN musiał_VERB ją_PRON oderwać_VERB od_ADP noszy_NOUN ,_PUNCT a_CCONJ Helka_PROPN ,_PUNCT wręcz_ADV przeciwnie_PART ,_PUNCT nawet_PART nie_PART podeszła_VERB do_ADP ojca_NOUN ._PUNCT

C) tokens: Batyra musiał ją oderwać od noszy , a Hela , wręcz odwrotnie , nawet nie doszła do ojca .
tags: PROPN VERB PRON NOUN VERB ADP NOUN PUNCT CCONJ PROPN PUNCT ADV PUNCT PART PART VERB ADP NOUN PUNCT
tagged_tokens: Batyra_PROPN musiał_VERB ją_PRON oderwać_VERB od_ADP noszy_NOUN ,_PUNCT a_CCONJ Hela_PROPN ,_PUNCT wręcz_ADV odwrotnie_PART ,_PUNCT nawet_PART nie_PART doszła_VERB do_ADP ojca_NOUN ._PUNCTD) tokens: Batyra musiał ją siłą odrywać od noszy , a Helka , przeciwnie , nawet nie podeszła do ojca .
tags: PROPN VERB PRON NOUN VERB ADP NOUN PUNCT CCONJ PROPN PUNCT ADV PUNCT PART PART VERB ADP NOUN PUNCT
tagged_tokens: Batyra_PROPN musiał_VERB ją_PRON siłą_NOUN odrywać_VERB od_ADP noszy_NOUN ,_PUNCT a_CCONJ Helka_PROPN ,_PUNCT przeciwnie_ADV ,_PUNCT nawet_PART nie_PART podeszła_VERB do_ADP ojca_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Strach mnie ogarnął, że nie potrafię zaopiekować się rodziną.
tags: NOUN AUX PRON PART VERB ADP REFL NOUN PUNCT
tagged_tokens: Strach_NOUN mnie_PRON ogarnął_VERB że_PART nie_AUX potrafię_VERB zaopiekować_VERB się_REFL rodziną_NOUN ._PUNCT

B) tokens: Obawiałem się, że nie będę w stanie zatroszczyć się o rodziną.
tags: VERB PRON PRON PART VERB ADP REFL NOUN PUNCT
tagged_tokens: Obawiałem_VERB się_PRON że_PRON nie_PART będę_VERB w_ADP stanie_NOUN zatroszczyć_VERB się_REFL o_ADP rodziną_NOUN ._PUNCT

C) tokens: Miałem obawy, czy dam radę zadbać o moją rodziną.
tags: VERB PUNCT PRON PART VERB ADP PRON NOUN PUNCT
tagged_tokens: Miałem_VERB obawy_NOUN czy_PUNCT dam_VERB radę_NOUN zadbać_VERB o_ADP moją_PRON rodziną_NOUN ._PUNCTD) tokens: Bał em się , że nie potrafię zadbać o rodzinę .
tags: VERB AUX PRON PUNCT SCONJ PART VERB VERB ADP NOUN PUNCT
tagged_tokens: Bał_VERB em_AUX się_PRON ,_PUNCT że_SCONJ nie_PART potrafię_VERB zadbać_VERB o_ADP rodzinę_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Beatrix zaprzeczyła .
tags: PROPN VERB PUNCT
tagged_tokens: Beatrix_PROPN zaprzeczyła_VERB ._PUNCT

B) tokens: Beata zaprzeczyła .
tags: PROPN VERB PUNCT
tagged_tokens: Beata_PROPN zaprzeczyła_VERB ._PUNCT

C) tokens: Beatrycze zaprzeczyła .
tags: PROPN VERB PUNCT
tagged_tokens: Beatrycze_PROPN zaprzeczyła_VERB ._PUNCTD) tokens: Beata zaprzeczyła .
tags: PROPN VERB PUNCT
tagged_tokens: Beata_PROPN zaprzeczyła_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Niezmącone niebo czaruje gwiezdnym niebem .
tags: ADJ NOUN VERB NOUN PUNCT
tagged_tokens: Niezmącone_ADJ niebo_NOUN czaruje_VERB gwiezdnym_ADJ niebem_NOUN ._PUNCT

B) tokens: Nieprzerwane niebo czaruje gwiazdozbiorami .
tags: ADJ NOUN VERB NOUN PUNCT
tagged_tokens: Nieprzerwane_ADJ niebo_NOUN czaruje_VERB gwiazdozbiorami_NOUN ._PUNCT

C) tokens: Czyste niebo czaruje gwiazdami .
tags: ADJ NOUN VERB NOUN PUNCT
tagged_tokens: Czyste_ADJ niebo_NOUN czaruje_VERB gwiazdami_NOUN ._PUNCTD) tokens: Bezchmurne niebo czaruje gwiazdami .
tags: ADJ NOUN VERB NOUN PUNCT
tagged_tokens: Bezchmurne_ADJ niebo_NOUN czaruje_VERB gwiazdami_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Biodra powinny być nachylone do tyłu .
tags: NOUN VERB AUX ADJ ADP NOUN PUNCT
tagged_tokens: Biodra_NOUN powinny_VERB być_AUX nachylone_ADJ do_ADP tyłu_NOUN ._PUNCT

B) tokens: Biodra powinny być przechylone do tyłu .
tags: NOUN VERB AUX ADJ ADP NOUN PUNCT
tagged_tokens: Biodra_NOUN powinny_VERB być_AUX przechylone_ADJ do_ADP tyłu_NOUN ._PUNCT

C) tokens: Biodra powinny być odgięte do tyłu .
tags: NOUN VERB AUX ADJ ADP NOUN PUNCT
tagged_tokens: Biodra_NOUN powinny_VERB być_AUX odgięte_ADJ do_ADP tyłu_NOUN ._PUNCTD) tokens: Biodra powinny być odchylone do tyłu .
tags: NOUN VERB AUX ADJ ADP NOUN PUNCT
tagged_tokens: Biodra_NOUN powinny_VERB być_AUX odchylone_ADJ do_ADP tyłu_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: - Bo mniemam , że pan także pochodzi z partyzantki akowskiej .
tags: PUNCT SCONJ VERB PRON PUNCT CCONJ PART NOUN VERB PRON ADP NOUN ADJ PUNCT
tagged_tokens: -_PUNCT Bo_SCONJ mniemam_VERB ,_że_CCONJ pan_PART także_ADV pochodzi_VERB z_ADP partyzantki_NOUN akowskiej_ADJ ._PUNCT

B) tokens: - Bo przypuszczam , że pan także pochodzi z partyzantki armiowej .
tags: PUNCT SCONJ VERB PRON PUNCT CCONJ PART NOUN VERB PRON ADP NOUN ADJ PUNCT
tagged_tokens: -_PUNCT Bo_SCONJ przypuszczam_VERB ,_że_CCONJ pan_PART także_ADV pochodzi_VERB z_ADP partyzantki_NOUN armiowej_ADJ ._PUNCT

C) tokens: - Bo domyŚlam się , że pan także wywodzi się z ugrupowania akowskiego .
tags: PUNCT SCONJ VERB PRON PUNCT CCONJ PART NOUN VERB PRON ADP NOUN ADJ PUNCT
tagged_tokens: -_PUNCT Bo_SCONJ domyŚlam_VERB się_PRON ,_że_CCONJ pan_PART także_ADV wywodzi_VERB się_PRON z_ADP ugrupowania_NOUN akowskiego_ADJ ._PUNCTD) tokens: - Bo domyślam się , że i pan wywodzi się z partyzantki akowskiej .
tags: PUNCT SCONJ VERB PRON PUNCT SCONJ PART NOUN VERB PRON ADP NOUN ADJ PUNCT
tagged_tokens: -_PUNCT Bo_SCONJ domyślam_VERB się_PRON ,_PUNCT że_SCONJ i_PART pan_NOUN wywodzi_VERB się_PRON z_ADP partyzantki_NOUN akowskiej_ADJ ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Ogromnie się z Justynką kłócił.
tags: ADV PRON ADP PROPN VERB PUNCT
tagged_tokens: Ogromnie_ADV się_PRON z_ADP Justynką_PROPN kłócił_VERB ._PUNCT

B) tokens: Strasznie się z Justynką spierał.
tags: ADV PRON ADP PROPN VERB PUNCT
tagged_tokens: Strasznie_ADV się_PRON z_ADP Justynką_PROPN spierał_VERB ._PUNCT

C) tokens: Wielce się z Justynką sprzeczał.
tags: ADV PRON ADP PROPN VERB PUNCT
tagged_tokens: Wielce_ADV się_PRON z_ADP Justynką_PROPN sprzeczał_VERB ._PUNCTD) tokens: Bardzo się z Justynką waśnił .
tags: ADV PRON ADP PROPN VERB PUNCT
tagged_tokens: Bardzo_ADV się_PRON z_ADP Justynką_PROPN waśnił_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Akumulator została osadzona w ścianie , a odbiornik umieszczono w belce nośnej w starannie zakamuflowanym załamaniu .
tags: NOUN AUX VPASS ADP NOUN PUNCT CCONJ NOUN VERB ADP NOUN ADJ ADP ADV ADJ NOUN PUNCT
tagged_tokens: Akumulator_NOUN została_AUX osadzona_VPASS w_ADP ścianie_NOUN ,_PUNCT a_CCONJ odbiornik_NOUN umieszczono_VERB w_ADP belce_NOUN nośnej_ADJ w_ADP starannie_ADV zakamuflowanym_ADJ załamaniu_NOUN ._PUNCT

B) tokens: Ogniwo została umiejscowiona w ścianie , a odbiornik postawiono w belce stropowej w starannie ukrytym wgłębieniu .
tags: NOUN AUX VPASS ADP NOUN PUNCT CCONJ NOUN VERB ADP NOUN ADJ ADP ADV ADJ NOUN PUNCT
tagged_tokens: Ogniwo_NOUN została_AUX umiejscowiona_VPASS w_ADP ścianie_NOUN ,_PUNCT a_CCONJ odbiornik_NOUN postawiono_VERB w_ADP belce_NOUN stropowej_ADJ w_ADP starannie_ADV ukrytym_ADJ wgłębieniu_NOUN ._PUNCT

C) tokens: Bateria została zabudowana w ścianie , a radio umieszczono w belce stropowej w starannie zamaskowanym ukryciu .
tags: NOUN AUX VPASS ADP NOUN PUNCT CCONJ NOUN VERB ADP NOUN ADJ ADP ADV ADJ NOUN PUNCT
tagged_tokens: Bateria_NOUN została_AUX zabudowana_VPASS w_ADP ścianie_NOUN ,_PUNCT a_CCONJ radio_NOUN umieszczono_VERB w_ADP belce_NOUN stropowej_ADJ w_ADP starannie_ADV zamaskowanym_ADJ ukryciu_NOUN ._PUNCTD) tokens: Bateria została zamurowana w ścianie , a radio umieszczono w belce stropowej w starannie zamaskowanym wgłębieniu .
tags: NOUN AUX ADJ ADP NOUN PUNCT CCONJ NOUN VERB ADP NOUN ADJ ADP ADV ADJ NOUN PUNCT
tagged_tokens: Bateria_NOUN została_AUX zamurowana_ADJ w_ADP ścianie_NOUN ,_PUNCT a_CCONJ radio_NOUN umieszczono_VERB w_ADP belce_NOUN stropowej_ADJ w_ADP starannie_ADV zamaskowanym_ADJ wgłębieniu_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Batyra musiał ją siłą odsuwać od mar , a Helka , na odwrót , nawet nie podejść do ojca .
tags: PROPN VERB PRON NOUN VERB ADP NOUN PUNCT CCONJ PROPN PUNCT ADV PUNCT PART PART VERB ADP NOUN PUNCT
tagged_tokens: Batyra_PROPN musiał_VERB ją_PRON siłą_NOUN odsuwać_VERB od_ADP mar_NOUN ,_PUNCT a_CCONJ Helka_PROPN ,_PUNCT na_ADV odwrót_PUNCT ,_PUNCT nawet_PART nie_PART podejść_VERB do_ADP ojca_NOUN ._PUNCT

B) tokens: Batyra zmuszony był ją siłą odrywać od noszy , a Helka , przeciwnie , nawet nie zbliżyć się do ojca .
tags: PROPN VERB VERB PRON NOUN VERB ADP NOUN PUNCT CCONJ PROPN PUNCT ADV PUNCT PART PART VERB ADP NOUN PUNCT
tagged_tokens: Batyra_PROPN zmuszony_VERB był_VERB ją_PRON siłą_NOUN odrywać_VERB od_ADP noszy_NOUN ,_PUNCT a_CCONJ Helka_PROPN ,_PUNCT przeciwnie_ADV ,_PUNCT nawet_PART nie_PART zbliżyć_VERB się_ADP do_ADP ojca_NOUN ._PUNCT

C) tokens: Batyra musiał ją siłą oddzierać od noszy , a Helka , odwrotnie , nawet nie przyjść do ojca .
tags: PROPN VERB PRON NOUN VERB ADP NOUN PUNCT CCONJ PROPN PUNCT ADV PUNCT PART PART VERB ADP NOUN PUNCT
tagged_tokens: Batyra_PROPN musiał_VERB ją_PRON siłą_NOUN oddzierać_VERB od_ADP noszy_NOUN ,_PUNCT a_CCONJ Helka_PROPN ,_PUNCT odwrotnie_ADV ,_PUNCT nawet_PART nie_PART przyjść_VERB do_ADP ojca_NOUN ._PUNCTD) tokens: Batyra musiał ją siłą odrywać od noszy , a Helka , przeciwnie , nawet nie podeszła do ojca .
tags: PROPN VERB PRON NOUN VERB ADP NOUN PUNCT CCONJ PROPN PUNCT ADV PUNCT PART PART VERB ADP NOUN PUNCT
tagged_tokens: Batyra_PROPN musiał_VERB ją_PRON siłą_NOUN odrywać_VERB od_ADP noszy_NOUN ,_PUNCT a_CCONJ Helka_PROPN ,_PUNCT przeciwnie_ADV ,_PUNCT nawet_PART nie_PART podeszła_VERB do_ADP ojca_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Obawiałem się , że nie potrafię zatroszczyć się o rodzinę .
tags: VERB AUX PRON PUNCT SCONJ PART VERB VERB ADP NOUN PUNCT
tagged_tokens: Obawiałem_VERB się_AUX ,_PUNCT że_SCONJ nie_PART potrafię_VERB zatroszczyć_VERB o_ADP rodzinę_NOUN ._PUNCT

B) tokens: Strach mnie ogarnął , że nie potrafię zająć się o rodzinę .
tags: NOUN AUX PRON PUNCT SCONJ PART VERB VERB ADP NOUN PUNCT
tagged_tokens: Strach_NOUN mnie_PRON ogarnął_AUX ,_PUNCT że_SCONJ nie_PART potrafię_VERB zająć_VERB się_ADP rodzinę_NOUN ._PUNCT

C) tokens: Bałem się , że nie potrafię poradzić sobie o rodzinę .
tags: VERB AUX PRON PUNCT SCONJ PART VERB VERB ADP NOUN PUNCT
tagged_tokens: Bałem_VERB się_AUX ,_PUNCT że_SCONJ nie_PART potrafię_VERB poradzić_VERB sobie_ADP o_ADP rodzinę_NOUN ._PUNCTD) tokens: Bał em się , że nie potrafię zadbać o rodzinę .
tags: VERB AUX PRON PUNCT SCONJ PART VERB VERB ADP NOUN PUNCT
tagged_tokens: Bał_VERB em_AUX się_PRON ,_PUNCT że_SCONJ nie_PART potrafię_VERB zadbać_VERB o_ADP rodzinę_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""A""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Beata odmówiła .
tags: PROPN VERB PUNCT
tagged_tokens: Beata_PROPN odmówiła_VERB ._PUNCT

B) tokens: Beatka wyparła .
tags: PROPN VERB PUNCT
tagged_tokens: Beatka_PROPN wyparła_VERB ._PUNCT

C) tokens: Beata protestowała .
tags: PROPN VERB PUNCT
tagged_tokens: Beata_PROPN protestowała_VERB ._PUNCTD) tokens: Beata zaprzeczyła .
tags: PROPN VERB PUNCT
tagged_tokens: Beata_PROPN zaprzeczyła_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""C""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Krystaliczne niebo zdobi gwiazdami .
tags: ADJ NOUN VERB NOUN PUNCT
tagged_tokens: Krystaliczne_ADJ niebo_NOUN zdobi_VERB gwiazdami_NOUN ._PUNCT

B) tokens: Jasne niebo błyszczy gwiazdami .
tags: ADJ NOUN VERB NOUN PUNCT
tagged_tokens: Jasne_ADJ niebo_NOUN błyszczy_VERB gwiazdami_NOUN ._PUNCT

C) tokens: Gwieździste niebo lśni gwiazdami .
tags: ADJ NOUN VERB NOUN PUNCT
tagged_tokens: Gwieździste_ADJ niebo_NOUN lśni_VERB gwiazdami_NOUN ._PUNCTD) tokens: Bezchmurne niebo czaruje gwiazdami .
tags: ADJ NOUN VERB NOUN PUNCT
tagged_tokens: Bezchmurne_ADJ niebo_NOUN czaruje_VERB gwiazdami_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Nieradzenie sobie pokazuje się w pewnych okazjach skuteczniejsze aniżeli sprzeciw , dlatego należy je momentami prezentować .
tags: NOUN VERB PRON ADP DET NOUN ADJ ADP NOUN PUNCT ADV VERB PRON NOUN VERB PUNCT
tagged_tokens: Nieradzenie_NOUN sobie_PRON pokazuje_VERB się_PRON w_ADP pewnych_DET okazjach_NOUN skuteczniejsze_ADJ aniżeli_ADP sprzeciw_NOUN ,_PUNCT dlatego_ADV należy_VERB je_PRON momentami_NOUN prezentować_VERB ._PUNCT

B) tokens: Bezsilność okazuje się w pewnych sytuacjach efektywniejsza niż opór , stąd warto ją czasem prezentować .
tags: NOUN VERB PRON ADP DET NOUN ADJ ADP NOUN PUNCT ADV VERB PRON NOUN VERB PUNCT
tagged_tokens: Bezsilność_NOUN okazuje_VERB się_PRON w_ADP pewnych_DET sytuacjach_NOUN efektywniejsza_ADJ niż_ADP opór_NOUN ,_PUNCT stąd_ADV warto_VERB ją_PRON czasem_NOUN prezentować_VERB ._PUNCT

C) tokens: Bezradność okazuje się w pewnych sytuacjach skuteczniejsza niż sprzeciwianie się , dlatego warto ją czasem manifestować .
tags: NOUN VERB PRON ADP DET NOUN ADJ ADP NOUN PUNCT ADV VERB PRON NOUN VERB PUNCT
tagged_tokens: Bezradność_NOUN okazuje_VERB się_PRON w_ADP pewnych_DET sytuacjach_NOUN skuteczniejsza_ADJ niż_ADP sprzeciwianie_NOUN się_PRON ,_PUNCT dlatego_ADV warto_VERB ją_PRON czasem_NOUN manifestować_VERB ._PUNCTD) tokens: Bezradność okazuje się w pewnych sytuacjach skuteczniejsza niż opór , dlatego warto ją czasem manifestować .
tags: NOUN VERB PRON ADP DET NOUN ADJ ADP NOUN PUNCT ADV VERB PRON NOUN VERB PUNCT
tagged_tokens: Bezradność_NOUN okazuje_VERB się_PRON w_ADP pewnych_DET sytuacjach_NOUN skuteczniejsza_ADJ niż_ADP opór_NOUN ,_PUNCT dlatego_ADV warto_VERB ją_PRON czasem_NOUN manifestować_VERB ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""D""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: Pośladki powinny być wygięte do tyłu .
tags: NOUN VERB AUX ADJ ADP NOUN PUNCT
tagged_tokens: Pośludki_NOUN powinny_VERB być_AUX wygięte_ADJ do_ADP tyłu_NOUN ._PUNCT

B) tokens: Biodra powinny być przechylone ku tyłowi .
tags: NOUN VERB AUX ADJ ADP NOUN PUNCT
tagged_tokens: Biodra_NOUN powinny_VERB być_AUX przechylone_ADJ ku_ADP tyłowi_NOUN ._PUNCT

C) tokens: Bioderka powinny być odrzucone wstecz .
tags: NOUN VERB AUX ADJ ADP NOUN PUNCT
tagged_tokens: Bioderka_NOUN powinny_VERB być_AUX odrzucone_ADJ wstecz_ADP ._PUNCTD) tokens: Biodra powinny być odchylone do tyłu .
tags: NOUN VERB AUX ADJ ADP NOUN PUNCT
tagged_tokens: Biodra_NOUN powinny_VERB być_AUX odchylone_ADJ do_ADP tyłu_NOUN ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
"{""answer"": ""B""}","Your task is to accurately select the option that corresponds exactly to an instance from the test split of the udpos dataset and of Polish language. Only generate a single option letter as your answer. You must not include any extra explanation.
---
Options are listed below:

A) tokens: - Bo podejrzewam , iż pan pochodzi z walki partyzanckiej AK .
tags: PUNCT SCONJ VERB PRON PUNCT SCONJ PART NOUN VERB PRON ADP NOUN NOUN PUNCT
tagged_tokens: -_PUNCT Bo_SCONJ podejrzewam_VERB ,_PUNCT iż_SCONJ pan_NOUN pochodzi_VERB z_ADP walki_NOUN partyzanckiej_NOUN AK_NOUN ._PUNCT

B) tokens: - Gdyż podejrzewam , że pan wywodzi się z walk partyzanckich AK .
tags: SCONJ VERB PRON PUNCT SCONJ PART NOUN VERB PRON ADP NOUN NOUN PUNCT
tagged_tokens: -_SCONJ podejrzewam_VERB ,_PUNCT że_SCONJ pan_NOUN wywodzi_VERB się_PRON z_ADP walk_NOUN partyzanckich_NOUN AK_NOUN ._PUNCT

C) tokens: - Ponieważ podejrzewam , że pan wywodzi się z ruchu partyzanckiego AK .
tags: SCONJ VERB PRON PUNCT SCONJ PART NOUN VERB PRON ADP NOUN ADJ PUNCT
tagged_tokens: -_SCONJ podejrzewam_VERB ,_PUNCT że_SCONJ pan_NOUN wywodzi_VERB się_PRON z_ADP ruchu_NOUN partyzanckiego_ADJ AK_NOUN ._PUNCTD) tokens: - Bo domyślam się , że i pan wywodzi się z partyzantki akowskiej .
tags: PUNCT SCONJ VERB PRON PUNCT SCONJ PART NOUN VERB PRON ADP NOUN ADJ PUNCT
tagged_tokens: -_PUNCT Bo_SCONJ domyślam_VERB się_PRON ,_PUNCT że_SCONJ i_PART pan_NOUN wywodzi_VERB się_PRON z_ADP partyzantki_NOUN akowskiej_ADJ ._PUNCT
---
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {""properties"": {""foo"": {""title"": ""Foo"", ""description"": ""a list of strings"", ""type"": ""array"", ""items"": {""type"": ""string""}}}, ""required"": [""foo""]}
the object {""foo"": [""bar"", ""baz""]} is a well-formatted instance of the schema. The object {""properties"": {""foo"": [""bar"", ""baz""]}} is not well-formatted.

Here is the output schema:
```
{""properties"": {""answer"": {""title"": ""Answer"", ""description"": ""Answer to the above multiple choice question. Answer must either be A, B, C, or D"", ""type"": ""string""}}, ""required"": [""answer""]}
```"
